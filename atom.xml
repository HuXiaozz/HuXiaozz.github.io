<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>晓晓屋</title>
  
  <subtitle>Happy Everyday</subtitle>
  <link href="https://huxiaozz.github.io/atom.xml" rel="self"/>
  
  <link href="https://huxiaozz.github.io/"/>
  <updated>2021-10-02T09:05:06.182Z</updated>
  <id>https://huxiaozz.github.io/</id>
  
  <author>
    <name>HuXiao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>部署网站</title>
    <link href="https://huxiaozz.github.io/2021/09/29/bu-shu-wang-zhan/"/>
    <id>https://huxiaozz.github.io/2021/09/29/bu-shu-wang-zhan/</id>
    <published>2021-09-29T06:39:10.000Z</published>
    <updated>2021-10-02T09:05:06.182Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vue项目中没有config文件夹，解决办法"><a href="#vue项目中没有config文件夹，解决办法" class="headerlink" title="vue项目中没有config文件夹，解决办法"></a>vue项目中没有config文件夹，解决办法</h2><p>自己写了一个问答社区网站，但是通过 npm run build 打包出来，将打包出来的文件夹扔到tomcat中的worksapp中，启动tomcat发现出现空白页面，找了其他资料，都是修改vue项目config文件夹下的 index.js，</p><p>但是这个方法是针对完整的webpack才有这个目录，我的没有那怎么办，去看了看官方文档结合网上的资料。</p><p>解决方法：没有就创建一个，如下创建vue.config.js</p><p><img src="/2021/09/29/bu-shu-wang-zhan/2.png" alt="2"></p><p>创建vue.config.js文件，Vue 项目中 vue.config.js 文件就等同于 webpack 的 webpack.config.js</p><p>如果没有这个文件夹，系统会加载默认的配置文件，如果你在这个文件里设置了相应的属性，系统会将默认的和你设置的合并在一起产生一个新的配置文件，比如默认：w=1，y=2，但是你在这个文件里设置了w=0，那么就会加载w=0，y=2，这个样子，新建这个文件系统会默认加载不用另外设置。这个文件里的详细字段解释参考下面链接：<a href="https://blog.csdn.net/zz00008888/article/details/109579625">https://blog.csdn.net/zz00008888/article/details/109579625</a></p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">module.exports = {    publicPath: './',//默认的'/'是绝对路径，如果不确定在根路径，改成相对路径'./'，如果你知道项目创建的文件目录也可以写成项目的目录，比如我的时问答社区就可以写成   /wenda    相对路径更加方便，不用在更改打包名字时还要改路径    outputDir: 'wenda',// 输出文件目录}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="对网站进行部署，部署到linux服务器中，linux用的是CentOS"><a href="#对网站进行部署，部署到linux服务器中，linux用的是CentOS" class="headerlink" title="对网站进行部署，部署到linux服务器中，linux用的是CentOS"></a>对网站进行部署，部署到linux服务器中，linux用的是CentOS</h2><p>首先将后端springboot项目打包，先clean然后package打包，打包出来的jar文件在target中</p><p><img src="/2021/09/29/bu-shu-wang-zhan/3.png" alt="3"></p><p>然后进行前端vue项目打包，运行命令npm run build进行打包，打包后的目录在项目目录里，名字叫做下面圈圈里的名字，默认时dist</p><p><img src="/2021/09/29/bu-shu-wang-zhan/4.png" alt="4"></p><h3 id="1-安装jdk运行java项目"><a href="#1-安装jdk运行java项目" class="headerlink" title="1 安装jdk运行java项目"></a>1 安装jdk运行java项目</h3><p>jdk：既可以运行java项目也可以编译java语言</p><p>jre：只能运行java项目</p><p>1 首先查看CentOS是否有原生版本的java，通过命令查看</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">rpm</span> -qa <span class="token operator">|</span> <span class="token function">grep</span> jdk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2 如果存在则通过命令删除</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">rpm</span> -e --nodeps java-1.8.0-openjdk-1.8.0.65-3.b17.el7.x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>java-1.8.0-openjdk-1.8.0.65-3.b17.el7.x86_64为 1 中命令查出来的名字</p><p>3 查看是否删除成功</p><p>运行 1 中的命令，查询结果为空则删除成功</p><p>4 在 /usr/local 目录下新建 java 文件夹，并进入</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">cd</span> /usr/local<span class="token function">mkdir</span> java<span class="token builtin class-name">cd</span> java<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>5 如果你用的时xshell那就打开 Xftp，然后将 JDK 安装文件拷贝到 java 目录，如果用的时finalshell直接向目录中拉过去就行，或者进入目录点击上传都可</p><p>6 使用命令进行安装，注意下载的jdk钥匙linux版本的rpm压缩包</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">rpm</span> -ivh jdk-8u221-linux-x64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>7 配置环境变量</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">vim</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>按 i 进行输入，复制如下内容到文件最底部追加</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/java/jdk1.8.0_221-amd64<span class="token assign-left variable">CLASSPATH</span><span class="token operator">=</span>%JAVA_HOME%/lib:%JAVA_HOME%/jre/lib<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$JAVA_HOME</span>/bin:<span class="token variable">$JAVA_HOME</span>/jre/bin<span class="token builtin class-name">export</span> <span class="token environment constant">PATH</span> CLASSPATH JAVA_HOME<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后按按 Esc 退出，然后输入 :x 回车即为保存退出。如果输入错了，想要保存源文件那么输入Esc 后输入 :q! 表示不保存强制退出。</p><p>8 让配置生效</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>9 检查安装是否成功</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">java -version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-安装tomcat"><a href="#2-安装tomcat" class="headerlink" title="2 安装tomcat"></a>2 安装tomcat</h3><p>1 在 /usr/local 目录下新建 tomcat 文件夹，并进入。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">cd</span> /usr/local<span class="token function">mkdir</span> tomcat<span class="token builtin class-name">cd</span> tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>2 xshell打开 Xftp，finalshell直接上传，将 Tomcat 压缩文件拷贝到 tomcat 目录。</p><p>3 解压缩。注意下载linux版本</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">tar</span> -zxvf apache-tomcat-9.0.34.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4 进入 /apache-tomcat-9.0.34/bin 路径启动 Tomcat。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./startup.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>关闭toncat</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./shutdown.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动成功之后，可以在 CentOS 中直接访问。 但是在本地无法访问，这是因为 CentOS 没有开放 8080 端口导致的。</p><p>5 CentOS 开放 8080 端口。</p><p>如果你是组的阿里或者腾讯服务器，那么要在网站的工作台中配置，比如阿里服务器要在这里配置</p><p><img src="/2021/09/29/bu-shu-wang-zhan/5.png" alt="5"></p><p>而如果你要自己配置服务其，就是弄一个linux系统那么就要，开放端口号</p><p>1 查看防火墙状态</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">firewall-cmd --state<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>runing 表示开启，not runing 表示关闭，如果关闭，执行</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">systemctl start firewalld.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2 开启 8080 端口</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">8080</span>/tcp --permanent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3 输入命令重启防火墙</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">systemctl restart firewalld.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4 输入命令重新载入配置</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5 打开浏览器，访问成功。</p><p>6 将导出的vue项目拷贝到 Tomcat/webapps 下，启动访问即可。本项目就是将webda目录考入上述文件夹下。</p><h2 id="3-安装-MySQL"><a href="#3-安装-MySQL" class="headerlink" title="3 安装 MySQL"></a>3 安装 MySQL</h2><p>1 新建 /usr/local/mysql，将 MySQL 安装包拷贝过去。</p><p>2 进入 /usr/local/mysql，解压。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">tar</span> -xvf mysql-8.0.20-1.el7.x86_64.rpm-bundle.tar<span class="token comment">#mysql-8.0.20-1.el7.x86_64.rpm-bundle.tar为下载的数据库名字，要改成你自己的名字</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3 安装 MySQL 之前需要先删除 mariadb，检查是否存在 mariadb</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">rpm</span> -qa <span class="token operator">|</span> <span class="token function">grep</span> mariadb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4 卸载 mariadb</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">rpm</span> -e mariadb-libs-5.5.44-2.el7.centos.x86_64 --nodeps<span class="token comment">#mariadb-libs-5.5.44-2.el7.centos.x86_64为上边命令查出来的名字</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>5 安装 MySQL，注意安装顺序不要变，应为他们相互之间有依赖关系顺序为common&gt;libs&gt;client&gt;server</p><p>这几个rpm包都是 2 中的包解压出来的</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">rpm</span> -ivh mysql-community-common-8.0.20-1.el7.x86_64.rpm --nodeps--force<span class="token function">rpm</span> -ivh mysql-community-libs-8.0.20-1.el7.x86_64.rpm --nodeps --force<span class="token function">rpm</span> -ivh mysql-community-client-8.0.20-1.el7.x86_64.rpm --nodeps--force<span class="token function">rpm</span> -ivh mysql-community-server-8.0.20-1.el7.x86_64.rpm --nodeps--force<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>6 检查安装结果</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">rpm</span> -qa <span class="token operator">|</span> <span class="token function">grep</span> mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>7 初始化 MySQL</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysqld --initialize<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>8 授权防火墙</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">chown</span> mysql:mysql /var/lib/mysql -R<span class="token punctuation">;</span>systemctl start mysqld.service<span class="token punctuation">;</span>systemctl <span class="token builtin class-name">enable</span> mysqld<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>9 查看数据库默认密码</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">cat</span> /var/log/mysqld.log <span class="token operator">|</span> <span class="token function">grep</span> password<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>10 登录数据库</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql -uroot -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>11 复制粘贴密码</p><p>12 登录成功，修改密码</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">ALTER USER 'root'@'localhost' IDENTIFIED WITHmysql_native_password BY '你的密码';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>13 exit 退出，使用新密码重新登陆。</p><p>14 开启远程访问。</p><p>首先登录数据库</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">use mysql        #打开mysql数据库<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#将host设置为%表示任何ip都能连接mysql，当然您也可以将host指定为某个ipupdate user set host='%' where user='root' and host='localhost';flush privileges;    #刷新权限表，使配置生效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后我们就能远程连接我们的mysql了。</p><p>如果您想关闭远程连接，恢复mysql的默认设置（只能本地连接），您可以通过以下步骤操作：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">use mysql        #打开mysql数据库#将host设置为localhost表示只能本地连接mysqlupdate user set host='localhost' where user='root';flush privileges;    #刷新权限表，使配置生效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>备注：您也可以添加一个用户名为yuancheng，密码为123456，权限为%（表示任意ip都能连接）的远程连接用户。命令参考如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">grant all on *.* to 'yuancheng'@'%' identified by '123456';flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>15 CentOS 开放 3306 端口。用于远程链接数据库</p><p>如果时租的阿里云或者腾讯云参考上面如何开放端口，在防火墙里添加就好了。</p><p>自己服务要运行下面的命令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">3306</span>/tcp --permanentsystemctl restart firewalld.servicefirewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>到现在位置你的服务其就可以部署上去了，别忘记更改后端项目链接数据库的密码之类的。</p><p>我的项目链接：<a href="http://123.57.15.121:8080/wenda/#/">http://123.57.15.121:8080/wenda/#/</a></p><p>欢迎来我的小论坛来玩，听说ip地址暴漏出去挺严重的会导致别人的攻击，小伙伴们别攻击我啊，学生党不容易啊，防君子不防小人吧，网站也没啥利益。</p><p>本来打算将头像与帖子的显示图片设置成上传的，用户可以更改头像和帖子封面的，不是固定的，但是我看了看我租的服务器的内存，机器硬盘总共才60G，真的好小啊，果然是打折产品。。。，果断设置成固定的，不然服务器存不了多少东西就满了。。。，楼主本人还想干点别的事情，所以就这样吧！</p><p>感言：楼主由于租的服务器，阿里云服务器里边啥都没有特别干净导致安装异常顺利，当然了用  宝塔  来安装更加便捷，一键安装，但是我想作为一个程序员怎么能傻瓜式操作呢，然后就上网查看资料完成了上述的安装步骤，然后还买了个域名，但是域名要备案，备案还要居住证明，楼主本人已经吐血，太麻烦了也，当初卖服务器的时候阿里云新手账号60能够租用一年，但是没有香港的服务器，选择不在大陆的服务器能够免于备案，然后就导致了我想在只能通过ip地址访问，域名被搁置了，好难啊。然后在网上看到各种博主的踩坑记录，看看有没有你的坑。</p><pre class="line-numbers language-none"><code class="language-none">错误 mysqld: error while loading shared libraries: libnuma.so.1: cannot open shared object file: No such file or directory解决方案 这是却少 numactl 这个时候如果是Centos就 yum -y install numactl 就可以 解决这个问题了.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">错误 Job for mysqld.service failed because the control process exited with error code解决方案 是因为 /var/lib/mysql /这个目标路径已经存在/var/lib/mysql /，导致无法初始 化。删除/var/lib/mysql /后重启MySQL服务就可以了！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">错误 You must reset your password using ALTER USER statement before executing this statement解决方案 ALTER USER USER() IDENTIFIED BY '123456';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">错误 Your password does not satisfy the current policy requirements 解决方案1、首先需要设置密码的验证强度等级，设置 validate_password_policy 的全局参 数为 LOW 即可， 输入设值语句 “ set global validate_password_policy=LOW; ” 进行设值， 2、当前密码长度为 8 ，如果不介意的话就不用修改了，按照通用的来讲，设置为 6 位的密码，设置 validate_password_length 的全局参数为 6 即可， 输入设值语句 “ set global validate_password_length=6; ” 进行设值，3、现在可以为 mysql 设置简单密码了，只要满足六位的长度即可， 输入修改语句 “ ALTER USER 'root'@'localhost' IDENTIFIED BY '123456'; ” 可以看 到修改成功，表示密码策略修改成功了当然你也可以设置复杂一点的密码，这样就不会报错了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">1初始化如果有libssl.so.1.1相关的报错，要把默认的openssl升级到1.1以上版本，参考博客https://qq52o.me/2732.html 解决此问题2如果直接到官网下载现版本会是el8，初始化时会有/usr/lib64/libstdc++.so.6相关报错(因为版本低)，提示差了一大堆mysqld运行需要的版本库，建议直接找el7的mysql解决问题，下载地址https://centos.pkgs.org/3 还是初始化，报错libaio.so.1，解决方法 yum install -y libaio4 root操作 ERROR 1396 (HY000) 的报错是因为之前创建过但删除不干净，重新删除drop user root@root;5 按流程操作但MySQL远程连接不成功大概率是因为阿里云服务器没有开放端口(安全组)6 防火墙注意指令顺序，记得云服务器把端口开放就行7 前后端都丢到服务器上以后图片资源读取不了(404)，是因为table.html中img的路径读取问题，/改成./就行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后感谢哔哩哔哩up主提供的学习资料</p><p>视频链接：<a href="https://www.bilibili.com/video/BV1Z5411W7m7">https://www.bilibili.com/video/BV1Z5411W7m7</a></p><p><img src="/2021/09/29/bu-shu-wang-zhan/9.29.jpg" alt="图"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;vue项目中没有config文件夹，解决办法&quot;&gt;&lt;a href=&quot;#vue项目中没有config文件夹，解决办法&quot; class=&quot;headerlink&quot; title=&quot;vue项目中没有config文件夹，解决办法&quot;&gt;&lt;/a&gt;vue项目中没有config文件夹，解决</summary>
      
    
    
    
    
    <category term="vue" scheme="https://huxiaozz.github.io/tags/vue/"/>
    
    <category term="tomcat" scheme="https://huxiaozz.github.io/tags/tomcat/"/>
    
    <category term="网站部署" scheme="https://huxiaozz.github.io/tags/%E7%BD%91%E7%AB%99%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>英文分词</title>
    <link href="https://huxiaozz.github.io/2021/09/22/ying-wen-fen-ci/"/>
    <id>https://huxiaozz.github.io/2021/09/22/ying-wen-fen-ci/</id>
    <published>2021-09-22T11:35:13.000Z</published>
    <updated>2021-09-27T13:07:47.277Z</updated>
    
    <content type="html"><![CDATA[<p>被导师要求写一篇英文分析方面的文章，选了一个英文分析的工具 nltk ，首先在命令行中运行   pip install nltk  安装，然后  运行nltk.download() 下载语料库，但是发现链接失败报错：由于连接方在一段时间后没有正确答复或连接的主机没有反应,连接尝试失败。</p><h2 id="nltk-download-由于连接方在一段时间后没有正确答复或连接的主机没有反应-连接尝试失败。"><a href="#nltk-download-由于连接方在一段时间后没有正确答复或连接的主机没有反应-连接尝试失败。" class="headerlink" title="nltk.download()由于连接方在一段时间后没有正确答复或连接的主机没有反应,连接尝试失败。"></a>nltk.download()由于连接方在一段时间后没有正确答复或连接的主机没有反应,连接尝试失败。</h2><p>解决办法，从github官网手动下载解压。</p><p>地址：<a href="https://github.com/nltk/nltk_data">nltk/nltk_data: NLTK Data (github.com)</a></p><p>然后将下载的文件解压，解压后会有一个packages文件夹，将packages文件夹里面的东西，全部文件复制下来，然后黏贴在nltk_data文件夹里，nltk_data没有的话创建一个，至于nltk_data文件夹的路径在</p><p>运行程序</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> nltk<span class="token keyword">from</span> nltk<span class="token punctuation">.</span>stem <span class="token keyword">import</span> SnowballStemmerstemmer<span class="token operator">=</span> SnowballStemmer<span class="token punctuation">(</span><span class="token string">"english"</span><span class="token punctuation">)</span> <span class="token comment">#选择语言，如：英语</span>stemmer<span class="token punctuation">.</span>stem<span class="token punctuation">(</span><span class="token string">"countries"</span><span class="token punctuation">)</span> <span class="token comment">#设置一个词汇</span><span class="token keyword">from</span> nltk<span class="token punctuation">.</span>stem <span class="token keyword">import</span> WordNetLemmatizerwnl<span class="token operator">=</span>WordNetLemmatizer<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>wnl<span class="token punctuation">.</span>lemmatize<span class="token punctuation">(</span><span class="token string">'countries'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#输出还原的词汇，会输出country</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>pycharm会输出提示如下：</p><p>Searched in:<br>    - ‘C:\Users\胡余生/nltk_data’<br>        - ‘D:\anaconda\nltk_data’<br>        - ‘D:\anaconda\share\nltk_data’<br>        - ‘D:\anaconda\lib\nltk_data’<br>        - ‘C:\Users\胡余生\AppData\Roaming\nltk_data’<br>        - ‘C:\nltk_data’<br>        - ‘D:\nltk_data’<br>        - ‘E:\nltk_data’</p><p>选一个路径创建文件夹nltk_data，然后将解压后的文件夹里的packages放入nltk_data，然后就成功了。</p><p>分析方法参考如下链接：</p><p><a href="https://blog.csdn.net/weixin_39717825/article/details/110177611">https://blog.csdn.net/weixin_39717825/article/details/110177611</a></p><p>安装Gephi，Gephi运行需要java环境，安装好Gephi后修改安装Gephi目录下的etc文件夹中的gephi.conf，用记事本打开，将javahome前面的#号去掉并且修改javahome路径，javahome路径为所安装的jdk路径</p><p>Gephi：<a href="https://gephi.org/">https://gephi.org/</a><br>JDK：<a href="https://www.oracle.com/java/technologies/javase-downloads.html">https://www.oracle.com/java/technologies/javase-downloads.html</a></p><p>如果要调用nltk里的工具包，别忘记吧packages里的文件加相应的文件里的压缩包解压，比如运用nltk_data\chunkers里的工具要将maxent_ne_chunker.zip压缩包解压。</p><p>Gephi工具里的预览有时候会显示不出来，我的将项目保存，重启软件加载项目刷新就出来了。</p><p>网上还有用这种方法解决的（对我无效）：</p><p>删除user directory <a href="https://github.com/gephi/gephi/wiki/Troubleshooting">https://github.com/gephi/gephi/wiki/Troubleshooting</a></p><p>更新Java的jdk版本</p><h2 id="Gephi使用以及导入数据时边表格选不了的解决方法"><a href="#Gephi使用以及导入数据时边表格选不了的解决方法" class="headerlink" title="Gephi使用以及导入数据时边表格选不了的解决方法"></a>Gephi使用以及导入数据时边表格选不了的解决方法</h2><p>应用gephi进行分析，首先点击导出表格</p><p><img src="/2021/09/22/ying-wen-fen-ci/1.png" alt="1"></p><p>然后向输出表格里写入数据</p><p><img src="/2021/09/22/ying-wen-fen-ci/2.png" alt="2"></p><p>格式为csv格式，然后将写入的数据导入gephi</p><p><img src="/2021/09/22/ying-wen-fen-ci/3.png" alt="3"></p><p>选择输入电子表格</p><p><img src="/2021/09/22/ying-wen-fen-ci/4.png" alt="4"></p><p>选择边表格（注意：如果不用其输出表格的文件写入数据，将会选不了边表格选项）</p><p><img src="/2021/09/22/ying-wen-fen-ci/5.png" alt="5"></p><p>导入的时候选择加入当前项目，无向图</p><p>然后就添加成功了，然后更改点和边的外观，点和边是一样的这里只介绍点的更改</p><p>更改点的度数与大小相关，更改完点击应用！！！</p><p><img src="/2021/09/22/ying-wen-fen-ci/6.png" alt="更改点的大小与度数相关"></p><p>更改字体颜色</p><p><img src="/2021/09/22/ying-wen-fen-ci/7.png" alt="更改点的字体颜色"></p><p>更改点的颜色随度数变化</p><p><img src="/2021/09/22/ying-wen-fen-ci/8.png" alt="点的颜色随度数变化"></p><p>选择布局</p><p><img src="/2021/09/22/ying-wen-fen-ci/9.png" alt="布局"></p><p>点的外观更改的时候别忘记点击应用！！！选完布局点击运行。</p><p>运行后结果</p><p><img src="/2021/09/22/ying-wen-fen-ci/10.png" alt="概览结果"></p><p>然后点击预览，在下面窗口设置。</p><p><img src="/2021/09/22/ying-wen-fen-ci/11.png" alt="预览点设置"></p><p>给label添加数据</p><p><img src="/2021/09/22/ying-wen-fen-ci/13.png" alt="给label添加数据"></p><p>设置边的厚度</p><p><img src="/2021/09/22/ying-wen-fen-ci/12.png" alt="边的厚度"></p><p>最终结果图</p><p><img src="/2021/09/22/ying-wen-fen-ci/re.png" alt="最终结果图"></p><p>共现网络绘制完成，完结撒花！！！</p><p><img src="/2021/09/22/ying-wen-fen-ci/9.27.jpg" alt="图"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;被导师要求写一篇英文分析方面的文章，选了一个英文分析的工具 nltk ，首先在命令行中运行   pip install nltk  安装，然后  运行nltk.download() 下载语料库，但是发现链接失败报错：由于连接方在一段时间后没有正确答复或连接的主机没有反应,连</summary>
      
    
    
    
    
    <category term="英文分词" scheme="https://huxiaozz.github.io/tags/%E8%8B%B1%E6%96%87%E5%88%86%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>spring boot+vue社区</title>
    <link href="https://huxiaozz.github.io/2021/09/21/shequ/"/>
    <id>https://huxiaozz.github.io/2021/09/21/shequ/</id>
    <published>2021-09-21T07:48:58.000Z</published>
    <updated>2021-10-02T12:10:20.675Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sprint-boot-vue-实现简单的社区"><a href="#sprint-boot-vue-实现简单的社区" class="headerlink" title="sprint boot + vue 实现简单的社区"></a>sprint boot + vue 实现简单的社区</h2><p>首先感谢 豆约翰 提供的开源项目，跟着学习收获很大。</p><p>链接地址如下：<a href="https://www.bilibili.com/video/BV1Wz4y1U7vC?spm_id_from=333.999.0.0">https://www.bilibili.com/video/BV1Wz4y1U7vC?spm_id_from=333.999.0.0</a></p><p>学完后的总结</p><p>修改了添加标签的时候书写#导致多出一个#导致根据标签查询数据出错问题</p><p>修改了点击下一页点解热门标签导致查询失败问题</p><p>修改了删除帖子导致评论没有删除问题</p><p>修改了更改已经发出的帖子标签更改不了问题</p><p>添加了人物头像</p><p>添加了帖子图片</p><h2 id="主要应用的技术"><a href="#主要应用的技术" class="headerlink" title="主要应用的技术"></a>主要应用的技术</h2><p>前端：vue ，vuex， vueRouter， Axios， Buefy ，Element ，Vditor， DarkReader</p><p>后端：spring boot ， mysql ， mybatis ，mybatis-plus ，spring security，jwt，lombok</p><h2 id="新建仓库克隆的时候报错fatal-unable-to-access-‘https-github-com-39-OpenSSL-SSL-read-Connection-was-reset-errno-10054"><a href="#新建仓库克隆的时候报错fatal-unable-to-access-‘https-github-com-39-OpenSSL-SSL-read-Connection-was-reset-errno-10054" class="headerlink" title="新建仓库克隆的时候报错fatal: unable to access ‘https://github.com/...........': OpenSSL SSL_read: Connection was reset, errno 10054"></a>新建仓库克隆的时候报错fatal: unable to access ‘<a href="https://github.com/...........'">https://github.com/...........'</a>: OpenSSL SSL_read: Connection was reset, errno 10054</h2><p>产生原因：一般是这是因为服务器的SSL证书没有经过第三方机构的签署，所以才报错</p><p>按照网上解决办法，解除ssl验证后，再次git即可</p><p>git config –global http.sslVerify “false”</p><p>再次克隆成功！</p><h2 id="克隆仓库报错fatal-unable-to-access-‘xxxxxxxxxxxxxxxx’-OpenSSL-SSL-read-Connection-was-reset-errno-10054"><a href="#克隆仓库报错fatal-unable-to-access-‘xxxxxxxxxxxxxxxx’-OpenSSL-SSL-read-Connection-was-reset-errno-10054" class="headerlink" title="克隆仓库报错fatal: unable to access ‘xxxxxxxxxxxxxxxx’: OpenSSL SSL_read: Connection was reset, errno 10054"></a>克隆仓库报错fatal: unable to access ‘xxxxxxxxxxxxxxxx’: OpenSSL SSL_read: Connection was reset, errno 10054</h2><p>git clone https:xxxxxxxxxxxxx</p><p>改为</p><p>git clone git:xxxxxxxxxxxxx</p><p>克隆成功。</p><p>改完bug代码存放地址</p><p><a href="https://github.com/HuXiaozz/luntan">https://github.com/HuXiaozz/luntan</a></p><p>最后表现结果截图</p><p><img src="/2021/09/21/shequ/1.png" alt="主界面截图"></p><p><img src="/2021/09/21/shequ/2.png" alt="个人中心截图"></p><p>完结撒花！</p><p><img src="/2021/09/21/shequ/10-2.jpg" alt="心情美美哒"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;sprint-boot-vue-实现简单的社区&quot;&gt;&lt;a href=&quot;#sprint-boot-vue-实现简单的社区&quot; class=&quot;headerlink&quot; title=&quot;sprint boot + vue 实现简单的社区&quot;&gt;&lt;/a&gt;sprint boot + v</summary>
      
    
    
    
    
    <category term="spring boot" scheme="https://huxiaozz.github.io/tags/spring-boot/"/>
    
    <category term="vue" scheme="https://huxiaozz.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>标注图片环境</title>
    <link href="https://huxiaozz.github.io/2021/09/20/python-huan-jing/"/>
    <id>https://huxiaozz.github.io/2021/09/20/python-huan-jing/</id>
    <published>2021-09-20T07:55:45.000Z</published>
    <updated>2021-09-27T13:21:54.342Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在Anaconda-prompt中创建，激活，删除python虚拟环境"><a href="#在Anaconda-prompt中创建，激活，删除python虚拟环境" class="headerlink" title="在Anaconda prompt中创建，激活，删除python虚拟环境"></a>在Anaconda prompt中创建，激活，删除python虚拟环境</h2><p>conda create -n 环境名称，直接默认anaconda所用的python版本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#创建虚拟环境，python=3 可以精确到3.x某版本</span>conda create <span class="token operator">-</span>n 虚拟环境名称 python<span class="token operator">=</span><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>切换python虚拟环境，在命令行或者anaconda prompt中输入：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Linux系统:<span class="token builtin class-name">source</span> activate 虚拟环境名称  Windows:activate 虚拟环境名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在anaconda中删除python虚拟环境</p><pre class="line-numbers language-none"><code class="language-none">conda remove -n 虚拟环境名称 --all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装labelme软件"><a href="#安装labelme软件" class="headerlink" title="安装labelme软件"></a>安装labelme软件</h2><p>(1)  打开cmd，anaconda打开anaconda prompt</p><p>(2)  复制粘贴命令：pip install labelme</p><p>打开cmd，anaconda打开anaconda prompt</p><p>复制粘贴命令：labelme，即可打开labelme软件</p><p>cmd窗口与打开的labelme软件窗口如下：</p><p><img src="/2021/09/20/python-huan-jing/1.png" alt="labelme界面"></p><p>使用教程在网上搜一下就好了，如下：</p><p>labelme使用教程：<a href="https://blog.csdn.net/fengyingv/article/details/110649612">https://blog.csdn.net/fengyingv/article/details/110649612</a></p><p>完结撒花！！！</p><p><img src="/2021/09/20/python-huan-jing/9.2701.jpg" alt="图"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;在Anaconda-prompt中创建，激活，删除python虚拟环境&quot;&gt;&lt;a href=&quot;#在Anaconda-prompt中创建，激活，删除python虚拟环境&quot; class=&quot;headerlink&quot; title=&quot;在Anaconda prompt中创建，激活</summary>
      
    
    
    
    
    <category term="python" scheme="https://huxiaozz.github.io/tags/python/"/>
    
    <category term="anconda" scheme="https://huxiaozz.github.io/tags/anconda/"/>
    
    <category term="环境" scheme="https://huxiaozz.github.io/tags/%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>hexo和matery主题搭建静态博客</title>
    <link href="https://huxiaozz.github.io/2021/09/17/hello-world/"/>
    <id>https://huxiaozz.github.io/2021/09/17/hello-world/</id>
    <published>2021-09-17T01:22:52.120Z</published>
    <updated>2021-09-19T06:34:48.736Z</updated>
    
    <content type="html"><![CDATA[<p>下面是如何搭建hexo和matery主题的静态博客。</p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><table><thead><tr><th><strong>配置选项</strong></th><th><strong>默认值</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code>中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code>中的某个值</td><td>文章特征图</td></tr><tr><td>top</td><td>true</td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td>false</td><td>表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td>表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code>的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td>true</td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td>false</td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr></tbody></table><p>实列</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 基于Hexo的matery主题搭建博客<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-01-09 16:44:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 微笑紫瞳星<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> 工具<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> blog  <span class="token punctuation">-</span> hexo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>hexo n “xxx” 创建md</p><h2 id="关于hexo中主题Matery中网易云歌单不显示问题"><a href="#关于hexo中主题Matery中网易云歌单不显示问题" class="headerlink" title="关于hexo中主题Matery中网易云歌单不显示问题"></a>关于hexo中主题Matery中网易云歌单不显示问题</h2><p>这一个应该是一个bug，经过测试，网易云单曲，专辑，以及其他网站的歌单都是好用的，只有网易云歌单不显示，换一个吧，我用的QQ音乐。</p><h2 id="用hexo和Matery搭建个人静态博客"><a href="#用hexo和Matery搭建个人静态博客" class="headerlink" title="用hexo和Matery搭建个人静态博客"></a>用hexo和Matery搭建个人静态博客</h2><p>我搭建的时候参考了下面的链接，第一个链接去看去和使用git和github，但是第一个链接使用next主题，要想搭建matery主题参考第二个链接。</p><p>参考：<a href="https://zhuanlan.zhihu.com/p/102592286">https://zhuanlan.zhihu.com/p/102592286</a></p><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md</a></p><p>通过上面两个网址就可以完美的搭建出自己的静态博客了</p><p>但是如果你要搭建Matery主题博客时，这个博客里没有集成评论系统</p><p>我使用的是Valine做的评论系统，matery开发者大佬在其config中说到最好不要用gitalk，会导致别人攻击将你github，可能会将你的评论内容删除，</p><p>valine做评论参考下面链接</p><p><a href="https://blog.csdn.net/blue_zy/article/details/79071414">https://blog.csdn.net/blue_zy/article/details/79071414</a></p><p>如果要内嵌图片的话要使用下面样式的链接，同时安装npm install hexo-asset-image –save</p><p>参考链接：<a href="https://blog.csdn.net/u010996565/article/details/89196612">https://blog.csdn.net/u010996565/article/details/89196612</a></p><p>同时会创建一个文件，将图片放入该文件，如下方式引用</p><pre class="line-numbers language-none"><code class="language-none">![2](hello-world/2.png)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/09/17/hello-world/2.jpg" alt="美图镇贴"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;下面是如何搭建hexo和matery主题的静态博客。&lt;/p&gt;
&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://he</summary>
      
    
    
    
    
    <category term="hexo" scheme="https://huxiaozz.github.io/tags/hexo/"/>
    
    <category term="matery" scheme="https://huxiaozz.github.io/tags/matery/"/>
    
  </entry>
  
</feed>
