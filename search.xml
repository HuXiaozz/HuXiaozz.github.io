<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>tensorflow函数</title>
      <link href="/2021/12/08/tensorflow-han-shu/"/>
      <url>/2021/12/08/tensorflow-han-shu/</url>
      
        <content type="html"><![CDATA[<p>1</p><h2 id="argmax"><a href="#argmax" class="headerlink" title="argmax"></a>argmax</h2><p>寻找参数最大值的索引，但是该过程不可导</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#axis = 0 表示输出最大值索引值的"轴"</span>output<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">2</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#换了一个维度</span>output<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">0</span> <span class="token number">2</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="softmax"><a href="#softmax" class="headerlink" title="softmax"></a>softmax</h2><p>softmax是一种指数归一化函数。</p><p><img src="/2021/12/08/tensorflow-han-shu/1.jpg" alt="1"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npdata<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">2.1</span> <span class="token punctuation">,</span><span class="token number">0.55</span><span class="token punctuation">]</span><span class="token punctuation">)</span>np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">/</span>np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token comment"># softmax</span>output ：array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.07795756</span><span class="token punctuation">,</span> <span class="token number">0.09521758</span><span class="token punctuation">,</span> <span class="token number">0.12853029</span><span class="token punctuation">,</span> <span class="token number">0.57603278</span><span class="token punctuation">,</span> <span class="token number">0.12226179</span><span class="token punctuation">]</span><span class="token punctuation">)</span>向量中的参数被归一化，总和为<span class="token number">1</span>。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> tensorlfow2 </tag>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端css篇</title>
      <link href="/2021/11/22/qian-duan-css-pian/"/>
      <url>/2021/11/22/qian-duan-css-pian/</url>
      
        <content type="html"><![CDATA[<p>由于用vscode写html会会频繁的用大注释，这里写一下</p><h2 id="VScode注释"><a href="#VScode注释" class="headerlink" title="VScode注释"></a>VScode注释</h2><p>注释： 先CTRL+K，然后CTRL+C<br>取消注释： 先CTRL+K，然后CTRL+U</p><h2 id="HTML-CSS-JavaScript"><a href="#HTML-CSS-JavaScript" class="headerlink" title="HTML+CSS+JavaScript"></a>HTML+CSS+JavaScript</h2><p>结构+表现+交互</p><p>什么是CSS</p><p>1.css是什么</p><p>2.CSS怎么用（快速入门）</p><p>3.CSS选择器（重点+难点）</p><p>4.美化网页（文字，阴影，超链接，列表，渐变）</p><p>5.盒子模型</p><p>6.浮动</p><p>7.定位</p><p>8.网页动画（特效效果）</p><h2 id="什么是CSS"><a href="#什么是CSS" class="headerlink" title="什么是CSS"></a>什么是CSS</h2><p>Csacading style sheet 层叠级联样式表</p><p>CSS：表现（美化网页）</p><p>字体，颜色，编剧，高度，宽度，背景图片，网业定位，网页浮动。。。</p><h2 id="CSS发展史"><a href="#CSS发展史" class="headerlink" title="CSS发展史"></a>CSS发展史</h2><p>CSS1.0</p><p>CSS2.0     DIV(块)+CSS  ， html与css结构分离的思想，网页变得简单</p><p>CSS2.1    浮动，定位</p><p>CSS3.0    圆角边框，阴影能够，动画。。。浏览器兼容</p><h2 id="html和css样式"><a href="#html和css样式" class="headerlink" title="html和css样式"></a>html和css样式</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--    规范，&lt;style&gt; 可以编写css代码，每一个声明最好使用;结尾    选择器{        声明1;        声明2:        声明3;    }    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--    建议使用这种规范    1.内容与表现分离    2.网页结构表现统一，可以实现复用    3.样式十分丰富    4.建议使用独立于htnl的css文件    5.利用SEO，容易被搜索引擎收入！    --&gt;</span>    <span class="token comment">&lt;!--内部样式--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    <span class="token comment">/*css中用这个注释*/</span>    <span class="token selector">h2</span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@import</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"css/style.css"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span></span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>我是标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--导入css的几种方式--&gt;</span><span class="token comment">&lt;!--优先级：就近原则，谁离标签近显示谁的颜色，外部css如果link离标签比内部样式近的话，就用外部css，最近的是行内样式--&gt;</span><span class="token comment">&lt;!--在行内标签中编写样式，编写一个style属性，编写样式，不建议--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span> <span class="token punctuation">:</span> blue</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>我是标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--内部样式，在header里写style，然后用选择器定位--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>我是标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--外部样式，在文件外写css样式然后用，link引入--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>外部样式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--外部样式拓展，两种写法--&gt;</span><span class="token comment">&lt;!--一种是link，一种是@  @的缺点是：网页较大的情况下会先展示骨架子，在变得好看 而link不是这样的   @是css2.1特有的！--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>@样式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">h1</span><span class="token punctuation">{</span>   <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">h3</span><span class="token punctuation">{</span>   <span class="token property">color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">h4</span><span class="token punctuation">{</span>   <span class="token property">color</span><span class="token punctuation">:</span>black<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><p>类选择器：选择所有class属性一致的标签，可跨标签，类名{}</p><p>标签选择器：选择一类标签，标签{}</p><p>id选择器：全局唯一不能重复！#id名{}</p><h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">        <span class="token comment">/*类选择器的格式，.class的名称{}*/</span>        <span class="token selector">.first</span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.second</span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>first<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>第一个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>second<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>第二个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>第三个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    <span class="token comment">/*标签选择器会选中页面所有这个标签的元素*/</span>        <span class="token selector">h1</span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span>24px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">p</span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span>80px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>选择器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是一个p<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--选择器；选择页面上的某一个或者某一类元素基本选择器：    标签选择器    类 选择器 class    id 选择器--&gt;</span><span class="token comment">&lt;!--基本选择器：1.标签选择器2.类选择器 class3.id 选择器--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">        <span class="token comment">/*id选择器        #id名称{}        id要保证全局唯一        不遵循就近原则        id选择器 &gt; class选择器 &gt; 标签选择器        */</span>        <span class="token selector">#first</span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.op</span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">#second</span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">h1</span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>op<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>first<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>第一个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>op<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>第二个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>second<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>第二个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>第三个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="层次选择器"><a href="#层次选择器" class="headerlink" title="层次选择器"></a>层次选择器</h2><ol><li><p>后代选择器：在某个元素后面，某个标签下的标签用什么类型的css，祖父  爷爷  父亲  所有的有会改变</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*后代选择器*/</span><span class="token selector">body p</span><span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>子选择器，一代，只会改变下一代，下下一代不会改变</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*子选择器*/</span><span class="token selector">body&gt;p</span><span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>相邻兄弟选择器，只会选择下面一个相同的标签去改变，自身不变。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*相邻兄弟选择器，选择下面一个兄弟标签（同样的标签）*/</span><span class="token selector">.active + p</span><span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>通用选择器</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*通用选择器,选择当前元素向下的所有兄弟玄素，~后是要更改标签的标签，可以换成a之类的标签*/</span><span class="token selector">.active~p</span><span class="token punctuation">{</span>    <span class="token property">background</span> <span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h2><p> 还可以做鼠标选中显示什么颜色之类的特效如：</p>   <pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">a:hover</span><span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/*鼠标浮上背景变红*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>   <pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--避免使用标签，class和id--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">            <span class="token comment">/*ul的第一个子元素*/</span>            <span class="token selector">ul li:first-child</span><span class="token punctuation">{</span>                <span class="token property">background</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">/*ul的最后一个子元素*/</span>            <span class="token selector">ul li:last-child</span><span class="token punctuation">{</span>                <span class="token property">background</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">/*选中p1 : 定位到父元素，选择当前第一个元素            选中当前p元素的父级元素，选中父级元素的第一个,并且是当前元素才生效也就是是p才生效，顺            序选择，如果顺序标签不是p则不会生效            */</span>            <span class="token selector">p:nth-child(1)</span><span class="token punctuation">{</span>                <span class="token property">background</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">/*选中父元素下的p元素的第二个，类型选择，如果第二个标签不是p则会顺序的向下找*/</span>            <span class="token selector">p:nth-of-type(2)</span><span class="token punctuation">{</span>                <span class="token property">background</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>p1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>p2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>p3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>                li1            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>                li2            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>                li3            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="属性选择器（常用）"><a href="#属性选择器（常用）" class="headerlink" title="属性选择器（常用）"></a>属性选择器（常用）</h2><p>id + class 结合</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    <span class="token comment">/*    属性选择器支持正则表达式    = 是等于    *= 是包含    ^= 匹配以什么开头的    $= 以什么结尾的    */</span>        <span class="token selector">.demo a</span><span class="token punctuation">{</span>            <span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span>            <span class="token property">margin-right</span><span class="token punctuation">:</span>5px<span class="token punctuation">;</span>            <span class="token property">font</span><span class="token punctuation">:</span>bold 20px/50px Arial<span class="token punctuation">;</span>    <span class="token comment">/*字体粗细   字体大小/行高   字体*/</span>        <span class="token punctuation">}</span>        <span class="token comment">/* 属性名 ，属性名 = 属性值（正则） */</span>        <span class="token comment">/*存在id属性的元素   a[]{}*/</span>        <span class="token comment">/*        a[id]{            background:yellow;        }*/</span>        <span class="token comment">/*id = first 的元素*/</span>        <span class="token comment">/*        a[id=first]{            background:red;        }*/</span>        <span class="token comment">/*class 中有 links的元素*/</span>        <span class="token comment">/*        a[class*="links"]{            background:yellow;        }*/</span>        <span class="token comment">/*选择 href 中以http开头的元素*/</span>        <span class="token comment">/*a[href^=http]{            background:white;        }*/</span>        <span class="token comment">/* 选中以pdf结尾的 */</span>        <span class="token selector">a[href$=pdf]</span><span class="token punctuation">{</span>            <span class="token property">background</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item first<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>first<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item active<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/123.html<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/123.png<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/123.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/a.pdf<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/abc.pdf<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abc,doc<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abcd.doc<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item last<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总结：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">=  是等于*=  是包含^=  是以什么开头$=  是以什么什么结尾<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="美化页面元素"><a href="#美化页面元素" class="headerlink" title="美化页面元素"></a>美化页面元素</h2><h3 id="为什么要美化网页"><a href="#为什么要美化网页" class="headerlink" title="为什么要美化网页"></a>为什么要美化网页</h3><ol><li>有效传递页面信息</li><li>美化网页，页面漂亮，才能吸引用户</li><li>凸显主题</li><li>提高用户的体验</li></ol><h3 id="span标签"><a href="#span标签" class="headerlink" title="span标签"></a>span标签</h3><p>重点要突出的字用span套起来</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">        <span class="token selector">#lo</span><span class="token punctuation">{</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">#lp</span><span class="token punctuation">{</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--些啥都可以，但是约定用span--&gt;</span>我爱<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>我爱<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wewwewqeqw</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lp<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>wewwewqeqw</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--字体风格--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">        <span class="token selector">p</span><span class="token punctuation">{</span>            <span class="token property">font</span><span class="token punctuation">:</span> oblique 800 30px <span class="token string">"楷体"</span> <span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>    亿万用户提供高效稳定便捷的电子邮件服务。你可以在电脑网页、iOS/iPad客户端、及Android客户端上使用它,通过邮件发送3G的超大附件,体验文件中转站、日历、<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">        <span class="token selector">#lo</span><span class="token punctuation">{</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">#lp</span><span class="token punctuation">{</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/*            font-family  字体            font-size:  字体大小            font-weight  字体粗细            color  字体颜色        */</span>        <span class="token selector">body</span><span class="token punctuation">{</span>            <span class="token property">font-family</span><span class="token punctuation">:</span><span class="token string">"Arial Black"</span><span class="token punctuation">,</span>楷体<span class="token punctuation">;</span>  <span class="token comment">/*可以设置两种字体一种英文一种中文*/</span>            <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">h1</span><span class="token punctuation">{</span>            <span class="token property">font-size</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span>   <span class="token comment">/*  em 是缩进，px是大小*/</span>        <span class="token punctuation">}</span>        <span class="token selector">.p1</span><span class="token punctuation">{</span>            <span class="token property">font-weight</span><span class="token punctuation">:</span>850<span class="token punctuation">;</span>  <span class="token comment">/*可以写成  font-weight: 800  这样,范围是0-900*/</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--些啥都可以，但是约定用span--&gt;</span>我爱<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>我爱<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wewwewqeqw</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lp<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>wewwewqeqw</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>这是标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    亿万用户提供高效稳定便捷的电子邮件服务。你可以在电脑网页、iOS/iPad客户端、及Android客户端上使用它,通过邮件发送3G的超大附件,体验文件中转站、日历、<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>    Give me the strength lightly to bear my joys and sorrows.Give me the strength to make my love fruitful in service.Give me the strength never to disown the poor or bend my knees before insolent might.Give me the strength to raise my mind high above daily trifles.And give me the strength to surrender my strength to thy will with love<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h2><ol><li>颜色    color  rgb   rgba带透明度</li><li>文本对齐方式   text-align = center</li><li>首行缩进    text-indent: 2em</li><li>行高    line-height:    文本上下居中  行高=height       line-height  和height  数值相同</li><li>装饰     text-decoration   下划线</li><li>文本图片水平对齐     vertical-align:middle</li></ol><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--         颜色：           单词           RGB  0-F           RGBA  0-255   透明度0-1        text-align: center;  排版，居中        text-indent: 2em;   首行缩进，em代表字符        行高  和 块 的高度一致，就可以上下居中     --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">                <span class="token selector">h1</span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.p1</span><span class="token punctuation">{</span>            <span class="token property">text-indent</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.p3</span><span class="token punctuation">{</span>            <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/* 下划线 */</span>        <span class="token selector">.l1</span><span class="token punctuation">{</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/* 中划线 */</span>        <span class="token selector">.l2</span><span class="token punctuation">{</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> line-through<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/* 上划线 */</span>        <span class="token selector">.l3</span><span class="token punctuation">{</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> overline<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/* 水平对齐~ 参照物 ，a，b */</span>        <span class="token selector">img,span</span><span class="token punctuation">{</span>            <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>op<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./123.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>sdadsasasda<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>l1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>wqeqwwqeq<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>l2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>wqeqwwqeq<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>l3<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>wqeqwwqeq<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>这是标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    亿万用户提供高效稳定便捷的电子邮件服务。你可以在电脑网页、iOS/iPad客户端、及Android客户端上使用它,通过邮件发送3G的超大附件,体验文件中转站、日历、<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p3<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    Give me the strength lightly to bear my joys and sorrows.Give me the strength to make my love fruitful in service.Give me the strength never to disown the poor or bend my knees before insolent might.Give me the strength to raise my mind high above daily trifles.And give me the strength to surrender my strength to thy will with love<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="超链接伪类，阴影鼠标按住悬浮点击等的状态"><a href="#超链接伪类，阴影鼠标按住悬浮点击等的状态" class="headerlink" title="超链接伪类，阴影鼠标按住悬浮点击等的状态"></a>超链接伪类，阴影鼠标按住悬浮点击等的状态</h2><p>正常情况下，a，a:hover用最多，鼠标悬浮状态</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--         颜色：           单词           RGB  0-F           RGBA  0-255   透明度0-1        text-align: center;  排版，居中        text-indent: 2em;   首行缩进，em代表字符        行高  和 块 的高度一致，就可以上下居中     --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">        <span class="token comment">/* 初始默认的颜色 */</span>        <span class="token selector">a</span><span class="token punctuation">{</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/* 鼠标悬浮的状态 */</span>        <span class="token selector">a:hover</span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/* 鼠标按住为释放的状态 */</span>        <span class="token selector">a:active</span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> rebeccapurple<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/* 访问后的链接状态，link为未访问状态 */</span>        <span class="token selector">a:visited</span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/* 第一个参数为阴影的颜色，第二个参数水平偏移，第三个参数垂直偏移，（上为正，右为正，负数为下，左边为负数），第四个参数阴影半径 */</span>        <span class="token selector">#price</span><span class="token punctuation">{</span>            <span class="token property">text-shadow</span><span class="token punctuation">:</span> blueviolet 10px 10px 2px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./123.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>这是名字：名字啦！！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>作者：作者名字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    ￥999<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#nav</span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> orchid<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.title</span><span class="token punctuation">{</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">text-indent</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* list-style: none  去掉原点 circle  空心圆 decimal  数字 square  正方形*/</span><span class="token selector">ul</span><span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">ul li</span><span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">a</span><span class="token punctuation">{</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">a:hover</span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>liebiao.css<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>全部商品分类<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>图书<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>隐形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>拉拉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>图书<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>隐形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>拉拉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>图书<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>隐形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>拉拉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>背景颜色</p><p>背景图片</p><h2 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--         border   边框粗细    边框样式   边框颜色     --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">        <span class="token selector">div</span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> 1000px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 700px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"123.jpg"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>            <span class="token comment">/*             背景图片，默认全部平铺得             */</span>        <span class="token punctuation">}</span>        <span class="token selector">.div1</span><span class="token punctuation">{</span>            <span class="token property">background-repeat</span><span class="token punctuation">:</span> repeat-x<span class="token punctuation">;</span>            <span class="token comment">/* 背景图片，水平平铺 */</span>        <span class="token punctuation">}</span>        <span class="token selector">.div2</span><span class="token punctuation">{</span>            <span class="token property">background-repeat</span><span class="token punctuation">:</span> repeat-y<span class="token punctuation">;</span>            <span class="token comment">/* 背景图片，水平平铺 */</span>        <span class="token punctuation">}</span>        <span class="token selector">.div3</span><span class="token punctuation">{</span>            <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>            <span class="token comment">/* 不平铺 */</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div3<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.title</span><span class="token punctuation">{</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">text-indent</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span>    <span class="token comment">/* 颜色   图片    横坐标    纵坐标   平铺方式 */</span>    <span class="token property">background</span><span class="token punctuation">:</span> red <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"./123.jpg"</span><span class="token punctuation">)</span></span> 270px 10px no-repeat<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* list-style: none  去掉原点 circle  空心圆 decimal  数字 square  正方形*/</span><span class="token selector">ul</span><span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">ul li</span><span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"./123.jpg"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>    <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>    <span class="token property">background-position</span><span class="token punctuation">:</span> 236px 2px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h3><h4 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h4><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>43deg<span class="token punctuation">,</span> #4158D0 0%<span class="token punctuation">,</span> #C850C0 46%<span class="token punctuation">,</span> #FFCC70 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><p><img src="/2021/11/22/qian-duan-css-pian/1.png" alt="1"></p><p>margin   外边距</p><p>padding   内边距</p><p>border   边框</p><h3 id="边框"><a href="#边框" class="headerlink" title="边框"></a>边框</h3><p>border     </p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 径向渐变  圆形渐变 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">        <span class="token comment">/* body会有一个自动的外边距，将他设为0 */</span>        <span class="token selector">body</span><span class="token punctuation">{</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/* border ：粗细，样式，颜色 */</span>        <span class="token selector">#box</span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 10px 10px 10px 10px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>        <span class="token selector">h2</span><span class="token punctuation">{</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> greenyellow<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> honeydew<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">form</span><span class="token punctuation">{</span>            <span class="token property">background</span><span class="token punctuation">:</span> greenyellow<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">span</span><span class="token punctuation">{</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">div:nth-of-type(1) input</span><span class="token punctuation">{</span>            <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>            <span class="token property">margin-right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 3px solid black<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">div:nth-of-type(2) input</span><span class="token punctuation">{</span>            <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 3px dashed rebeccapurple<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">div:nth-of-type(3) input</span><span class="token punctuation">{</span>                        <span class="token property">border</span><span class="token punctuation">:</span> 3px solid black<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>会员登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>邮箱：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html">margin : 0 1 2 3margin 参数 与 位置（1个上下左右；2个：上下+左右；3个：上+左右+下）上右下左auto自动居中padding  和   margin   类似<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="圆角边框"><a href="#圆角边框" class="headerlink" title="圆角边框"></a>圆角边框</h2><p>4个角</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">/* 左上  右上  右下   左下  顺时针方向 *//* 圆圈   圆角  =  半径 */#box{    width: 100px;    height: 50px;    margin: 10px auto;    background: red;    border-radius: 50px 50px 0px 0px;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="盒子阴影"><a href="#盒子阴影" class="headerlink" title="盒子阴影"></a>盒子阴影</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">box-shadow</span><span class="token punctuation">:</span> h-shadow v-shadow blur spread color inset<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th align="left">值</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">h-shadow</td><td align="left">必需的。水平阴影的位置。允许负值</td></tr><tr><td align="left">v-shadow</td><td align="left">必需的。垂直阴影的位置。允许负值</td></tr><tr><td align="left">blur</td><td align="left">可选。模糊距离</td></tr><tr><td align="left">spread</td><td align="left">可选。阴影的大小</td></tr><tr><td align="left">color</td><td align="left">可选。阴影的颜色。在CSS颜色值寻找颜色值的完整列表</td></tr><tr><td align="left">inset</td><td align="left">可选。从外层的阴影(开始时)改变阴影内侧阴影</td></tr></tbody></table><p>居中：要求外边的盒子是一个块元素，并且有固定的宽和高。</p><h2 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h2><p>块级元素：独占一行</p><pre class="line-numbers language-none"><code class="language-none">h1~h6   p     div    列表。。。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>行内元素：不独占一行</p><pre class="line-numbers language-none"><code class="language-none">span    a     img    strong。。。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>行内元素可以包含在块级元素中，反之，则不可以</p><p>浮动</p><p>float   飘在块上边      在css中加入clear:both  可以变成   块+浮动  每个浮动占一行（块）</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* black  块元素inline-block   既是行的元素又是块的元素，是块级别元素但是能放在一行inline   行级别元素none   消失*/</span><span class="token selector">div</span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>    <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">span</span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px <span class="token punctuation">;</span>    <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="父级标签塌陷问题"><a href="#父级标签塌陷问题" class="headerlink" title="父级标签塌陷问题"></a>父级标签塌陷问题</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">claer</span> <span class="token punctuation">:</span> right 右侧不允许浮动<span class="token property">claer</span> <span class="token punctuation">:</span> left 左侧不允许浮动<span class="token property">claer</span> <span class="token punctuation">:</span> both 左右侧都不允许浮动<span class="token property">claer</span> <span class="token punctuation">:</span> none 没有<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p>增加父级元素的高度（不建议）</p></li><li><p>增加一个空的div清除浮动</p></li></ol><p>  （个人理解，在目标div下增加一个不允许浮动的div，浮动就会被挤到上面，将上面的div撑开）</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clear<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>.clear{clear:both;margin:0;padding:0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>overflow</li></ol><pre class="line-numbers language-html" data-language="html"><code class="language-html">在父级元素中增加一个  overflow : hidden;   hidden  隐藏  scroll变为滚度条的<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li>在父类中添加一个伪类</li></ol><p>与2的实现方式是一样的，市面最认可的一种方式</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">#father:after{    content:'';    display:block;    clear:both;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>小结：</p><ol><li><p>浮动元素后面增加空的div</p><p>简单，代码中尽量避免空的div</p></li><li><p>设置父元素的高度</p><p>简单，假设元素有了固定高度，就会被限制</p></li><li><p>overflow</p><p>简单，下拉的一些场景尽量避免使用（会变丑）</p></li><li><p>父类添加一个伪类: after(推荐)</p><p>写法复杂一点，但是没有副作用，推荐使用</p></li></ol><ul><li><p>display </p><p>方向不可控</p></li><li><p>float</p><p>浮动起来会脱离标准文档流，所以要解决父级边框塌陷的问题</p></li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html">#content{    width: 200px;    height: 150px;    overflow: scroll;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><h3 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a>相对定位</h3><p>相对于原来的位置，进行指定的便宜，相对定位的话，它仍然在文档流当中，原来的位置会被保留，只是显示的位置发生了偏移。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">          <span class="token comment">/* 相对定位      相对自己原来的位置进行偏移      */</span>       <span class="token selector">div</span><span class="token punctuation">{</span>           <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>           <span class="token property">padding</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>           <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>           <span class="token property">line-height</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>       <span class="token punctuation">}</span>        <span class="token selector">#father</span><span class="token punctuation">{</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">#first</span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px dashed <span class="token function">rgb</span><span class="token punctuation">(</span>18<span class="token punctuation">,</span> 116<span class="token punctuation">,</span> 14<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span> <span class="token comment">/*相对定位，上下左右*/</span>            <span class="token property">top</span><span class="token punctuation">:</span> -20px<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">#second</span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>180<span class="token punctuation">,</span> 59<span class="token punctuation">,</span> 59<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px dashed <span class="token function">rgb</span><span class="token punctuation">(</span>48<span class="token punctuation">,</span> 35<span class="token punctuation">,</span> 122<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">#third</span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>219<span class="token punctuation">,</span> 96<span class="token punctuation">,</span> 96<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px dashed <span class="token function">rgb</span><span class="token punctuation">(</span>158<span class="token punctuation">,</span> 150<span class="token punctuation">,</span> 40<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>father<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>first<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>第一个盒子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>second<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>第二个盒子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>third<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>第三个盒子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html">topbottomleftright可以为负数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>相同的css结构名字不同用    ,    分割</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">.a,.b{这样}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h2><p>定位：基于xxx定位，上下左右</p><p>绝对定位:   position:absolute </p><p>可以在下面增加属性left，right ，top之类的控制定位位置。 </p><ol><li><p>没有父级元素定位的前提下，相对于浏览器定位 </p></li><li><p>假设父级元素存在定位，通常会相对于父级元素发生偏移</p><p>也就是说父级元素有position:relative 则相对于父级定位，没有则相对于浏览器定位</p></li><li><p>在父级元素范围内移动</p></li></ol><p>相对于父级或者浏览器的位置，进行绝对定位的话，他不在标准文档流当中，原来的位置不会被保留</p><h2 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">        <span class="token selector">body</span><span class="token punctuation">{</span>            <span class="token property">height</span><span class="token punctuation">:</span> 1000px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">div:nth-of-type(1)</span><span class="token punctuation">{</span><span class="token comment">/*绝对定位，没有父级元素相对于浏览器进行定位*/</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">div:nth-of-type(2)</span><span class="token punctuation">{</span><span class="token comment">/*固定定位*/</span>            <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>            <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>div1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>div2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="z-index"><a href="#z-index" class="headerlink" title="z-index"></a>z-index</h2><p>涂层的概念</p><p> opacity: 0.5;背景透明度</p><p> z-index: 99;  类似于图层，0-无限大</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">       <span class="token selector">#content</span><span class="token punctuation">{</span>           <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>           <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>           <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>           <span class="token property">font-size</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>           <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>           <span class="token property">border</span><span class="token punctuation">:</span> 2px solid red<span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token selector">ul,li</span><span class="token punctuation">{</span>           <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>           <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>           <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token comment">/* 父级元素相对定位，子级元素绝对定位 */</span>       <span class="token selector">#content ul</span><span class="token punctuation">{</span>           <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token selector">.tipText,.tipBig</span><span class="token punctuation">{</span>           <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>           <span class="token property">height</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>           <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>           <span class="token property">top</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>           <span class="token property">color</span><span class="token punctuation">:</span> wheat<span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token selector">.tipText</span><span class="token punctuation">{</span>           <span class="token property">color</span><span class="token punctuation">:</span> wheat<span class="token punctuation">;</span>           <span class="token property">z-index</span><span class="token punctuation">:</span> 99<span class="token punctuation">;</span>    <span class="token comment">/*0-无限层，类似于图层效果，飘起来了*/</span>       <span class="token punctuation">}</span>       <span class="token selector">.tipBig</span><span class="token punctuation">{</span>           <span class="token property">background</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>           <span class="token property">opacity</span><span class="token punctuation">:</span> 0.5<span class="token punctuation">;</span><span class="token comment">/*背景透明度*/</span>           <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">alpha</span><span class="token punctuation">(</span>opacity=50<span class="token punctuation">)</span> <span class="token punctuation">;</span>  <span class="token comment">/* 和opacity 类似功能，范围为0-100，而opacity范围为0-1， filter过时了IE8之前的版本支持*/</span>       <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../img/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tipText<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>啦啦啦啦啦<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tipBig<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>时间：3420-01-01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>地点：仙女座1号卫星<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="css可以做动画"><a href="#css可以做动画" class="headerlink" title="css可以做动画"></a>css可以做动画</h2><p>菜鸟教程看一看。。。不同的前缀代表不同浏览器适配</p><p>还是用js写比较好</p><p>完结。。。</p>]]></content>
      
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端html篇</title>
      <link href="/2021/11/21/qian-duan-html-pian/"/>
      <url>/2021/11/21/qian-duan-html-pian/</url>
      
        <content type="html"><![CDATA[<p>本来打算学完后端在学前端的（其实以前都学过，奈何都还给老师了，也没写博客也没有笔记，都没办法复习），奈何计划赶不上变化，课程要求用前端页面展示，只能先复习一下前端的知识了。</p><p>W3C：万维网联盟，web技术领域最有权威和最具影响力的国际中立性技术权威机构</p><h2 id="html学习笔记"><a href="#html学习笔记" class="headerlink" title="html学习笔记"></a>html学习笔记</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!--这是一条注释DOCTYPE：告诉浏览器使用什么规范--&gt;</span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--head代表网页头部--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--meta描述性标签，描述网页的一些信息--&gt;</span>    <span class="token comment">&lt;!--meta一般用来做seo--&gt;</span>    <span class="token comment">&lt;!--SEO搜索引擎优化--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这是关键词<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这是描述<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--title网页标题，就是代开网页标签上显示的文字--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>这是一个标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--网络主体--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>hello word！<span class="token comment">&lt;!--标题标签--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>一级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>二级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>三级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>四级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">&gt;</span></span>五级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span><span class="token punctuation">&gt;</span></span>六级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--段落标签--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>两只老虎<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>量子老虎<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>跑得快，跑得快<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>直没有眼睛<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>一直没有尾巴 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>真奇怪，真奇怪<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--水平线标签--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--换行标签--&gt;</span>两只老虎<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>量子老虎<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>跑得快，跑得快<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>直没有眼睛<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>一直没有尾巴 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>真奇怪，真奇怪<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--粗体和斜体标签--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>字体样式标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>粗体：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>i love you<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span>斜体：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span>i love you<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--特殊符号--&gt;</span>空        格<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>空<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>格<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token entity named-entity" title=">">&amp;gt;</span>这是一个大于号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token entity named-entity" title="<">&amp;lt;</span>这是一个小于号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token entity named-entity" title="©">&amp;copy;</span>版权符号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--特殊符号记忆方式&amp;开头 ;结尾，通过idea查百度--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>图像标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--图像标签--&gt;</span><span class="token comment">&lt;!--src：图片地址(必填)    相对地址，绝对地址alt：图像没显示出来显示的文字（必填）width：设置图片宽height：设置图片高--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这是一个图片<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>鼠标悬停显示文字<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--链接标签--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>链接标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--a标签href：必填，表示言跳转到那个页面target：表示页面在哪打开    _blank:在新标签页中打开    _self:在当前页面中打开--&gt;</span><span class="token comment">&lt;!--使用name做一个标记--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>顶部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>点击我跳转到百度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_self<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这是一个图片<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>鼠标悬停显示文字,图片标签链接，点击我跳转百度<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>800<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--锚链接--&gt;</span><span class="token comment">&lt;!--1 需要一个标记2 跳转到标记--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#top<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>回到顶部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--打开xxxx网址，跳转到相应的锚链接位置，可以不再是顶部--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xxxxxxx#top<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>回到顶部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--功能性链接--&gt;</span><span class="token comment">&lt;!--邮件链接：mailto：QQ链接：打开浏览器，搜索QQ推广，登录输入消息，然后将代码复制即可，发起临时会话用--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mailto:335600361@qq.com<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>点击联系我<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://wpa.qq.com/msgrd?v=3&amp;uin=1851574845&amp;site=qq&amp;menu=yes<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://wpa.qq.com/pa?p=2:1851574845:51<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>点我领取小电影<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>点我领取小电影<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--列表--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>列表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--有序列表应用：试卷，问答。。。。--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>前端<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>后端<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>全栈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--无序列表应用：导航，侧边栏。。。。--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>前端<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>后端<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>全栈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--自定义列表dl：标签dt：列表名称dd：列表内容应用：公司网站底部--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">&gt;</span></span>技术路线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>前端<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>后端<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">&gt;</span></span>位置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>黑龙江<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>山东<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--表格--&gt;</span><span class="token comment">&lt;!--行：tr列：tdborder：边框宽度--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>表格<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1px<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--colspan跨列--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>1-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>1-2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>1-3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>1-4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>1-4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--rowspan跨行--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">rowspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>2-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>2-2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>2-3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>2-4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>3-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>3-2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>3-3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>3-4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--媒体，视频，音频--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--视频src：视频地址controls：控制，播放进度，一级音量大小等（如果没有，就不能控制播放，播放进度，音量等）autoplay：自动播放muted:静音属性有的浏览器不支持自动播放，加上静音就可以自动播放了,浏览器优化体验--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/video/movie2.mp4<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span> <span class="token attr-name">muted</span> <span class="token attr-name">autoplay</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/MP3/1.mp3<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span> <span class="token attr-name">autoplay</span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--页面结构分析--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">&gt;</span></span>这是一个头部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">&gt;</span></span>这是主体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">&gt;</span></span>这是一个脚部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">&gt;</span></span>导航辅助内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--iframe，在网页中嵌入另一个网页--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--iframe:内联框架src：应用页面地址name：框架标识名w和h：款高度--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>900px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200px<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://live.bilibili.com/<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>点击在上述iframe中加载哔哩哔哩<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//player.bilibili.com/player.html?aid=55631961&amp;bvid=BV1x4411V75C&amp;cid=97257967&amp;page=11<span class="token punctuation">"</span></span>        <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">framespacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">allowfullscreen</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--表单--&gt;</span><span class="token comment">&lt;!--form：表单action：表单提交位置，可以是网站，也可以是一个请求处理地址method：表单提交方式  post/get    get：可以在url中看到提交的信息（不安全），但是高效    post：比较安全，在url中不会暴漏密码账号，可以传输大文件--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--    input：输入框    type：text文本框，还有其他属性，如 image图片，range滑块  checkbox 等，radio单选框    value：设置初始值    maxlength：设置输入字符的最大长度    size：设置文本框长度    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>名字：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>大帅逼<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--    密码类型会将输入的字符变成··············    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--    单选框标签    input type="radio"    value:单选框的值    name：标识组，在单选框中一样的组只能选一个，不同的组可以多选    checked：默认选中    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>性别        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>boy<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>男        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>girl<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>女    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--    多选框    name：标识组，在多选框中一样的组可以选多个    checked：默认选中    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>爱好：        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sleep<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>睡觉        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>write<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>敲代码        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>talk<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>聊天        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>game<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>游戏    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--    按钮  用value对按钮显示的字进行设置    input type="button" 普通按钮    input type="image"  图片按钮    下面还有重置按钮和提交按钮    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>点击变长<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--下拉框--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>        下拉框：        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>列表名称<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>选项的值<span class="token punctuation">"</span></span> <span class="token attr-name">selected</span><span class="token punctuation">&gt;</span></span>中国<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>选项的值<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>美国<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>选项的值<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>瑞士<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--    文本域    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>textarea<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>  <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--    文件域    input type="file" 上传文件    name：传入后台的是key：value，上传的是value，name就是key    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>files<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>上传<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--    邮件验证：验证邮箱是否写了@    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>邮箱：        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--url验证--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>url：        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--数字验证    max ：最大值    min ： 最小值    step：每次增加的步数    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>number：        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--滑块--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>音量：        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>range<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--搜索框--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>        搜索：        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--    表单应用    只读：readonly    禁用：disabled    隐藏：hidden    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>    <span class="token comment">&lt;!--只读--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>只读<span class="token punctuation">"</span></span> <span class="token attr-name">readonly</span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--禁用    下面例子男选不了    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>性别        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>boy<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">/&gt;</span></span>男        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>girl<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>女    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--隐藏    用于提交一些默认值    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>girl<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">hidden</span><span class="token punctuation">/&gt;</span></span>女    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--增强鼠标可用性    点击文字也选中输入框    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mark<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>你点我试试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mark<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--    表单的初级验证，安全，保证数据不会出错，减轻压力    placeholder:提示信息    required：非空判断，不能为空    pattern：匹配正则表达式    常用正则表达式查找网站    https://www.jb51.net/tools/regexsc.htm    oninvalid="setCustomValidity('格式不对');"   设置报错信息    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>自定义邮箱：        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>diyimail<span class="token punctuation">"</span></span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$//^[a-z\d]+(\.[a-z\d]+)*@([\da-z](-[\da-z])?)+(\.{1,2}[a-z]+)+$/或\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*<span class="token punctuation">"</span></span> <span class="token attr-name">oninvalid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setCustomValidity(<span class="token punctuation">'</span>格式不对<span class="token punctuation">'</span>);<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>                <span class="token comment">&lt;!--    input type="submit":提交按钮    input type="reset"：重置按钮    --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完结撒花！！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java尚硅谷</title>
      <link href="/2021/11/19/java-shang-huo-gu/"/>
      <url>/2021/11/19/java-shang-huo-gu/</url>
      
        <content type="html"><![CDATA[<p>是多少</p><p>Java尚硅谷</p><p>正数：源码补码反码都一样</p><p>负数：源码除符号位以外各位取反得到反码，反码+1得到补码</p><p><strong>计算机都以补码方式存储数据</strong></p><p><img src="/2021/11/19/java-shang-huo-gu/1.png" alt="1"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java刷题笔记</title>
      <link href="/2021/11/19/java-shua-ti-bi-ji-leetcode/"/>
      <url>/2021/11/19/java-shua-ti-bi-ji-leetcode/</url>
      
        <content type="html"><![CDATA[<h2 id="java刷题笔记"><a href="#java刷题笔记" class="headerlink" title="java刷题笔记"></a>java刷题笔记</h2><h3 id="二进制转换"><a href="#二进制转换" class="headerlink" title="二进制转换"></a>二进制转换</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">将一个整数转化成二进制的方法：<span class="token number">1</span> 方法<span class="token number">1</span>：使用<span class="token class-name">BigInteger</span>类：<span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token class-name">BigInteger</span> b<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token string">"10"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1010</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0</span>b<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1</span>b<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token string">"255"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//11111111</span>b<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token string">"254"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//11111110</span><span class="token punctuation">}</span><span class="token number">2</span> 方法<span class="token number">2</span>：使用<span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>：<span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token class-name">String</span> str2 <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0</span>str2 <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1</span>str2 <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//11111111</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="重写比较器"><a href="#重写比较器" class="headerlink" title="重写比较器"></a>重写比较器</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> o1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> o2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> o2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span>o1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>writeExcel</title>
      <link href="/2021/11/12/writeexcel/"/>
      <url>/2021/11/12/writeexcel/</url>
      
        <content type="html"><![CDATA[<h2 id="通过opencv根据坐标绘制图片框，然后保存图片"><a href="#通过opencv根据坐标绘制图片框，然后保存图片" class="headerlink" title="通过opencv根据坐标绘制图片框，然后保存图片"></a>通过opencv根据坐标绘制图片框，然后保存图片</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> xml<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>ElementTree <span class="token keyword">as</span> ET   <span class="token comment">#用于读取xml文件</span><span class="token keyword">import</span> os<span class="token punctuation">,</span> cv2annota_dir <span class="token operator">=</span> <span class="token string">r'./train/train2021/Annotations/'</span>img_dir <span class="token operator">=</span> <span class="token string">r'./train/train2021/JPEGImages/'</span><span class="token keyword">def</span> <span class="token function">divide_img</span><span class="token punctuation">(</span>oriname<span class="token punctuation">)</span><span class="token punctuation">:</span>    img_file <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>img_dir<span class="token punctuation">,</span> oriname <span class="token operator">+</span> <span class="token string">'.png'</span><span class="token punctuation">)</span>    im <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>img_file<span class="token punctuation">)</span>   <span class="token comment">#cv读取图片</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>oriname<span class="token punctuation">)</span>    xml_file <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>annota_dir<span class="token punctuation">,</span> oriname <span class="token operator">+</span> <span class="token string">'.xml'</span><span class="token punctuation">)</span>  <span class="token comment"># 读取每个原图像的xml文件</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>xml_file<span class="token punctuation">)</span>    tree <span class="token operator">=</span> ET<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>xml_file<span class="token punctuation">)</span>    root <span class="token operator">=</span> tree<span class="token punctuation">.</span>getroot<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token builtin">object</span> <span class="token keyword">in</span> root<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'object'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        object_name <span class="token operator">=</span> <span class="token builtin">object</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text        <span class="token keyword">if</span><span class="token punctuation">(</span>object_name <span class="token operator">==</span> <span class="token string">'with_mask'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            color <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span><span class="token punctuation">(</span>object_name <span class="token operator">==</span> <span class="token string">'without_mask'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            color <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">250</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            color <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span>        Xmin <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'bndbox'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'xmin'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span>        Ymin <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'bndbox'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'ymin'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span>        Xmax <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'bndbox'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'xmax'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span>        Ymax <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'bndbox'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'ymax'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span>        cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>im<span class="token punctuation">,</span> <span class="token punctuation">(</span>Xmin<span class="token punctuation">,</span> Ymin<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>Xmax<span class="token punctuation">,</span> Ymax<span class="token punctuation">)</span><span class="token punctuation">,</span>color<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>        font <span class="token operator">=</span> cv2<span class="token punctuation">.</span>FONT_HERSHEY_SIMPLEX   <span class="token comment">#选择字体</span>        <span class="token comment">#cv2.putText(im, object_name, (Xmin, Ymin - 7), font, 0.5, color, 2)</span>        <span class="token comment">#cv2.imshow('01', im)</span>        cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">r'./trainlabel/'</span><span class="token operator">+</span>oriname<span class="token operator">+</span><span class="token string">'.png'</span><span class="token punctuation">,</span>im<span class="token punctuation">)</span>   <span class="token comment">#保存图片</span>img_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>img_dir<span class="token punctuation">)</span>   <span class="token comment">#读入文件列表</span><span class="token keyword">print</span><span class="token punctuation">(</span>img_list<span class="token punctuation">)</span><span class="token keyword">for</span> name <span class="token keyword">in</span> img_list<span class="token punctuation">:</span>    divide_img<span class="token punctuation">(</span>name<span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token string">'.png'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">#删除字符串末尾的.png   </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="通过结果写入Excel中"><a href="#通过结果写入Excel中" class="headerlink" title="通过结果写入Excel中"></a>通过结果写入Excel中</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> xlsxwriter<span class="token keyword">import</span> os<span class="token punctuation">,</span> cv2w <span class="token operator">=</span> <span class="token string">'D:\\tensorflowstudydata\\saiti\\daima\\ppyolov2\\PaddleDetection\\output\\data\\'</span>annota_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>w<span class="token punctuation">)</span>f <span class="token operator">=</span> xlsxwriter<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token string">'data.xlsx'</span><span class="token punctuation">)</span>sheet <span class="token operator">=</span> f<span class="token punctuation">.</span>add_worksheet<span class="token punctuation">(</span><span class="token string">'sheet1'</span><span class="token punctuation">)</span>   <span class="token comment">#添加工作表</span>i <span class="token operator">=</span> <span class="token number">0</span>k <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> q <span class="token keyword">in</span> annota_dir<span class="token punctuation">:</span>    path <span class="token operator">=</span> w<span class="token operator">+</span>q    f1 <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'gbk'</span><span class="token punctuation">)</span>    lines <span class="token operator">=</span> f1<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span>        sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span>i<span class="token punctuation">,</span>k<span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">#通过横纵坐标控制单元格</span>        i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>    k<span class="token operator">+=</span><span class="token number">1</span>    i<span class="token operator">=</span><span class="token number">0</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Python-strip-方法用于移除字符串头尾指定的字符（默认为空格或换行符）或字符序列。"><a href="#Python-strip-方法用于移除字符串头尾指定的字符（默认为空格或换行符）或字符序列。" class="headerlink" title="Python strip() 方法用于移除字符串头尾指定的字符（默认为空格或换行符）或字符序列。"></a>Python strip() 方法用于移除字符串头尾指定的字符（默认为空格或换行符）或字符序列。</h2><h2 id="Python-rstrip-删除-string-字符串末尾的指定字符（默认为空格）"><a href="#Python-rstrip-删除-string-字符串末尾的指定字符（默认为空格）" class="headerlink" title="Python rstrip() 删除 string 字符串末尾的指定字符（默认为空格）"></a>Python rstrip() 删除 string 字符串末尾的指定字符（默认为空格）</h2><h2 id="Python-rstrip-删除-string-字符串头的指定字符（默认为空格）"><a href="#Python-rstrip-删除-string-字符串头的指定字符（默认为空格）" class="headerlink" title="Python rstrip() 删除 string 字符串头的指定字符（默认为空格）"></a>Python rstrip() 删除 string 字符串头的指定字符（默认为空格）</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">"888888888888kkk    kkkkisisisisiisisisikkk  kkkk8888888888888888"</span>str1 <span class="token operator">=</span> <span class="token string">"        op       "</span>str1 <span class="token operator">=</span> str1<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span>     <span class="token comment">#op</span><span class="token builtin">str</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token string">"8"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token builtin">str</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">.</span>lstrip<span class="token punctuation">(</span><span class="token string">"8"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token comment">#结果：</span><span class="token comment">#op</span><span class="token comment">#888888888888kkk    kkkkisisisisiisisisikkk  kkkk</span><span class="token comment">#kkk    kkkkisisisisiisisisikkk  kkkk</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完结撒花！！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> opencv </tag>
            
            <tag> voc </tag>
            
            <tag> xml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java刷题笔记</title>
      <link href="/2021/11/08/java-shua-ti-bi-ji/"/>
      <url>/2021/11/08/java-shua-ti-bi-ji/</url>
      
        <content type="html"><![CDATA[<p>Java参数，不管是原始类型还是引用类型，传递的都是副本(有另外一种说法是传值，但是说传副本更好理解吧，传值通常是相对传址而言)。 如果参数类型是原始类型，那么传过来的就是这个参数的一个副本，也就是这个原始参数的值，这个跟之前所谈的传值是一样的。如果在函数中改变了副本的 值不会改变原始的值. 如果参数类型是引用类型，那么传过来的就是这个引用参数的副本，这个副本存放的是参数的地址。如果在函数中没有改变这个副本的地址，而是改变了地址中的 值，那么在函数内的改变会影响到传入的参数。如果在函数中改变了副本的地址，如new一个，那么副本就指向了一个新的地址，此时传入的参数还是指向原来的 地址，所以不会改变参数的值。</p><p>下面的方法可用在 Servlet 程序中读取 HTTP 头。这些方法通过 <em>HttpServletRequest</em> 对象可用：</p><p><strong>1）Cookie[] getCookies()</strong><br>返回一个数组，包含客户端发送该请求的所有的 Cookie 对象。</p><p><strong>2）Object getAttribute(String name)</strong><br>以对象形式返回已命名属性的值，如果没有给定名称的属性存在，则返回 null。</p><p><strong>3）String getHeader(String name)</strong><br>以字符串形式返回指定的请求头的值。Cookie也是头的一种；</p><p><strong>4）String getParameter(String name)</strong><br>以字符串形式返回请求参数的值，或者如果参数不存在则返回 null。</p><p>JDK中提供了三个ClassLoader，根据层级从高到低为：</p><ol><li>Bootstrap ClassLoader，主要加载JVM自身工作需要的类。</li><li>Extension ClassLoader，主要加载%JAVA_HOME%\lib\ext目录下的库类。</li><li>Application ClassLoader，主要加载Classpath指定的库类，一般情况下这是程序中的默认类加载器，也是<strong>ClassLoader.getSystemClassLoader()</strong> 的返回值。（这里的Classpath默认指的是环境变量中配置的Classpath，但是可以在执行Java命令的时候使用-cp 参数来修改当前程序使用的Classpath）</li></ol><p>JVM加载类的实现方式，我们称为 <strong>双亲委托模型</strong>：</p><p>如果一个类加载器收到了类加载的请求，他首先不会自己去尝试加载这个类，而是把这个请求委托给自己的父加载器，每一层的类加载器都是如此，因此所有的类加载请求最终都应该传送到顶层的<strong>Bootstrap ClassLoader</strong>中，只有当父加载器反馈自己无法完成加载请求时，子加载器才会尝试自己加载。</p><p><strong>双亲委托模型的重要用途是为了解决类载入过程中的安全性问题。</strong></p><p>假设有一个开发者自己编写了一个名为***<a href="http://lib.csdn.net/base/java">Java</a>.lang.Object*<strong>的类，想借此欺骗JVM。现在他要使用</strong>自定义ClassLoader<strong>来加载自己编写的</strong><em>java.lang.Object*<strong>类。然而幸运的是，</strong>双亲委托模型<strong>不会让他成功。因为JVM会优先在</strong>Bootstrap ClassLoader<strong>的路径下找到</strong></em>java.lang.Object***类，并载入它</p><ul><li><strong>WAN</strong>（Wide Area Network <strong>广域网</strong>）：覆盖范围很大、几个城市，一个国家，几个国家甚至全球都属于广域网的范畴，从几十公里到几千或几万公里。</li><li><strong>LAN</strong>（Local Area Network <strong>局域网</strong>）：分布于一个间房、每个楼层、整栋楼及楼群之间等，范围一般在2km以内，最大距离不超过10km。主要用来构建一个单位的内部网络，例如办公室网络、办公大楼内的局域网学校的校园网、工厂的企业网、大公司及科研机构的园区网等。</li><li><strong>MAN</strong>（Metropolitan Area Network <strong>城域网</strong>）：介于广域网与局域网之间的一种大范围的高速网络，它的覆盖范围通常为几公里至几十公里。满足城市范围内几十公里的大量企业、机关、公司与社会服务部门的计算机连网需求，实现大量用户、多种信息传输的综合信息网络。</li><li><strong>PAN</strong>（Personal Area Network <strong>个人局域网</strong>）：在个人工作的地方把属于个人使用的电子设备(如便携式电脑等)用无线技术连接起来的网络，因此也常称为无线个人局域网WPAN(Wireless PAN)。</li></ul><p>FDDI是局域网技术，环形拓扑；ATM是广域网；DQDB是城域网；早期以太网采用总线拓扑，由于其管理成本高、不易隔离故障点，易造成网络拥塞，逐渐被以集线器或交换机为核心的星型以太网取代</p>]]></content>
      
      
      
        <tags>
            
            <tag> java刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pytorch学习笔记</title>
      <link href="/2021/11/05/pytorch-xue-xi-bi-ji/"/>
      <url>/2021/11/05/pytorch-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="查看自己的显卡配置"><a href="#查看自己的显卡配置" class="headerlink" title="查看自己的显卡配置"></a>查看自己的显卡配置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvidia-smi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/11/05/pytorch-xue-xi-bi-ji/1.png" alt="1"></p><p>pytorch中</p><p>dir()  :打开看见</p><p>help()  : 说明书</p><p>dir(torch)   查看torch分隔区，我的理解就是包</p><p>help(torch.cuda.is_available)    查看    cuda.is_available  用法</p><p>pytorch中获取数据方法</p><p>dataset：提供一种放肆区获取数据以及label</p><ol><li>如何获取每一个数据及其label</li><li>告诉我们总共有多少数据</li></ol><p>dataloader：为网络提供不同的数据形式</p><h2 id="python中特殊方法名称-getitem-和-add-和-len"><a href="#python中特殊方法名称-getitem-和-add-和-len" class="headerlink" title="python中特殊方法名称__getitem__和__add__和__len__"></a>python中特殊方法名称__getitem__和__add__和__len__</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">一个类可以通过定义具有特殊名称的方法来实现由特殊语法所引发的特定操作 <span class="token punctuation">(</span>例如算术运算或下标与切片<span class="token punctuation">)</span>。这是 Python 实现 操作符重载的方式，允许每个类自行定义基于操作符的特定行为。例如，如果一个类定义了名为 __getitem__<span class="token punctuation">(</span>item<span class="token punctuation">)</span> 的方法，并且 x 为该类的一个实例，则 x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> 基本就等同于 x<span class="token punctuation">.</span>__getitem__<span class="token punctuation">(</span>i<span class="token punctuation">)</span>。除此之外还有__len_<span class="token punctuation">(</span><span class="token punctuation">)</span>专有方法，则<span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>就等同于x<span class="token punctuation">.</span>__len__<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>__add__<span class="token punctuation">(</span><span class="token punctuation">)</span>专有方法，则x<span class="token operator">+</span>other就等同于x<span class="token punctuation">.</span>__add__<span class="token punctuation">(</span>x<span class="token punctuation">,</span>other<span class="token punctuation">)</span>，操作符重载<span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token string">'ConcatDataset[T_co]'</span>指明返回类型<span class="token operator">-</span><span class="token operator">&gt;</span>常常出现在python函数定义的函数名后面，为函数添加元数据<span class="token punctuation">,</span>描述函数的返回类型，从而方便开发人员使用。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="用-tensorboard-进行可视化操作"><a href="#用-tensorboard-进行可视化操作" class="headerlink" title="用    tensorboard    进行可视化操作"></a>用    tensorboard    进行可视化操作</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>tensorboard <span class="token keyword">import</span> SummaryWriterwriter <span class="token operator">=</span> SummaryWriter<span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">)</span><span class="token comment">#writer.add_image()</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    writer<span class="token punctuation">.</span>add_scalar<span class="token punctuation">(</span><span class="token string">"y=x"</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span>i<span class="token punctuation">)</span>writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="打开-tensorboard-生成的可视化文件"><a href="#打开-tensorboard-生成的可视化文件" class="headerlink" title="打开    tensorboard    生成的可视化文件"></a>打开    tensorboard    生成的可视化文件</h2><pre class="line-numbers language-none"><code class="language-none">tensorboard --logdir=logs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="更改生成可视化端口号"><a href="#更改生成可视化端口号" class="headerlink" title="更改生成可视化端口号"></a>更改生成可视化端口号</h2><pre class="line-numbers language-none"><code class="language-none">tensorboard --logdir=logs --port=端口号   #自己要改的端口号<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Python中的-args和-kwargs"><a href="#Python中的-args和-kwargs" class="headerlink" title="Python中的*args和**kwargs"></a>Python中的*args和**kwargs</h2><pre class="line-numbers language-none"><code class="language-none">首先*args必须放在**kwargs前面，*args用于传入可变长度的参数，**kwargs是将可变的关键字参数的字典传给函数实参，同样参数列表长度可以为0或为其他值class person:    def __call__(self, *args, **kwargs):        for i in range(len(args)):            print("__call__"+"hello",args[i])    def hello(self,name):        print("hello"+name)person = person()person(1,2,3,4,5)结果：__call__hello 1__call__hello 2__call__hello 3__call__hello 4__call__hello 5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">person</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> kwargs<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"__call__"</span><span class="token operator">+</span><span class="token string">"hello"</span><span class="token punctuation">,</span>kwargs<span class="token punctuation">.</span>get<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token operator">+</span>name<span class="token punctuation">)</span>person <span class="token operator">=</span> person<span class="token punctuation">(</span><span class="token punctuation">)</span>person<span class="token punctuation">(</span>k1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>k2<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>k3<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>结果：__call__hello <span class="token number">1</span>__call__hello <span class="token number">2</span>__call__hello <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>args和kwargs不仅可以在函数定义中使用，还可以在函数调用中使用。在调用时使用就相当于pack（打包）和unpack（解包），类似于元组的打包和解包。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">person</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> arg1<span class="token punctuation">,</span>arg2<span class="token punctuation">,</span>arg3<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>arg1<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>arg2<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>arg3<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token operator">+</span>name<span class="token punctuation">)</span>person <span class="token operator">=</span> person<span class="token punctuation">(</span><span class="token punctuation">)</span>we <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>person<span class="token punctuation">(</span><span class="token operator">*</span>we<span class="token punctuation">)</span>结果：<span class="token number">1</span><span class="token number">2</span><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">person</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> arg1<span class="token punctuation">,</span>arg2<span class="token punctuation">,</span>arg3<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>arg1<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>arg2<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>arg3<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token operator">+</span>name<span class="token punctuation">)</span>person <span class="token operator">=</span> person<span class="token punctuation">(</span><span class="token punctuation">)</span>we<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"arg1"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"arg2"</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"arg3"</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">}</span>person<span class="token punctuation">(</span><span class="token operator">**</span>we<span class="token punctuation">)</span>结果：<span class="token number">1</span><span class="token number">2</span><span class="token number">3</span>注意：we中的key必须与函数中的arg1参数相同，不然会报错<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="torchvision中datase和DataLoader"><a href="#torchvision中datase和DataLoader" class="headerlink" title="torchvision中datase和DataLoader"></a>torchvision中datase和DataLoader</h2><p>torchvision中dataset用于读取官网存在的数据集</p><p>torchvision中DataLoader用于加载数据集设置batch_size等</p><h2 id="DataLoader不支持索引，所以可以用iter迭代器访问"><a href="#DataLoader不支持索引，所以可以用iter迭代器访问" class="headerlink" title="DataLoader不支持索引，所以可以用iter迭代器访问"></a>DataLoader不支持索引，所以可以用iter迭代器访问</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">DataLoader不支持索引，所以可以用<span class="token builtin">iter</span>迭代器访问we <span class="token operator">=</span> <span class="token builtin">iter</span><span class="token punctuation">(</span>test_load<span class="token punctuation">)</span>img <span class="token punctuation">,</span> target <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span>we<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">,</span>target<span class="token punctuation">)</span>img <span class="token punctuation">,</span> target <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span>we<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">,</span>target<span class="token punctuation">)</span>或者<span class="token keyword">for</span> data <span class="token keyword">in</span> DataLoader来进行访问也可以枚举迭代器进行访问<span class="token keyword">for</span> step<span class="token punctuation">,</span>data <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span><span class="token builtin">iter</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    imgs <span class="token punctuation">,</span> target <span class="token operator">=</span> data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="重写了forward函数，we-x-，是调用了父类的-call-方法-也就是we-call-x"><a href="#重写了forward函数，we-x-，是调用了父类的-call-方法-也就是we-call-x" class="headerlink" title="重写了forward函数，we(x)，是调用了父类的__call__方法,也就是we.__call__(x)"></a>重写了forward函数，we(x)，是调用了父类的__call__方法,也就是we.__call__(x)</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">TestModel</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>we1 <span class="token operator">=</span> <span class="token number">1</span>        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span><span class="token builtin">input</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        output <span class="token operator">=</span> <span class="token builtin">input</span><span class="token operator">+</span><span class="token number">1</span>        <span class="token keyword">return</span> outputwe <span class="token operator">=</span> TestModel<span class="token punctuation">(</span><span class="token punctuation">)</span>x <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>we<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">'''在python里，函数明和变量名字不可以一样，self.函数，self.变量都可以调用，如果一样会导致程序判断不出来是变量还是函数名，在上述代码中，重写了forward函数，we(x)，是调用了父类的__call__方法，该方法里调用了forward函数，也可以这样  we.forward(x)调用forward函数，we(x)就等于we.__call__(x)'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="是时候总结一波自己遇到的魔法方法了"><a href="#是时候总结一波自己遇到的魔法方法了" class="headerlink" title="是时候总结一波自己遇到的魔法方法了"></a>是时候总结一波自己遇到的魔法方法了</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">__get__<span class="token punctuation">(</span><span class="token punctuation">)</span>：类中实现这个方法叫做描述器（<span class="token builtin">set</span>、delete）<span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'执行__init__方法'</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__get__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> owner<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'执行__get__方法'</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> A<span class="token punctuation">(</span><span class="token punctuation">)</span>b <span class="token operator">=</span> B<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 返回：执行__init__方法  解读：实例化只执行__init__方法，不调用 __get__方法</span>c <span class="token operator">=</span> b<span class="token punctuation">.</span>a  <span class="token comment"># 返回：执行__get__方法  解读：A类作为B类的属性调用时，执行__get__方法</span>__getitem__<span class="token punctuation">(</span>item<span class="token punctuation">)</span>：<span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>、<span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> 切片或索引 自动执行__setitem__<span class="token punctuation">(</span>item<span class="token punctuation">)</span>：<span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>‘<span class="token number">123</span>’ 赋值 自动执行__delitem__<span class="token punctuation">(</span>item<span class="token punctuation">)</span>：<span class="token keyword">del</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> 删除值 自动执行__call__<span class="token punctuation">(</span><span class="token punctuation">)</span>：告诉你类对象也可以当作函数来调用，一般叫【函数式调用】。__str__<span class="token punctuation">(</span><span class="token punctuation">)</span> ：<span class="token keyword">print</span><span class="token punctuation">(</span>对象<span class="token punctuation">)</span> 自动执行__dict__<span class="token punctuation">(</span><span class="token punctuation">)</span>：类名<span class="token punctuation">.</span><span class="token builtin">dict</span>，自动调用，对象中封装的所有成员通过字典形式返回__doc__<span class="token punctuation">(</span><span class="token punctuation">)</span>：类名<span class="token punctuation">.</span>doc 时，自动调用，返回类都注释信息__len__<span class="token punctuation">(</span><span class="token punctuation">)</span>：使用<span class="token builtin">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span>函数时，自动调用__add__<span class="token punctuation">(</span><span class="token punctuation">)</span>：使用加号时，自动调用__iter__<span class="token punctuation">(</span><span class="token punctuation">)</span>：可迭代对象，<span class="token keyword">for</span>循环时 自动执行__len_<span class="token punctuation">(</span><span class="token punctuation">)</span>：返回长度，使用<span class="token builtin">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span>时自动调用如果类中有__iter__方法，就是可迭代对象对象<span class="token punctuation">.</span><span class="token builtin">iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>的返回值是迭代器。。。。。。待续<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>conv2D表示是二维的，1D表示1维的，图片是二维的，一个向量是一维的</p><p>torch.nn和torch.nn.function的关系，torch.nn是torch.nn.function的封装</p><h2 id="CONV2D输入与输出shape关系官方计算公式"><a href="#CONV2D输入与输出shape关系官方计算公式" class="headerlink" title="CONV2D输入与输出shape关系官方计算公式"></a>CONV2D输入与输出shape关系官方计算公式</h2><p>计算输入输出公式</p><p><img src="/2021/11/05/pytorch-xue-xi-bi-ji/2.png" alt="1"></p><h2 id="ceiling-和-floor模式"><a href="#ceiling-和-floor模式" class="headerlink" title="ceiling 和 floor模式"></a>ceiling 和 floor模式</h2><p>floor模式向下取整，ceiling向上取整</p><h2 id="pytorch保存模型的几种方法"><a href="#pytorch保存模型的几种方法" class="headerlink" title="pytorch保存模型的几种方法"></a>pytorch保存模型的几种方法</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torchvisionvgg16 <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>models<span class="token punctuation">.</span>vgg16<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token comment">#保存方式1     保存模型结构和模型参数</span>torch<span class="token punctuation">.</span>save<span class="token punctuation">(</span>vgg16<span class="token punctuation">,</span><span class="token string">"vgg16_method1.pth"</span><span class="token punctuation">)</span><span class="token comment">#保存方式2  &gt;  参数保存成字典形式，只保留了参数，而没有模型结构（官方推荐）</span>torch<span class="token punctuation">.</span>save<span class="token punctuation">(</span>vgg16<span class="token punctuation">.</span>state_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"vgg16_model2.pth"</span><span class="token punctuation">)</span>model <span class="token operator">=</span> torch<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"net_method1.pth"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token triple-quoted-string string">'''#保存方式1  &gt; 加载模型import torchvisionfrom torch import nnmodel = torch.load("vgg16_method1.pth")#保存方式2  &gt; 加载模型vgg16 = torchvision.models.vgg16(pretrained=False)vgg16.load_state_dict(torch.load("vgg16_method2.pth"))#model = vgg16.load_state_dict()'''</span><span class="token comment">#陷阱</span><span class="token triple-quoted-string string">'''class Net(nn.Module):    def __init__(self):        super(Net, self).__init__()        self.conv1 = nn.Conv2d(3,64,3)    def forward(self,input):        x = self.conv1(input)        return xnet = Net()torch.save(net,"net_method1.pth")'''</span><span class="token comment">#方式1保存方式陷阱，必须将模型原始的类放入py文件，否则加载不出来，如果是官方的模型不用写类，就是能够让加载模型的方法能够访问到模型的定义方式</span><span class="token keyword">class</span> <span class="token class-name">Net</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>Net<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conv1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span><span class="token builtin">input</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>conv1<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> xmodel <span class="token operator">=</span> torch<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"net_method1.pth"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="item"><a href="#item" class="headerlink" title="item"></a>item</h2><p>在torch中将</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torcha <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>结果：tensor<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="用pytorch写一个整体训练套路"><a href="#用pytorch写一个整体训练套路" class="headerlink" title="用pytorch写一个整体训练套路"></a>用pytorch写一个整体训练套路</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#model.py文件</span><span class="token keyword">import</span> torch<span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">from</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">import</span> Sequential<span class="token keyword">class</span> <span class="token class-name">Net</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>Net<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>model <span class="token operator">=</span> Sequential<span class="token punctuation">(</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">64</span><span class="token operator">*</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span><span class="token builtin">input</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> x<span class="token comment">#进行测试</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    net <span class="token operator">=</span> Net<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token builtin">input</span> <span class="token operator">=</span> torch<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    output <span class="token operator">=</span> net<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torchvision<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>tensorboard <span class="token keyword">import</span> SummaryWriter<span class="token keyword">from</span> taolu_model <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#准备数据集</span><span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">from</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">import</span> Sequential<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data <span class="token keyword">import</span> DataLoadertrain_data <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span>root<span class="token operator">=</span><span class="token string">"dataset"</span><span class="token punctuation">,</span>train<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>test_data <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span>root<span class="token operator">=</span><span class="token string">"dataset"</span><span class="token punctuation">,</span>train<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>train_data_size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>train_data<span class="token punctuation">)</span>test_data_size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>test_data<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"训练数据集长度：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>train_data_size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"训练数据集长度：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>test_data_size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#利用dataloader加载数据</span>train_data_loader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>train_data<span class="token punctuation">,</span>batch_size<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span>test_data_loader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>test_data<span class="token punctuation">,</span>batch_size<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token comment">#创建网络</span>net <span class="token operator">=</span> Net<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#损失函数</span>loss_fn <span class="token operator">=</span> nn<span class="token punctuation">.</span>CrossEntropyLoss<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#优化器</span><span class="token comment">#learn_rate = 0.01</span>learn_rate <span class="token operator">=</span> <span class="token number">1e-2</span>optimizer <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>SGD<span class="token punctuation">(</span>net<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>lr<span class="token operator">=</span>learn_rate<span class="token punctuation">)</span><span class="token comment">#训练次数</span>rotal_train_step <span class="token operator">=</span> <span class="token number">0</span><span class="token comment">#测试次数</span>rotal_test_step <span class="token operator">=</span> <span class="token number">0</span><span class="token comment">#训练次数</span>epoch <span class="token operator">=</span> <span class="token number">10</span><span class="token comment">#添加tensorboard</span>writer <span class="token operator">=</span> SummaryWriter<span class="token punctuation">(</span><span class="token string">"taolu"</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>epoch<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"————第{}轮训练开始————"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">#训练步骤开始</span>    net<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">#设置网络为train模式，只对dropout和normalization层有用</span>    <span class="token keyword">for</span> data <span class="token keyword">in</span> train_data_loader<span class="token punctuation">:</span>        imgs<span class="token punctuation">,</span>target <span class="token operator">=</span> data        output <span class="token operator">=</span> net<span class="token punctuation">(</span>imgs<span class="token punctuation">)</span>        loss <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>output<span class="token punctuation">,</span>target<span class="token punctuation">)</span>        optimizer<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span>        loss<span class="token punctuation">.</span>backward<span class="token punctuation">(</span><span class="token punctuation">)</span>        optimizer<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span>        rotal_train_step <span class="token operator">=</span> rotal_train_step <span class="token operator">+</span> <span class="token number">1</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>rotal_train_step<span class="token operator">%</span><span class="token number">100</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>rotal_train_step<span class="token punctuation">)</span>            writer<span class="token punctuation">.</span>add_scalar<span class="token punctuation">(</span><span class="token string">"train_loss"</span><span class="token punctuation">,</span>loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>rotal_train_step<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"训练次数：{}，loss{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>rotal_train_step<span class="token punctuation">,</span>loss<span class="token punctuation">)</span><span class="token punctuation">)</span>    net<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#设置网络为验证模式，只对dropout和normalization层有用</span>    <span class="token comment">#测试步骤开始，无梯度</span>    total_test_loss <span class="token operator">=</span> <span class="token number">0</span>    total_test_acc <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> data <span class="token keyword">in</span> test_data_loader<span class="token punctuation">:</span>            imgs<span class="token punctuation">,</span>target <span class="token operator">=</span> data            output <span class="token operator">=</span> net<span class="token punctuation">(</span>imgs<span class="token punctuation">)</span>            loss <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>output<span class="token punctuation">,</span>target<span class="token punctuation">)</span>            total_test_loss <span class="token operator">=</span> total_test_loss <span class="token operator">+</span> loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span>            accury <span class="token operator">=</span> <span class="token punctuation">(</span>output<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            total_test_acc <span class="token operator">=</span> total_test_acc <span class="token operator">+</span> accury    writer<span class="token punctuation">.</span>add_scalar<span class="token punctuation">(</span><span class="token string">"test_loss"</span><span class="token punctuation">,</span> total_test_loss<span class="token punctuation">,</span> rotal_test_step<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"整体测试集上的loss:{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>total_test_loss<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"整体正确率：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>total_test_acc<span class="token operator">/</span>test_data_size<span class="token punctuation">)</span><span class="token punctuation">)</span>    writer<span class="token punctuation">.</span>add_scalar<span class="token punctuation">(</span><span class="token string">"测试正确率"</span><span class="token punctuation">,</span>total_test_acc<span class="token operator">/</span>test_data_size<span class="token punctuation">,</span>i<span class="token punctuation">)</span>    torch<span class="token punctuation">.</span>save<span class="token punctuation">(</span>net<span class="token punctuation">,</span><span class="token string">"net_{}.pth"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="outputs-argmax-0"><a href="#outputs-argmax-0" class="headerlink" title="outputs.argmax(0)"></a>outputs.argmax(0)</h2><p>参数为0竖着比，参数为1横着比</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torchoutputs <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>outputs<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#结果</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torchoutputs <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.8</span><span class="token punctuation">,</span><span class="token number">0.2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0.2</span><span class="token punctuation">,</span><span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>outputs<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#结果</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="调用GPU训练pytorch网络-方式1"><a href="#调用GPU训练pytorch网络-方式1" class="headerlink" title="调用GPU训练pytorch网络  方式1"></a>调用GPU训练pytorch网络  方式1</h2><p>找到：</p><p>网络模型</p><p>数据（输入，标注）</p><p>损失函数</p><p>调用他们的       .cuda()        方法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">net <span class="token operator">=</span> net<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span>loss_fn <span class="token operator">=</span> loss_fn<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span>imgs <span class="token operator">=</span> imgs<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span>target <span class="token operator">=</span> target<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#其中网络和损失函数不需要另外赋值，赋值也没有问题，数据必须要另外赋值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="调用GPU训练pytorch网络-方式2"><a href="#调用GPU训练pytorch网络-方式2" class="headerlink" title="调用GPU训练pytorch网络  方式2"></a>调用GPU训练pytorch网络  方式2</h2><p>找到：</p><p>网络模型</p><p>数据（输入，标注）</p><p>损失函数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">调用他们的       <span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>    方法   device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">"cpu"</span><span class="token punctuation">)</span> <span class="token comment">#在cpu上   </span>device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">"cuda"</span><span class="token punctuation">)</span>  <span class="token comment">#在gpu上</span>device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">"cuda:0"</span><span class="token punctuation">)</span>  <span class="token comment">#在第一张显卡上</span>device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">"cuda:1"</span><span class="token punctuation">)</span>  <span class="token comment">#在第二张显卡上</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">net <span class="token operator">=</span> net<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>loss_fn <span class="token operator">=</span> loss_fn<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>imgs <span class="token operator">=</span> imgs<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>target <span class="token operator">=</span> target<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span><span class="token comment">#其中网络和损失函数不需要另外赋值，赋值也没有问题，数据必须要另外赋值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>语法简写：cuda可用选用cuda否则选用cpu（GPU训练方式2更加常用）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">"cuda"</span> <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available <span class="token keyword">else</span> <span class="token string">"cpu"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="GPU上训练的模型cpu上运行"><a href="#GPU上训练的模型cpu上运行" class="headerlink" title="GPU上训练的模型cpu上运行"></a>GPU上训练的模型cpu上运行</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">model <span class="token operator">=</span> torch<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"net_782.pth"</span><span class="token punctuation">,</span>map_location<span class="token operator">=</span>torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">"cpu"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="一个测试流程"><a href="#一个测试流程" class="headerlink" title="一个测试流程"></a>一个测试流程</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torchvision<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">from</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">import</span> Sequentialimage <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">r'D:\pytorchstudy\data\练手数据集\train\ants_image\0013035.jpg'</span><span class="token punctuation">)</span>image <span class="token operator">=</span> image<span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">'RGB'</span><span class="token punctuation">)</span>  <span class="token comment">#如果图片是png会将透明度通道去掉只保留RGB颜色通道</span><span class="token keyword">print</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span>transform <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span>    torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>Resize<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>image <span class="token operator">=</span> transform<span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Net</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>Net<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>model <span class="token operator">=</span> Sequential<span class="token punctuation">(</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">64</span><span class="token operator">*</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span><span class="token builtin">input</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> xmodel <span class="token operator">=</span> torch<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"net_782.pth"</span><span class="token punctuation">,</span>map_location<span class="token operator">=</span>torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">"cpu"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span>image <span class="token operator">=</span> torch<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>image<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#去掉梯度，节省内存，预测不需要更新梯度</span>    output <span class="token operator">=</span> model<span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token comment">#输出预测概率最大的类别</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完结撒花！！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> pytorch </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自己的笔记1</title>
      <link href="/2021/11/03/mianshi/"/>
      <url>/2021/11/03/mianshi/</url>
      
        <content type="html"><![CDATA[<p>自己的笔记1</p><p><img src="/2021/11/03/mianshi/1.png" alt="1"></p><p><img src="/2021/11/03/mianshi/2.png" alt="1"></p><p><img src="/2021/11/03/mianshi/3.png" alt="1"></p><p>================================================================================================================================================================</p><p><img src="/2021/11/03/mianshi/tu.jpg" alt="1"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 面经笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分布式作业1</title>
      <link href="/2021/11/02/fen-bu-shi-zuo-ye-1/"/>
      <url>/2021/11/02/fen-bu-shi-zuo-ye-1/</url>
      
        <content type="html"><![CDATA[<p>Mkdir创建目录class1   mkdir class1</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-1/1.png" alt="1"></p><p>创建文件test.txt  touch test.txt</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-1/2.png" alt="1"></p><p>创建用户Tom   adduser Tom</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-1/3.png" alt="1"></p><p>给用户tom设置密码    passwd Tom</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-1/4.png" alt="1"></p><p>远程用tom用户登录    </p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-1/5.png" alt="1"></p><p>通过命令scp [root@localhost:/home/admin/test.txt ./](mailto:root@localhost:/home/admin/test.txt ./)  将root用户下的test.txt，文件拷贝到Tom用户下的class1中</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-1/6.png" alt="1"></p><p>查看是否拷贝成功</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-1/7.png" alt="1"></p><p>成功！</p><p>完结撒花！！！</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-1/tu.jpg" alt="tu"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 分布式作业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分布式作业2</title>
      <link href="/2021/11/02/fen-bu-shi-zuo-ye-2/"/>
      <url>/2021/11/02/fen-bu-shi-zuo-ye-2/</url>
      
        <content type="html"><![CDATA[<p>查看文件行数，wc -l 文件名</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-2/1.jpg" alt="1"></p><p>统计文件字符数  wc  -m 文件名</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-2/2.jpg" alt="1"></p><p>统计protein出现次数  cat 文件名 | grep -o “protein” | wc -l</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-2/3.jpg" alt="1"></p><p>统计出现多少个deep learning       cat 文件名 | grep -o “deep lerning” | wc -l</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-2/4.jpg" alt="1"></p><p>每段都以空格开头，匹配空格    cat 文件名 | grep “^ “ | wc -l</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-2/11.png" alt="1"></p><p>查找以两个空格开始以.结尾的话</p><p>由于复制的文件内容过多而且pdf复制内容过于混乱所以整理出来三段</p><p>当作匹配的文件</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-2/6.jpg" alt="1"></p><p>匹配命令cat keshang.txt | grep -oP “^ .*?.“ &gt; vi-protein.txt</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-2/7.jpg" alt="1"></p><p>匹配结果：</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-2/8.jpg" alt="1"></p><p>统计当前目录下的所有文件行数：<br>wc -l *</p><p>当前目录以及子目录的所有文件行数：</p><p>find  . * | xargs wc -l</p><p>wc命令的功能为统计指定文件中的字节数、字数、行数, 并将统计结果显示输出。<br>语法：wc [选项] 文件…<br>说明：该命令统计给定文件中的字节数、字数、行数。如果没有给出文件名，则从标准输入读取。wc同时也给出所有指定文件的总统计数。字是由空格字符区分开的最大字符串。<br>该命令各选项含义如下： </p><ul><li>c 统计字节数。 </li><li>l 统计行数。 </li><li>w 统计字数。<br>这些选项可以组合使用。<br>输出列的顺序和数目不受选项的顺序和数目的影响。总是按下述顺序显示并且每项最多一列。<br>行数、字数、字节数、文件名<br>如果命令行中没有文件名，则输出中不出现文件名。<br>例如：<br>$ wc - lcw file1 file2<br>4 33 file1<br>7 52 file2<br>11 11 85 total<br>省略任选项-lcw，wc命令的执行结果与上面一样<br>如：<br>wc命令用来计算一个文件或者指定的多个文件中的行数，单词数和字符数。如：<br>wc filename<br>第一列显示行数，第二列显示单词数，第三列显示字符数。<br>wc 有四个参数可选，分别是l,c,m,w<br>wc -l filename 报告行数<br>wc -c filename 报告字节数<br>wc -m filename 报告字符数<br>wc -w filename 报告单词数</li></ul><p>grep使用正则表达式</p><p>[ABC]    匹配 <strong>[…]</strong> 中的所有字符，例如 <strong>[aeiou]</strong> 匹配字符串 “google runoob taobao” 中所有的 e o u a 字母</p><table><thead><tr><th align="center">字符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">\</td><td align="center">将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“<code>n</code>”匹配字符“<code>n</code>”。“<code>\n</code>”匹配一个换行符。串行“<code>\\</code>”匹配“<code>\</code>”而“<code>\(</code>”则匹配“<code>(</code>”。</td></tr><tr><td align="center">^</td><td align="center">匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“<code>\n</code>”或“<code>\r</code>”之后的位置。</td></tr><tr><td align="center">$</td><td align="center">匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“<code>\n</code>”或“<code>\r</code>”之前的位置。</td></tr><tr><td align="center">*</td><td align="center">匹配前面的子表达式零次或多次。例如，zo<em>能匹配“<code>z</code>”以及“<code>zoo</code>”。</em>等价于{0,}。</td></tr><tr><td align="center">+</td><td align="center">匹配前面的子表达式一次或多次。例如，“<code>zo+</code>”能匹配“<code>zo</code>”以及“<code>zoo</code>”，但不能匹配“<code>z</code>”。+等价于{1,}。</td></tr><tr><td align="center">?</td><td align="center">匹配前面的子表达式零次或一次。例如，“<code>do(es)?</code>”可以匹配“<code>does</code>”或“<code>does</code>”中的“<code>do</code>”。?等价于{0,1}。</td></tr><tr><td align="center">{<em>n</em>}</td><td align="center"><em>n</em>是一个非负整数。匹配确定的<em>n</em>次。例如，“<code>o{2}</code>”不能匹配“<code>Bob</code>”中的“<code>o</code>”，但是能匹配“<code>food</code>”中的两个o。</td></tr><tr><td align="center">{<em>n</em>,}</td><td align="center"><em>n</em>是一个非负整数。至少匹配<em>n</em>次。例如，“<code>o{2,}</code>”不能匹配“<code>Bob</code>”中的“<code>o</code>”，但能匹配“<code>foooood</code>”中的所有o。“<code>o{1,}</code>”等价于“<code>o+</code>”。“<code>o{0,}</code>”则等价于“<code>o*</code>”。</td></tr><tr><td align="center">{<em>n</em>,<em>m</em>}</td><td align="center"><em>m</em>和<em>n</em>均为非负整数，其中<em>n</em>&lt;=<em>m</em>。最少匹配<em>n</em>次且最多匹配<em>m</em>次。例如，“<code>o{1,3}</code>”将匹配“<code>fooooood</code>”中的前三个o。“<code>o{0,1}</code>”等价于“<code>o?</code>”。请注意在逗号和两个数之间不能有空格。</td></tr><tr><td align="center">?</td><td align="center">当该字符紧跟在任何一个其他限制符（*,+,?，{<em>n</em>}，{<em>n</em>,}，{<em>n</em>,<em>m</em>}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“<code>oooo</code>”，“<code>o+?</code>”将匹配单个“<code>o</code>”，而“<code>o+</code>”将匹配所有“<code>o</code>”。</td></tr><tr><td align="center">.</td><td align="center">匹配除“<code>\</code>*<code>n</code><em>”之外的任何单个字符。要匹配包括“<code>\</code></em><code>n</code>*”在内的任何字符，请使用像“`(.</td></tr><tr><td align="center">(pattern)</td><td align="center">匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“<code>\(</code>”或“<code>\)</code>”。</td></tr><tr><td align="center">(?:pattern)</td><td align="center">匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“`(</td></tr><tr><td align="center">(?=pattern)</td><td align="center">正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“`Windows(?=95</td></tr><tr><td align="center">(?!pattern)</td><td align="center">正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“`Windows(?!95</td></tr><tr><td align="center">(?&lt;=pattern)</td><td align="center">反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“`(?&lt;=95</td></tr><tr><td align="center">(?&lt;!pattern)</td><td align="center">反向否定预查，与正向否定预查类拟，只是方向相反。例如“`(?&lt;!95</td></tr><tr><td align="center">x|y</td><td align="center">匹配x或y。例如，“`z</td></tr><tr><td align="center">[xyz]</td><td align="center">字符集合。匹配所包含的任意一个字符。例如，“<code>[abc]</code>”可以匹配“<code>plain</code>”中的“<code>a</code>”。</td></tr><tr><td align="center">[^xyz]</td><td align="center">负值字符集合。匹配未包含的任意字符。例如，“<code>[^abc]</code>”可以匹配“<code>plain</code>”中的“<code>p</code>”。</td></tr><tr><td align="center">[a-z]</td><td align="center">字符范围。匹配指定范围内的任意字符。例如，“<code>[a-z]</code>”可以匹配“<code>a</code>”到“<code>z</code>”范围内的任意小写字母字符。</td></tr><tr><td align="center">[^a-z]</td><td align="center">负值字符范围。匹配任何不在指定范围内的任意字符。例如，“<code>[^a-z]</code>”可以匹配任何不在“<code>a</code>”到“<code>z</code>”范围内的任意字符。</td></tr><tr><td align="center">\b</td><td align="center">匹配一个单词边界，也就是指单词和空格间的位置。例如，“<code>er\b</code>”可以匹配“<code>never</code>”中的“<code>er</code>”，但不能匹配“<code>verb</code>”中的“<code>er</code>”。</td></tr><tr><td align="center">\B</td><td align="center">匹配非单词边界。“<code>er\B</code>”能匹配“<code>verb</code>”中的“<code>er</code>”，但不能匹配“<code>never</code>”中的“<code>er</code>”。</td></tr><tr><td align="center">\cx</td><td align="center">匹配由x指明的控制字符。例如，\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“<code>c</code>”字符。</td></tr><tr><td align="center">\d</td><td align="center">匹配一个数字字符。等价于[0-9]。</td></tr><tr><td align="center">\D</td><td align="center">匹配一个非数字字符。等价于[^0-9]。</td></tr><tr><td align="center">\f</td><td align="center">匹配一个换页符。等价于\x0c和\cL。</td></tr><tr><td align="center">\n</td><td align="center">匹配一个换行符。等价于\x0a和\cJ。</td></tr><tr><td align="center">\r</td><td align="center">匹配一个回车符。等价于\x0d和\cM。</td></tr><tr><td align="center">\s</td><td align="center">匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \f\n\r\t\v]。</td></tr><tr><td align="center">\S</td><td align="center">匹配任何非空白字符。等价于[^ \f\n\r\t\v]。</td></tr><tr><td align="center">\t</td><td align="center">匹配一个制表符。等价于\x09和\cI。</td></tr><tr><td align="center">\v</td><td align="center">匹配一个垂直制表符。等价于\x0b和\cK。</td></tr><tr><td align="center">\w</td><td align="center">匹配包括下划线的任何单词字符。等价于“<code>[A-Za-z0-9_]</code>”。</td></tr><tr><td align="center">\W</td><td align="center">匹配任何非单词字符。等价于“<code>[^A-Za-z0-9_]</code>”。</td></tr><tr><td align="center">\x<em>n</em></td><td align="center">匹配<em>n</em>，其中<em>n</em>为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“<code>\x41</code>”匹配“<code>A</code>”。“<code>\x041</code>”则等价于“<code>\x04&amp;1</code>”。正则表达式中可以使用ASCII编码。.</td></tr><tr><td align="center">\num</td><td align="center">匹配<em>num</em>，其中<em>num</em>是一个正整数。对所获取的匹配的引用。例如，“<code>(.)\1</code>”匹配两个连续的相同字符。</td></tr><tr><td align="center">\n</td><td align="center">标识一个八进制转义值或一个向后引用。如果*n<em>之前至少</em>n<em>个获取的子表达式，则</em>n<em>为向后引用。否则，如果</em>n<em>为八进制数字（0-7），则</em>n*为一个八进制转义值。</td></tr><tr><td align="center">\nm</td><td align="center">标识一个八进制转义值或一个向后引用。如果*nm<em>之前至少有</em>nm<em>个获得子表达式，则</em>nm<em>为向后引用。如果*nm</em>之前至少有<em>n</em>个获取，则<em>n</em>为一个后跟文字<em>m</em>的向后引用。如果前面的条件都不满足，若<em>n</em>和<em>m</em>均为八进制数字（0-7），则*nm<em>将匹配八进制转义值</em>nm*。</td></tr><tr><td align="center">\nml</td><td align="center">如果<em>n</em>为八进制数字（0-3），且<em>m和l</em>均为八进制数字（0-7），则匹配八进制转义值<em>nm</em>l。</td></tr><tr><td align="center">\u<em>n</em></td><td align="center">匹配<em>n</em>，其中<em>n</em>是一个用四个十六进制数字表示的Unicode字符。例如，\u00A9匹配版权符号（©）。</td></tr></tbody></table><p>常用正则表达式</p><table><thead><tr><th align="center">用户名</th><th>/^[a-z0-9_-]{3,16}$/</th></tr></thead><tbody><tr><td align="center">密码</td><td>/^[a-z0-9_-]{6,18}$/</td></tr><tr><td align="center">十六进制值</td><td>/^#?([a-f0-9]{6}|[a-f0-9]{3})$/</td></tr><tr><td align="center">电子邮箱</td><td>/^([a-z0-9_.-]+)@([\da-z.-]+).([a-z.]{2,6})$/ /^[a-z\d]+(.[a-z\d]+)*@(<a href="-%5B%5Cda-z%5D">\da-z</a>?)+(.{1,2}[a-z]+)+$/</td></tr><tr><td align="center">URL</td><td>/^(https?://)?([\da-z.-]+).([a-z.]{2,6})([/\w .-]*)*/?$/</td></tr><tr><td align="center">IP 地址</td><td>/((2[0-4]\d|25[0-5]|[01]?\d\d?).){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)/ /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/</td></tr><tr><td align="center">HTML 标签</td><td>/^&lt;([a-z]+)([^&lt;]+)<em>(?:&gt;(.</em>)&lt;/\1&gt;|\s+/&gt;)$/</td></tr><tr><td align="center">删除代码\注释</td><td>(?&lt;!http:|\S)//.*$</td></tr><tr><td align="center">Unicode编码中的汉字范围</td><td>/^[\u2E80-\u9FFF]+$/</td></tr></tbody></table><p>正则表达式在默认情况下匹配都是贪婪模式，如果要改成非贪婪模式，只需要量词后面加上一个问号?</p><p>贪婪模式常用的量词有：</p><p>{m,n}<br>{m,}<br>?<br>*<br>+</p><p>如果改成非贪婪模式，只需这样：</p><p>{m,n}?<br>{m,}?<br>??<br>*?<br>+?</p><p>Linux上grep执行不生效，和bsd和GUN协议有关，bsd用grep -oE    GUN用grep -oP<br>l例子：  grep -oP ‘he.*?llo’     就生效啦！</p><p>Linux中个目录作用：</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-2/12.jpg" alt="1"></p><p>参考链接：</p><p><a href="https://blog.csdn.net/freeking101/article/details/53404897">https://blog.csdn.net/freeking101/article/details/53404897</a></p><p><a href="https://tool.oschina.net/uploads/apidocs/jquery/regexp.html">https://tool.oschina.net/uploads/apidocs/jquery/regexp.html</a></p><p><a href="https://blog.csdn.net/qq_35702095/article/details/103720235">https://blog.csdn.net/qq_35702095/article/details/103720235</a></p><p>完结撒花！！！</p><p><img src="/2021/11/02/fen-bu-shi-zuo-ye-2/tu.jpg" alt="tu"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 分布式作业 </tag>
            
            <tag> wc </tag>
            
            <tag> grep </tag>
            
            <tag> 正则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javaSE</title>
      <link href="/2021/10/29/javase/"/>
      <url>/2021/10/29/javase/</url>
      
        <content type="html"><![CDATA[<p>进制表示</p><p>二进制0b</p><p>八进制0</p><p>十六进制0x</p><pre class="line-numbers language-none"><code class="language-none">int w=10;int w= 010;int w=0x10;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>浮点数：</p><p>float；double：不准确有限，离散，摄入误差，大约，接近但不等于</p><p>最好完全避免使用浮点数进行比较</p><p>银行等精确业务用   BigDecimal    类精确表示</p><p>char类型使用unicode编码，2字节     2的16次方，1个字节8个比特</p><p>u0000 到 uFFFF</p><p>char c3=’\u0061’       \u转义字符</p><p>输出就是a</p><p>进行运算的时候转换成同一类型在进行运算</p><p>基本类型强制转换（类型）变量名</p><p>左减价乘除先转换类型在做计算</p><p>强制转换   由低到高    int 转换成double        </p><p>自动转换  由高到底     double转换成int    </p><p>注意：不能对布尔类型进行转换；不能转换成不相干的类型（人——&gt;猪）；大容量转换成低容量时要强制转换，反之不用；强制转换可能会发生内存溢出</p><p>jdk7特性数字可以用下划线分割，下划线不会被输出，如：int i = 10_000  </p><p>变量：实例变量（在类里，方法外边），局部变量（在方法里），类变量（实例变量加上static）</p><p>布尔值默认false，其余基本类型默认null，final修饰的叫常量不可被修改</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">final</span> <span class="token keyword">static</span> 和<span class="token keyword">static</span> <span class="token keyword">final</span>   都可以，修饰符不存在先后顺序<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>命名规范</p><p><img src="/2021/10/29/javase/1.png" alt="1"></p><p>左移：&lt;&lt;        4左移1位  4&lt;&lt;1</p><p>右移：&gt;&gt;         4右移一位   4&gt;&gt;1</p><p>字符串连接符如果  ”“ + a + b    会将变量a和b转换成String类型进行拼接</p><p>如果   a  +   b   +   “”    a+b正常进行运算，然后在转化成String与”“拼接</p><p>x ? y : z</p><p>如果  x  为  true  则返回  y  否则返回  z</p><p>优先级：记什么优先级，加括号不香吗？</p><p><img src="/2021/10/29/javase/2.png" alt="1"></p><p>JavaSE官方文档，jdk8</p><p><a href="https://docs.oracle.com/javase/8/docs/api/index.html">https://docs.oracle.com/javase/8/docs/api/index.html</a></p><p>增加作者，版本注释等，只要增加在类上面用    /**回车    即可注释，注释完后在方法上也可以打上。</p><p><img src="/2021/10/29/javase/3.png" alt="1"></p><p>然后通过命令行生成类似的官方文档</p><p><img src="/2021/10/29/javase/4.png" alt="1"></p><p><img src="/2021/10/29/javase/5.png" alt="1"></p><p><img src="/2021/10/29/javase/7.png" alt="1"></p><p><img src="/2021/10/29/javase/6.png" alt="1"></p><p>1.IDEA 的 JavaDoc 生成功能在菜单 Tools-&gt;Generate JavaDoc 项里面。</p><p><img src="/2021/10/29/javase/8.png" alt="1"></p><p>2.里面有一个 Locale 可选填项，建议在此填写 zh_CN。</p><p>3.还有一个“Other command line arguments:”可选填项，非常重要，是填写直接向 javadoc.exe 传递的参数内容。因为有一些重要的设置，只能通过直接参数形式向 javadoc.exe 传递。这里必须要填写如下参数：</p><p>-encoding UTF-8 -charset UTF-8 -windowtitle “接口文档3.4” -link <a href="https://link.zhihu.com/?target=http://docs.oracle.com/javase/7/docs/api">http://docs.Oracle.com/javase/7/docs/api</a></p><p><img src="/2021/10/29/javase/9.png" alt="1"></p><p>4.点击OK即可将javadoc生成到指定目录。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">input.hasNext()   input.hasNextLine()     input.hasNextInt()等//下一个输入，可以用于判断是否还有下一个输入，是否还有下一个输入（行），是否还有下一个整数等使用input.next()  或  input.nextLine()接受下一个输入//最后别忘记关闭//凡是io流要记得关闭，不然占用资源input.close()  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/29/javase/10.png" alt="1"></p><p>查看类的方法结构。</p><p><img src="/2021/10/29/javase/11.png" alt="1"></p><p>switch</p><p><img src="/2021/10/29/javase/12.png" alt="1"></p><p>反编译将.class文件在文件系统中丢到idea创建项目的目录，双击打开即可看到反编译的结果</p><p><img src="/2021/10/29/javase/15.png" alt="1"></p><p><img src="/2021/10/29/javase/13.png" alt="1"></p><p><img src="/2021/10/29/javase/14.png" alt="1"></p><p>JAVA中没有goto，但是有标签，用法如下，outer可以换成任意单词，了解即可，程序中最好不要用，不利于模块化。</p><p><img src="/2021/10/29/javase/16.png" alt="1"></p><p>java都是值传递</p><p>多态：</p><p>重载：方法名字一样，参数不同</p><p>重写：方法名相同，方法参数相同，方法里执行的动作不同</p><p>可变参数：</p><p><img src="/2021/10/29/javase/17.png" alt="1"></p><p>递归：</p><p><img src="/2021/10/29/javase/18.png" alt="1"></p><p>数组静态初始化，创建+赋值</p><p>int[] a ={1,32,4,5,6,};</p><p>动态初始化，int[] a = new int[10];然后在赋值。</p><p>Java内存分析</p><p><img src="/2021/10/29/javase/19.png" alt="1"></p><p>Arrays类常用方法：</p><p>什么是面向对象：以类的方式组织代码，以对象的方式组织（封装）数据。</p><p><img src="/2021/10/29/javase/20.png" alt="1"></p><p>继承    extends     子类是父类的扩展</p><p>子类无参构造自动调用父类无参构造   super()   父类构造方法在子类构造方法的第一行</p><p>父类没有无参构造（只写了有参构造） 子类也没有无参构造。</p><p><img src="/2021/10/29/javase/21.png" alt="1"></p><p>父类的引用可以指向了子类，方法的调用之和左边的类型有关（静态方法）   父类可以new子类，静态方法属于类，父类无法调用子类独有方法。</p><p>父类的引用可以指向了子类，方法的调用之和右边的类型有关（非静态方法）父类可以new子类</p><p>重写：需要有继承关系类，子类重写父类的方法</p><p>​            1 方法名必须相同</p><p>​            2 参数列表必须相同</p><p>​            3 修饰符 ：范围可以扩大但是不能缩小    public &gt; protected &gt; default &gt; private</p><p>​            4 抛出的异常：范围，可以被缩小，但是不能扩大</p><p>​            子类的方法与父类的方法要一致，方法体不同！</p><p>为什么要重写：</p><p>​        1 父类的功能子类不一定需要，或者不满足。</p><p>​        alt + insert  ： override</p><p>父类引用可以指向子类，但是不能调用子类独有方法。子类重写了父类的方法调用重写的方法</p><p>对象能够执行那些方法和左边类型有关和右边关系不大。</p><p>多态：</p><ol><li>多态是方法的多态，属性没有多态</li><li>父类和子类，有联系， 类型转换异常！ClassCastException！</li><li>存在条件：继承关系，方法需要重写。父类的引用指向子类的对象，father  f1 = new Son();</li><li>stactic 方法属于类，不属于实例，无法背重写</li><li>final 常量，在常量池中，无法被重写</li><li>private 方法无法被重写</li></ol><p>同一方法可以根据发送对象的不同而采取多种不同的行为方式</p><p>一个对象的实际类型是确定的，但是可以指向对象的引用的类型有很多（父类，有关系的类）</p><p>多态存在条件：</p><ol><li>有继承关系</li><li>子类重写父类方法</li><li>父类引用指向子类对象</li></ol><p>再次强调：多态是方法的多态，属性没有多态。</p><p>instanceof    （类型转换）</p><p>instanceof可以判断两个类是否存在父子关系</p><p>抽象：编程思想！持续学习！！！</p><ol><li>父类引用指向子类</li><li>把子类转换成父类，向上转型</li><li>把父类转换为子类，向下转型，强制转换</li><li>方便方法的调用，减少重复代码！</li></ol><p>抽象：封装，继承，多态！    抽象类，接口</p><p>匿名代码块，静态代码块，构造方法执行顺序</p><p>先执行静态代码块，然后执行匿名代码块，最后是构造方法</p><p>注意：静态代码块只执行一次。例子： </p><p><img src="/2021/10/29/javase/22.png" alt="1"></p><p><img src="/2021/10/29/javase/23.png" alt="1"></p><p><img src="/2021/10/29/javase/24.png" alt="1"></p><p><img src="/2021/10/29/javase/25.png" alt="1"></p><p>第二次静态代码块不执行了。</p><p>stactic，只会在第一次构造方法去执行，其他的每次都会执行，匿名代码块可以用来赋初始值</p><p>静态方法可以使用静态导入包这个样子：</p><p><img src="/2021/10/29/javase/26.png" alt="1"></p><p>final  修饰的类不能被继承，final之后断子绝孙</p><p>abstract   修饰抽象类，抽象方法，抽象类写约束，让别人帮我们实现，只有方法名字，没有实现。</p><p><img src="/2021/10/29/javase/27.png" alt="1"></p><p>特点：</p><ol><li>不能new，只能靠子类实现。</li><li>抽象类中可以写普通方法。</li><li>抽象方法必须在抽象类中。</li><li>抽象的抽象：约束。</li><li>存在意义：提升开发效率，抽象出来提供公共模板。</li></ol><p>抽象类可以有静态方法</p><p>抽象类可以有构造方法，抽象类的构造函数用来初始化抽象类的一些字段，而这一切都在抽象类的派生类实例化之前发生。不仅如此，抽线类的构造函数还有一种巧妙应用：就是在其内部实现子类必须执行的代码。</p><p>普通类：只有具体实现</p><p>抽象类：具体实现和规范（抽象方法）都有</p><p>接口：只有规范，自己无法写方法，约束与实现分离：面向接口编程</p><p>接口声明关键字   interface   </p><p>接口中所有定义都是抽象的，致谢返回值和方法名默认是public abstract</p><p>接口的作用：</p><ol><li>约束</li><li>定义一些方法，让不同的人去实现</li><li>接口中的方法都是public abstract 修饰的</li><li>接口中的变量都是常量而且都是用public static final 修饰的</li><li>接口不能被实例化，接口中没有构造方法</li><li>implements 可以实现多个接口</li><li>必须要重写接口中的方法</li></ol><p><img src="/2021/10/29/javase/28.png" alt="1"></p><p>内部类：（不推荐写这个东西，那样的话代码只有你能看的懂了）</p><ol><li>成员内部类</li><li>静态内部类</li><li>局部内部类</li><li>匿名内部类</li></ol><p><img src="/2021/10/29/javase/29.png" alt="1"></p><p>在写程序的过程中，避免发生错误，错误很致命，造成损失很大。</p><p>异常的种类如下：</p><p><img src="/2021/10/29/javase/30.png" alt="1"></p><p>异常处理关键字，try ，catch，finally，throw，throws</p><p>try    catch   必须有，finally可以不要</p><p>可以有多个catch 但是要从小到大捕获。</p><p>选中代码块，用ctrl + alt + t  选择包括的代码块</p><p>方法中处理不了异常进行抛出异常   </p><p>主动抛出异常用    throw    </p><p>方法处理不了异常，在方法上用    throws</p><p><img src="/2021/10/29/javase/32.png" alt="1"></p><p>如果需要捕获没有    try/catch    那么就需要throws去外面捕获抛出</p><p>自定义异常：</p><p>自定义类继承    exception    </p><p>例子：</p><p><img src="/2021/10/29/javase/33.png" alt="1"></p><p>测试：</p><p><img src="/2021/10/29/javase/34.png" alt="1"></p><p>将a设置为11的时候，结果如下：</p><p><img src="/2021/10/29/javase/35.png" alt="1"></p><p>处理异常实际经验总结：</p><p><img src="/2021/10/29/javase/36.png" alt="1"></p><p>ascii   表示中文1个字节</p><p>Unicode 表示中文2字节</p><p>utf-8  表示中文3个字节</p><p>将一个数转换成进制：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">BigInteger</span> b<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token string">"10"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1010</span><span class="token class-name">String</span> we <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>we<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//或者</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/29/javase/tu.jpg" alt="tu"></p>]]></content>
      
      
      
        <tags>
            
            <tag> java基础 </tag>
            
            <tag> javaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人常用命令记录</title>
      <link href="/2021/10/26/ge-ren-chang-yong-ming-ling-ji-lu/"/>
      <url>/2021/10/26/ge-ren-chang-yong-ming-ling-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>linux查看mysql service是否启动</p><pre class="line-numbers language-none"><code class="language-none">service mysqld status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用命令chkconfig –list 命令来查看mysql 的启动状态如图所示：在一下服务中找到mysqld的服务没如果状态为off，说明mysql服务没有启动</p><p>使用命令chkconfig –list mysqld 命令来查看mysql 的启动状态如图所示：在一下服务中找到mysqld的服务没如果状态为off，说明mysql服务没有启动</p><p>使用命令chkconfig –list | grep on 命令来查看mysql 的启动状态如图所示：如果mysql服务已经启动那么这里就会有这个服务</p><p>使用命令chkconfig –list | grep off 命令来查看mysql 的启动状态如图所示：如果mysql服务没有启动那么这里就会有这个服务</p><p>使用命令ps aux | grep mysqld 命令来查看mysql 的启动状态</p><p>使用命令 pidof mysqld 命令来查看mysql 的启动状态，如果显示PID说明程序启动，不显示PID即为程序没有启动</p><p>待续。。。</p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAN</title>
      <link href="/2021/10/24/gan/"/>
      <url>/2021/10/24/gan/</url>
      
        <content type="html"><![CDATA[<p>今天实现了一个GAN生成动漫头像的算法，训练了半个小时勉强能看出轮廓，如果训练半天的话效果会好一些。</p><p>实现环境：tensorflow2，      python3.6,        PIL(pillow)8.4.0</p><p>主要文件如下：</p><p><img src="/2021/10/24/gan/1.png" alt="1"></p><p>anime是训练图片大约5W张</p><p>image是生成图片</p><p>主干网络</p><p>gan.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">'TF_CPP_MIN_LOG_LEVEL'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'2'</span><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">from</span> tensorflow <span class="token keyword">import</span> keras<span class="token keyword">from</span> tensorflow<span class="token punctuation">.</span>keras <span class="token keyword">import</span> layers<span class="token keyword">class</span> <span class="token class-name">Generator</span><span class="token punctuation">(</span>keras<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>Generator<span class="token punctuation">,</span>self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>fc <span class="token operator">=</span> layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">512</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conv1 <span class="token operator">=</span> layers<span class="token punctuation">.</span>Conv2DTranspose<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'valid'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bn1 <span class="token operator">=</span>  layers<span class="token punctuation">.</span>BatchNormalization<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conv2 <span class="token operator">=</span> layers<span class="token punctuation">.</span>Conv2DTranspose<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'valid'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bn2 <span class="token operator">=</span> layers<span class="token punctuation">.</span>BatchNormalization<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conv3 <span class="token operator">=</span> layers<span class="token punctuation">.</span>Conv2DTranspose<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'valid'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bn3 <span class="token operator">=</span> layers<span class="token punctuation">.</span>BatchNormalization<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">call</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>inputs<span class="token punctuation">,</span>training <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>fc<span class="token punctuation">(</span>inputs<span class="token punctuation">)</span>        x <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">512</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        x <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>leaky_relu<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>leaky_relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>bn1<span class="token punctuation">(</span>self<span class="token punctuation">.</span>conv1<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>training <span class="token operator">=</span> training<span class="token punctuation">)</span><span class="token punctuation">)</span>        x <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>leaky_relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>bn2<span class="token punctuation">(</span>self<span class="token punctuation">.</span>conv2<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> training<span class="token operator">=</span>training<span class="token punctuation">)</span><span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>conv3<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> tf<span class="token punctuation">.</span>tanh<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> x        <span class="token keyword">pass</span><span class="token keyword">class</span> <span class="token class-name">Discriminator</span><span class="token punctuation">(</span>keras<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>Discriminator<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conv1 <span class="token operator">=</span> layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'valid'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conv2 <span class="token operator">=</span> layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'valid'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bn2 <span class="token operator">=</span> layers<span class="token punctuation">.</span>BatchNormalization<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conv3 <span class="token operator">=</span> layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'valid'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bn3 <span class="token operator">=</span> layers<span class="token punctuation">.</span>BatchNormalization<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>flattten <span class="token operator">=</span> layers<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        self<span class="token punctuation">.</span>fc <span class="token operator">=</span> layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">call</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>inputs<span class="token punctuation">,</span>training <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>leaky_relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>conv1<span class="token punctuation">(</span>inputs<span class="token punctuation">)</span><span class="token punctuation">)</span>        x <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>leaky_relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>bn2<span class="token punctuation">(</span>self<span class="token punctuation">.</span>conv2<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>training <span class="token operator">=</span> training<span class="token punctuation">)</span><span class="token punctuation">)</span>        x <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>leaky_relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>bn3<span class="token punctuation">(</span>self<span class="token punctuation">.</span>conv3<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> training<span class="token operator">=</span>training<span class="token punctuation">)</span><span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>flattten<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        logits <span class="token operator">=</span> self<span class="token punctuation">.</span>fc<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> logits<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    d <span class="token operator">=</span> Discriminator<span class="token punctuation">(</span><span class="token punctuation">)</span>    g <span class="token operator">=</span> Generator<span class="token punctuation">(</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    z <span class="token operator">=</span> tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    prob <span class="token operator">=</span> d<span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>prob<span class="token punctuation">)</span>    x_hat <span class="token operator">=</span> g<span class="token punctuation">(</span>z<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>x_hat<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>gan_train.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">'TF_CPP_MIN_LOG_LEVEL'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'2'</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">from</span> tensorflow <span class="token keyword">import</span> keras<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">import</span> glob<span class="token keyword">from</span> gan <span class="token keyword">import</span> Generator<span class="token punctuation">,</span>Discriminator<span class="token keyword">from</span> dataset <span class="token keyword">import</span> make_anime_dataset<span class="token keyword">def</span> <span class="token function">save_result</span><span class="token punctuation">(</span>val_out<span class="token punctuation">,</span> val_block_size<span class="token punctuation">,</span> image_path<span class="token punctuation">,</span> color_mode<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">preprocess</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">:</span>        img <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>img <span class="token operator">+</span> <span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">127.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>        <span class="token comment"># img = img.astype(np.uint8)</span>        <span class="token keyword">return</span> img    preprocesed <span class="token operator">=</span> preprocess<span class="token punctuation">(</span>val_out<span class="token punctuation">)</span>    final_image <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    single_row <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> b <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>val_out<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># concat image into a row</span>        <span class="token keyword">if</span> single_row<span class="token punctuation">.</span>size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            single_row <span class="token operator">=</span> preprocesed<span class="token punctuation">[</span>b<span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            single_row <span class="token operator">=</span> np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>single_row<span class="token punctuation">,</span> preprocesed<span class="token punctuation">[</span>b<span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment"># concat image row to final_image</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> val_block_size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> final_image<span class="token punctuation">.</span>size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                final_image <span class="token operator">=</span> single_row            <span class="token keyword">else</span><span class="token punctuation">:</span>                final_image <span class="token operator">=</span> np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>final_image<span class="token punctuation">,</span> single_row<span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>            <span class="token comment"># reset single row</span>            single_row <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> final_image<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        final_image <span class="token operator">=</span> np<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span>final_image<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>    Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>final_image<span class="token punctuation">)</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>image_path<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">celoss_ones</span><span class="token punctuation">(</span>logits<span class="token punctuation">)</span><span class="token punctuation">:</span>    loss <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>sigmoid_cross_entropy_with_logits<span class="token punctuation">(</span>logits<span class="token operator">=</span>logits<span class="token punctuation">,</span> labels<span class="token operator">=</span>tf<span class="token punctuation">.</span>ones_like<span class="token punctuation">(</span>logits<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>loss<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">celoss_zeros</span><span class="token punctuation">(</span>logits<span class="token punctuation">)</span><span class="token punctuation">:</span>    loss <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>sigmoid_cross_entropy_with_logits<span class="token punctuation">(</span>logits<span class="token operator">=</span>logits<span class="token punctuation">,</span> labels<span class="token operator">=</span>tf<span class="token punctuation">.</span>zeros_like<span class="token punctuation">(</span>logits<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>loss<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">d_loss_fn</span><span class="token punctuation">(</span>generator<span class="token punctuation">,</span> discriminator<span class="token punctuation">,</span> batch_z<span class="token punctuation">,</span> batch_x<span class="token punctuation">,</span> is_training<span class="token punctuation">)</span><span class="token punctuation">:</span>    fake_image <span class="token operator">=</span> generator<span class="token punctuation">(</span>batch_z <span class="token punctuation">,</span>is_training<span class="token punctuation">)</span>    d_fake_logits <span class="token operator">=</span> discriminator<span class="token punctuation">(</span>fake_image<span class="token punctuation">,</span>is_training<span class="token punctuation">)</span>    d_real_logits <span class="token operator">=</span> discriminator<span class="token punctuation">(</span>batch_x<span class="token punctuation">,</span>is_training<span class="token punctuation">)</span>    d_loss_real <span class="token operator">=</span> celoss_ones<span class="token punctuation">(</span>d_real_logits<span class="token punctuation">)</span>    <span class="token comment">#真图片的损失</span>    d_loss_fake <span class="token operator">=</span> celoss_zeros<span class="token punctuation">(</span>d_fake_logits<span class="token punctuation">)</span>   <span class="token comment">#假的图片的损失</span>    loss <span class="token operator">=</span> d_loss_fake <span class="token operator">+</span> d_loss_real    <span class="token keyword">return</span> loss<span class="token keyword">def</span> <span class="token function">g_loss_fn</span><span class="token punctuation">(</span>generator<span class="token punctuation">,</span> discriminator<span class="token punctuation">,</span> batch_z<span class="token punctuation">,</span> is_training<span class="token punctuation">)</span><span class="token punctuation">:</span>    fake_image <span class="token operator">=</span> generator<span class="token punctuation">(</span>batch_z<span class="token punctuation">,</span> is_training<span class="token punctuation">)</span>    d_fake_logits <span class="token operator">=</span> discriminator<span class="token punctuation">(</span>fake_image<span class="token punctuation">,</span> is_training<span class="token punctuation">)</span>    loss <span class="token operator">=</span> celoss_ones<span class="token punctuation">(</span>d_fake_logits<span class="token punctuation">)</span>    <span class="token keyword">return</span> loss<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>set_seed<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span>    np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span>    <span class="token keyword">assert</span> tf<span class="token punctuation">.</span>__version__<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'2.'</span><span class="token punctuation">)</span>    z_dim <span class="token operator">=</span> <span class="token number">100</span>    epochs <span class="token operator">=</span> <span class="token number">3000000</span>    batch_size <span class="token operator">=</span> <span class="token number">64</span>    learning_rate <span class="token operator">=</span> <span class="token number">0.002</span>    is_training <span class="token operator">=</span> <span class="token boolean">True</span>    img_path <span class="token operator">=</span> glob<span class="token punctuation">.</span>glob<span class="token punctuation">(</span><span class="token string">r'D:\tensorflow学习数据\shuzishibie\GAN\anime\*.jpg'</span><span class="token punctuation">)</span>    dataset <span class="token punctuation">,</span>img_shape <span class="token punctuation">,</span>_ <span class="token operator">=</span> make_anime_dataset<span class="token punctuation">(</span>img_path<span class="token punctuation">,</span> batch_size<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>dataset<span class="token punctuation">,</span>img_shape<span class="token punctuation">)</span>    sample <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span><span class="token builtin">iter</span><span class="token punctuation">(</span>dataset<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>sample<span class="token punctuation">)</span>    dataset <span class="token operator">=</span> dataset<span class="token punctuation">.</span>repeat<span class="token punctuation">(</span><span class="token punctuation">)</span>    db_iter <span class="token operator">=</span> <span class="token builtin">iter</span><span class="token punctuation">(</span>dataset<span class="token punctuation">)</span>    generator <span class="token operator">=</span> Generator<span class="token punctuation">(</span><span class="token punctuation">)</span>    generator<span class="token punctuation">.</span>build<span class="token punctuation">(</span>input_shape <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span>z_dim<span class="token punctuation">)</span><span class="token punctuation">)</span>    discriminator <span class="token operator">=</span> Discriminator<span class="token punctuation">(</span><span class="token punctuation">)</span>    discriminator<span class="token punctuation">.</span>build<span class="token punctuation">(</span>input_shape <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    g_optimizer <span class="token operator">=</span> tf<span class="token punctuation">.</span>optimizers<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>learning_rate<span class="token operator">=</span>learning_rate<span class="token punctuation">,</span>beta_1<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span>    d_optimizer <span class="token operator">=</span> tf<span class="token punctuation">.</span>optimizers<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>learning_rate<span class="token operator">=</span>learning_rate<span class="token punctuation">,</span>beta_1<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">:</span>        batch_z <span class="token operator">=</span> tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token punctuation">[</span>batch_size<span class="token punctuation">,</span> z_dim<span class="token punctuation">]</span><span class="token punctuation">,</span> minval<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span> maxval<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token comment">#uniform均匀分布</span>        batch_x <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span>db_iter<span class="token punctuation">)</span>        <span class="token comment">#train D</span>        <span class="token keyword">with</span> tf<span class="token punctuation">.</span>GradientTape<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tape<span class="token punctuation">:</span>            d_loss <span class="token operator">=</span> d_loss_fn<span class="token punctuation">(</span>generator<span class="token punctuation">,</span> discriminator<span class="token punctuation">,</span> batch_z<span class="token punctuation">,</span> batch_x<span class="token punctuation">,</span> is_training<span class="token punctuation">)</span>        grads <span class="token operator">=</span> tape<span class="token punctuation">.</span>gradient<span class="token punctuation">(</span>d_loss<span class="token punctuation">,</span>discriminator<span class="token punctuation">.</span>trainable_variables<span class="token punctuation">)</span>        d_optimizer<span class="token punctuation">.</span>apply_gradients<span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>grads<span class="token punctuation">,</span> discriminator<span class="token punctuation">.</span>trainable_variables<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">with</span> tf<span class="token punctuation">.</span>GradientTape<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Tape<span class="token punctuation">:</span>            g_loss <span class="token operator">=</span> g_loss_fn<span class="token punctuation">(</span>generator<span class="token punctuation">,</span> discriminator<span class="token punctuation">,</span> batch_z<span class="token punctuation">,</span> is_training<span class="token punctuation">)</span>        grads <span class="token operator">=</span> Tape<span class="token punctuation">.</span>gradient<span class="token punctuation">(</span>g_loss<span class="token punctuation">,</span> generator<span class="token punctuation">.</span>trainable_variables<span class="token punctuation">)</span>        g_optimizer<span class="token punctuation">.</span>apply_gradients<span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>grads<span class="token punctuation">,</span> generator<span class="token punctuation">.</span>trainable_variables<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>epoch <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>epoch<span class="token punctuation">,</span><span class="token string">'d-loss'</span><span class="token punctuation">,</span><span class="token builtin">float</span><span class="token punctuation">(</span>d_loss<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'g_loss'</span><span class="token punctuation">,</span><span class="token builtin">float</span><span class="token punctuation">(</span>g_loss<span class="token punctuation">)</span><span class="token punctuation">)</span>            z <span class="token operator">=</span> tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> z_dim<span class="token punctuation">]</span><span class="token punctuation">)</span>            fake_image <span class="token operator">=</span> generator<span class="token punctuation">(</span>z<span class="token punctuation">,</span> training<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>            img_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token string">'gan-%d.png'</span><span class="token operator">%</span>epoch<span class="token punctuation">)</span>            save_result<span class="token punctuation">(</span>fake_image<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> img_path<span class="token punctuation">,</span>color_mode<span class="token operator">=</span><span class="token string">'P'</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>dataset.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> multiprocessing<span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token triple-quoted-string string">'''读取数据（图片）'''</span><span class="token keyword">def</span> <span class="token function">make_anime_dataset</span><span class="token punctuation">(</span>img_paths<span class="token punctuation">,</span> batch_size<span class="token punctuation">,</span> resize<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> drop_remainder<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> repeat<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token decorator annotation punctuation">@tf<span class="token punctuation">.</span>function</span>    <span class="token keyword">def</span> <span class="token function">_map_fn</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">:</span>        img <span class="token operator">=</span> tf<span class="token punctuation">.</span>image<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">[</span>resize<span class="token punctuation">,</span> resize<span class="token punctuation">]</span><span class="token punctuation">)</span>        img <span class="token operator">=</span> tf<span class="token punctuation">.</span>clip_by_value<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>        img <span class="token operator">=</span> img <span class="token operator">/</span> <span class="token number">127.5</span> <span class="token operator">-</span> <span class="token number">1</span>        <span class="token keyword">return</span> img    dataset <span class="token operator">=</span> disk_image_batch_dataset<span class="token punctuation">(</span>img_paths<span class="token punctuation">,</span>                                          batch_size<span class="token punctuation">,</span>                                          drop_remainder<span class="token operator">=</span>drop_remainder<span class="token punctuation">,</span>                                          map_fn<span class="token operator">=</span>_map_fn<span class="token punctuation">,</span>                                          shuffle<span class="token operator">=</span>shuffle<span class="token punctuation">,</span>                                          repeat<span class="token operator">=</span>repeat<span class="token punctuation">)</span>    img_shape <span class="token operator">=</span> <span class="token punctuation">(</span>resize<span class="token punctuation">,</span> resize<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>    len_dataset <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>img_paths<span class="token punctuation">)</span> <span class="token operator">//</span> batch_size    <span class="token keyword">return</span> dataset<span class="token punctuation">,</span> img_shape<span class="token punctuation">,</span> len_dataset<span class="token keyword">def</span> <span class="token function">batch_dataset</span><span class="token punctuation">(</span>dataset<span class="token punctuation">,</span>                  batch_size<span class="token punctuation">,</span>                  drop_remainder<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                  n_prefetch_batch<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>                  filter_fn<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                  map_fn<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                  n_map_threads<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                  filter_after_map<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>                  shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                  shuffle_buffer_size<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                  repeat<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 设置默认值</span>    <span class="token keyword">if</span> n_map_threads <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        n_map_threads <span class="token operator">=</span> multiprocessing<span class="token punctuation">.</span>cpu_count<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> shuffle <span class="token keyword">and</span> shuffle_buffer_size <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        shuffle_buffer_size <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>batch_size <span class="token operator">*</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">2048</span><span class="token punctuation">)</span>  <span class="token comment"># 将最小缓冲区大小设置为 2048</span>    <span class="token comment"># [*]在 `map`/`filter` 之前进行 `shuffle`</span>    <span class="token keyword">if</span> shuffle<span class="token punctuation">:</span>        dataset <span class="token operator">=</span> dataset<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>shuffle_buffer_size<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> filter_after_map<span class="token punctuation">:</span>        <span class="token keyword">if</span> filter_fn<span class="token punctuation">:</span>            dataset <span class="token operator">=</span> dataset<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>filter_fn<span class="token punctuation">)</span>        <span class="token keyword">if</span> map_fn<span class="token punctuation">:</span>            dataset <span class="token operator">=</span> dataset<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>map_fn<span class="token punctuation">,</span> num_parallel_calls<span class="token operator">=</span>n_map_threads<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token comment"># [*] this is slower</span>        <span class="token keyword">if</span> map_fn<span class="token punctuation">:</span>            dataset <span class="token operator">=</span> dataset<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>map_fn<span class="token punctuation">,</span> num_parallel_calls<span class="token operator">=</span>n_map_threads<span class="token punctuation">)</span>        <span class="token keyword">if</span> filter_fn<span class="token punctuation">:</span>            dataset <span class="token operator">=</span> dataset<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>filter_fn<span class="token punctuation">)</span>    dataset <span class="token operator">=</span> dataset<span class="token punctuation">.</span>batch<span class="token punctuation">(</span>batch_size<span class="token punctuation">,</span> drop_remainder<span class="token operator">=</span>drop_remainder<span class="token punctuation">)</span>    dataset <span class="token operator">=</span> dataset<span class="token punctuation">.</span>repeat<span class="token punctuation">(</span>repeat<span class="token punctuation">)</span><span class="token punctuation">.</span>prefetch<span class="token punctuation">(</span>n_prefetch_batch<span class="token punctuation">)</span>    <span class="token keyword">return</span> dataset<span class="token keyword">def</span> <span class="token function">memory_data_batch_dataset</span><span class="token punctuation">(</span>memory_data<span class="token punctuation">,</span>                              batch_size<span class="token punctuation">,</span>                              drop_remainder<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                              n_prefetch_batch<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>                              filter_fn<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                              map_fn<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                              n_map_threads<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                              filter_after_map<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>                              shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                              shuffle_buffer_size<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                              repeat<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Batch dataset of memory data.    Parameters    ----------    memory_data : nested structure of tensors/ndarrays/lists    """</span>    dataset <span class="token operator">=</span> tf<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">.</span>from_tensor_slices<span class="token punctuation">(</span>memory_data<span class="token punctuation">)</span>    dataset <span class="token operator">=</span> batch_dataset<span class="token punctuation">(</span>dataset<span class="token punctuation">,</span>                            batch_size<span class="token punctuation">,</span>                            drop_remainder<span class="token operator">=</span>drop_remainder<span class="token punctuation">,</span>                            n_prefetch_batch<span class="token operator">=</span>n_prefetch_batch<span class="token punctuation">,</span>                            filter_fn<span class="token operator">=</span>filter_fn<span class="token punctuation">,</span>                            map_fn<span class="token operator">=</span>map_fn<span class="token punctuation">,</span>                            n_map_threads<span class="token operator">=</span>n_map_threads<span class="token punctuation">,</span>                            filter_after_map<span class="token operator">=</span>filter_after_map<span class="token punctuation">,</span>                            shuffle<span class="token operator">=</span>shuffle<span class="token punctuation">,</span>                            shuffle_buffer_size<span class="token operator">=</span>shuffle_buffer_size<span class="token punctuation">,</span>                            repeat<span class="token operator">=</span>repeat<span class="token punctuation">)</span>    <span class="token keyword">return</span> dataset<span class="token keyword">def</span> <span class="token function">disk_image_batch_dataset</span><span class="token punctuation">(</span>img_paths<span class="token punctuation">,</span>                             batch_size<span class="token punctuation">,</span>                             labels<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                             drop_remainder<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                             n_prefetch_batch<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>                             filter_fn<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                             map_fn<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                             n_map_threads<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                             filter_after_map<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>                             shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                             shuffle_buffer_size<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>                             repeat<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Batch dataset of disk image for PNG and JPEG.    Parameters    ----------        img_paths : 1d-tensor/ndarray/list of str        labels : nested structure of tensors/ndarrays/lists    """</span>    <span class="token keyword">if</span> labels <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        memory_data <span class="token operator">=</span> img_paths    <span class="token keyword">else</span><span class="token punctuation">:</span>        memory_data <span class="token operator">=</span> <span class="token punctuation">(</span>img_paths<span class="token punctuation">,</span> labels<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parse_fn</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token operator">*</span>label<span class="token punctuation">)</span><span class="token punctuation">:</span>        img <span class="token operator">=</span> tf<span class="token punctuation">.</span>io<span class="token punctuation">.</span>read_file<span class="token punctuation">(</span>path<span class="token punctuation">)</span>        img <span class="token operator">=</span> tf<span class="token punctuation">.</span>image<span class="token punctuation">.</span>decode_png<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># fix channels to 3</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token operator">+</span> label    <span class="token keyword">if</span> map_fn<span class="token punctuation">:</span>  <span class="token comment"># fuse `map_fn` and `parse_fn`</span>        <span class="token keyword">def</span> <span class="token function">map_fn_</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> map_fn<span class="token punctuation">(</span><span class="token operator">*</span>parse_fn<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        map_fn_ <span class="token operator">=</span> parse_fn    dataset <span class="token operator">=</span> memory_data_batch_dataset<span class="token punctuation">(</span>memory_data<span class="token punctuation">,</span>                                        batch_size<span class="token punctuation">,</span>                                        drop_remainder<span class="token operator">=</span>drop_remainder<span class="token punctuation">,</span>                                        n_prefetch_batch<span class="token operator">=</span>n_prefetch_batch<span class="token punctuation">,</span>                                        filter_fn<span class="token operator">=</span>filter_fn<span class="token punctuation">,</span>                                        map_fn<span class="token operator">=</span>map_fn_<span class="token punctuation">,</span>                                        n_map_threads<span class="token operator">=</span>n_map_threads<span class="token punctuation">,</span>                                        filter_after_map<span class="token operator">=</span>filter_after_map<span class="token punctuation">,</span>                                        shuffle<span class="token operator">=</span>shuffle<span class="token punctuation">,</span>                                        shuffle_buffer_size<span class="token operator">=</span>shuffle_buffer_size<span class="token punctuation">,</span>                                        repeat<span class="token operator">=</span>repeat<span class="token punctuation">)</span>    <span class="token keyword">return</span> dataset<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完整项目链接：</p><p>链接：<a href="https://pan.baidu.com/s/1QXzTmuuQdGTC9ZQWnyqx_g">https://pan.baidu.com/s/1QXzTmuuQdGTC9ZQWnyqx_g</a><br>提取码：hd53 </p><p>21-11-4还有20天到期，到期可以联系qq获取</p><p>包含训练集。</p><p>完结撒花！！！</p><p><img src="/2021/10/24/gan/tu.jpg" alt="tu"></p>]]></content>
      
      
      
        <tags>
            
            <tag> tensorflow2 </tag>
            
            <tag> GAN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验室linux管理</title>
      <link href="/2021/10/24/shi-yan-shi-linux-guan-li/"/>
      <url>/2021/10/24/shi-yan-shi-linux-guan-li/</url>
      
        <content type="html"><![CDATA[<p>记录一下自己要用到管理实验室Linux的命令，省的以后忘记了还要查</p><h2 id="1更改目录所属用户"><a href="#1更改目录所属用户" class="headerlink" title="1更改目录所属用户"></a>1更改目录所属用户</h2><p> chgrp 文件Tom    将文件所属于的组改为Tom</p><p>chown 文件 Tom    将文件所属的用户改为Tom</p><p>useradd haha  #创建用户 haha是用户名</p><p>passwd haha  #为该用户设置密码</p><p>cat /etc/passwd   #查看用户信息</p><p>find / -name “<em>haha</em>“   #在/目录下查找文件名haha的</p><p> userdel -r haha     #删除用户</p><h2 id="2、删除用户"><a href="#2、删除用户" class="headerlink" title="2、删除用户"></a>2、删除用户</h2><p>若使用userdel haha 命令删除该用户时，并不能删除该用户的所有信息，只是删除了/etc/passwd、/etc/shadow、/etc/group/、/etc/gshadow四个文件里的该账户和组的信息。默认情况下创建一个用户账号，会创建一个家目录和一个用户邮箱（在/var/spool/mail目录以用户名命名）</p><p> [root@localhost /]# userdel haha<br> [root@localhost /]# cat /etc/passwd | grep haha<br> [root@localhost /]# cat /etc/shadow | grep haha<br> [root@localhost /]# cat /etc/group | grep haha<br> [root@localhost /]# cat /etc/gshadow | grep haha<br> [root@localhost /]# find / -name “<em>haha</em>“</p><p><img src="/2021/10/24/shi-yan-shi-linux-guan-li/1.png" alt="1"></p><h2 id="3、为新用户赋文件权限："><a href="#3、为新用户赋文件权限：" class="headerlink" title="3、为新用户赋文件权限："></a>3、为新用户赋文件权限：</h2><p>方式1：chmod -R 755 目录 —说明:该方式是修改文件本身的权限，让所有用户都有新权限<br>方式2：chown -R tmpuser 目录 —说明：该方式是直接修改文件的所有者 </p><p>分组操作：<br>一、添加分组：<br>groupadd tmpgroup </p><p>二、删除分组：<br>groupdel tmpgroup </p><p>三、将用户加入分组[不离开原来分组]<br>usermod -a -G tmpgroup tmpuser </p><p>四、为新组赋文件权限<br>chown root:tmpgroup 目录</p><p><img src="/2021/10/24/shi-yan-shi-linux-guan-li/2.png" alt="1"></p><p>其中，文档类型有如下表示方法：</p><p>​        <img src="/2021/10/24/shi-yan-shi-linux-guan-li/3.png" alt="1"></p><p>​                d - 目录，例如上表档名为『.gconf』的那一行；</p><p>文档，例如上表档名为『install.log』那一行；<br>　　　　l  - 连结档(link file)；<br>　　　　b - 装置文件里面的可供储存的接口设备(可随机存取装置)；<br>　　　　c - 装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)。</p><p>　　权限由rwx三个字幕表示，分别表示为可读、可写、可执行，如果没有该权限，则用“ - ”表示，对于目录来说，必须有x权限，否则无法读取目录内容</p><p>　　如果文件名前面有“ . ”,则表示这个文档或目录是隐藏的</p><h2 id="用户和用户组"><a href="#用户和用户组" class="headerlink" title="用户和用户组"></a>用户和用户组</h2><p>用户和用户组  /etc/group   存储当前系统中的用户组信息</p><p><img src="/2021/10/24/shi-yan-shi-linux-guan-li/4.png" alt="1"></p><p>注意：　　</p><p>　　　　1.当该组内只有一个用户，并且用户名和组名相同时，在组列表中，包含用户一列可以为空</p><p>　　　　2.系统中root分组的组编号一定为0</p><p>　　　　3.组号1~499为系统预留的组编号，一般是预留给系统安装的软件或者服务的编号，越早安装的软件或者服务的组编号约早。用户手动创建的用户组编号从500开始</p><p>　　　　4.组密码占位符，无一例外，全部用x表示</p><p>　　/etc/gshadow　　存储当前系统中用户组的密码信息</p><p><img src="/2021/10/24/shi-yan-shi-linux-guan-li/5.png" alt="1"></p><p>注意：</p><p>　　　　1.如果组密码处为“*” “！”或者为空时候，则该组没有密码</p><p>　　　　2.如果组管理者为空，则表示该组内所有成员都可以管理该组</p><p>　　/ect/passwd　　存储当前系统中所有的用户信息</p><p><img src="/2021/10/24/shi-yan-shi-linux-guan-li/6.png" alt="1"></p><p>注意：</p><p>　　　　在linux中，超级管理员root的用户编号一定为0</p><p>　　/ect/shadow　　存储当前系统中所有用户的密码信息</p><p><img src="/2021/10/24/shi-yan-shi-linux-guan-li/7.png" alt="1"></p><p>注意：</p><p>　　　　密码是一个单向加密过的字符串</p><h2 id="useradd创建用户可以使用的参数"><a href="#useradd创建用户可以使用的参数" class="headerlink" title="useradd创建用户可以使用的参数"></a>useradd创建用户可以使用的参数</h2><p>useradd可以使用的参数包含</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">-d    设置该用户的home目录    例如：useradd -d /home/helloworld hello    //新建hello用户，并且将其home目录设置为/home/helloworld-u    设置其userid    例如：useradd -u 668 hello    //新建一个hello用户，将他的id设置为668-g    设置其主组    例如：useradd -g root hello    //新建一个hello用户，并将其假如root组-m    生成home目录的文件夹    例如：useradd -m hello    //新建一个hello用户，并且在默认位置申城一个hello文件夹（/home/hello）,并且将/etc/skel下的文件复制到该目录下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改用户信息"><a href="#修改用户信息" class="headerlink" title="修改用户信息"></a>修改用户信息</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">usermod 参数 用户名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">-l    //修改新用户名    例如：usermod -l helloworld hello    将hello用户名改为helloworld，但其home目录不改变-u    //修改用户的userid    例如：usermod -u 888 hello    将hello的userid改为888-d    //修改用户的home目录-g    //修改用户的主用户组-L    //锁定用户，使其不能登录-U    //解除锁定<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h2><pre class="line-numbers language-none"><code class="language-none">userdel 参数 用户名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可使用参数</p><pre class="line-numbers language-none"><code class="language-none">-r 删除用户的同时将其home目录也删掉<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建用户组</p><pre class="line-numbers language-none"><code class="language-none">groupadd 组名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改用户组</p><pre class="line-numbers language-none"><code class="language-none">groupmod -n 新组名 旧组名    //修改组名groupmod -g 新组id    旧组id    修改组ID<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>删除用户组</p><pre class="line-numbers language-none"><code class="language-none">groupdel 组名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="改变文档（目录）的所有者（所有组）"><a href="#改变文档（目录）的所有者（所有组）" class="headerlink" title="改变文档（目录）的所有者（所有组）"></a>改变文档（目录）的所有者（所有组）</h2><p>改变文档（目录）的所有者（所有组）</p><p>改变文档所有者 - chown命令（change owner），可使用参数 -R使得其子目录也同时修改</p><p>改编文档所有组 - chgrp命令 （change group），可使用参数 -R使得其子目录也同时修改</p><p>也可以使用</p><pre class="line-numbers language-none"><code class="language-none">chown username:group 文件名 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>来同时修改文档或目录的拥有者和所在组</p><h2 id="修改文档的执行权限"><a href="#修改文档的执行权限" class="headerlink" title="修改文档的执行权限"></a>修改文档的执行权限</h2><p>chmod命令</p><pre class="line-numbers language-none"><code class="language-none">chmod 参数 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以使用如下方法直接设置文件的权限</p><pre class="line-numbers language-none"><code class="language-none">1.直接设置代表权限的数字chmod 777（对应权限的数字） 文件名2.给文件添加或减去某些权限    chmod u+w 文件名    给user用户加上w权限    chmod g-r 文件名    将group中的r权限去掉    chmod a+x 文件名    给user、group、other全部加上x权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="查看系统有哪些组"><a href="#查看系统有哪些组" class="headerlink" title="查看系统有哪些组"></a>查看系统有哪些组</h2><pre class="line-numbers language-none"><code class="language-none">getent group<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看所有用户</p><p>compgen -u</p><p>查看当前用户属于那些组</p><p>groups</p><p>查看某个用户属于哪些组</p><p>groups {USERNAME}</p><p>查看系统有哪些组</p><p>getent group</p><p>或者</p><p> compgen -g</p><p>列出某个组下所有的成员</p><p>方法一（稍复杂不推荐）：</p><p>查看sudo下所有成员</p><p>awk -F’:’ ‘/sudo/{print $4}’ /etc/group</p><p>方法二：</p><p>先安装members包</p><p>sudo apt-get install members//ubuntu系统</p><p>或者</p><p>sudo yum members</p><p>列出某个组下所有的成员</p><p>查看sudo组下的成员</p><p>members sudo</p><p>参考感谢：</p><p><a href="https://www.cnblogs.com/xs104/p/4510114.html">https://www.cnblogs.com/xs104/p/4510114.html</a></p><p><a href="https://blog.csdn.net/ignorewho/article/details/80591015">https://blog.csdn.net/ignorewho/article/details/80591015</a></p><p><a href="https://blog.csdn.net/qq_41566366/article/details/116980788">https://blog.csdn.net/qq_41566366/article/details/116980788</a></p><p><img src="/2021/10/24/shi-yan-shi-linux-guan-li/tu.jpg" alt="tu"></p>]]></content>
      
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java学习</title>
      <link href="/2021/10/23/java-xue-xi/"/>
      <url>/2021/10/23/java-xue-xi/</url>
      
        <content type="html"><![CDATA[<p>最近用java作算法题，一些难记的东西老是忘记。再此写个笔记，省的以后忘记。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> minHeap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">-&gt;</span>a<span class="token operator">-</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//括号里是重写比较器的lambda表达式,k是初始化大小</span><span class="token comment">//小顶堆可以省略</span><span class="token comment">//小顶堆</span><span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> pq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> pair1<span class="token punctuation">,</span> <span class="token class-name">Integer</span> pair2<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> pair1 <span class="token operator">-</span> pair2<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> minHeap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">-&gt;</span>b<span class="token operator">-</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//大顶堆</span><span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> pq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> pair1<span class="token punctuation">,</span> <span class="token class-name">Integer</span> pair2<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> pair2 <span class="token operator">-</span> pair1<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>持续更新。。。</p>]]></content>
      
      
      
        <tags>
            
            <tag> java学习 </tag>
            
            <tag> 记录笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>resnet系列识别cifar100</title>
      <link href="/2021/10/21/resnet-xi-lie-shi-bie-cifar100/"/>
      <url>/2021/10/21/resnet-xi-lie-shi-bie-cifar100/</url>
      
        <content type="html"><![CDATA[<p>resnet识别cifar100</p><p>resnet.py文件夹放入</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">'TF_CPP_MIN_LOG_LEVEL'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'2'</span><span class="token keyword">from</span> tensorflow <span class="token keyword">import</span> keras<span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">from</span> tensorflow<span class="token punctuation">.</span>keras <span class="token keyword">import</span> layers<span class="token punctuation">,</span>optimizers<span class="token punctuation">,</span>datasets<span class="token punctuation">,</span>Sequential<span class="token keyword">class</span> <span class="token class-name">BasicBlack</span><span class="token punctuation">(</span>layers<span class="token punctuation">.</span>Layer<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>filter_num<span class="token punctuation">,</span>stride <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>BasicBlack<span class="token punctuation">,</span>self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conv1 <span class="token operator">=</span> layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span>filter_num<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>strides<span class="token operator">=</span>stride<span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bn1 <span class="token operator">=</span> layers<span class="token punctuation">.</span>BatchNormalization<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>relu <span class="token operator">=</span> layers<span class="token punctuation">.</span>Activation<span class="token punctuation">(</span><span class="token string">'relu'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conv2 <span class="token operator">=</span> layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span>filter_num<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> strides<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bn2 <span class="token operator">=</span> layers<span class="token punctuation">.</span>BatchNormalization<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>stride <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>downsample <span class="token operator">=</span> Sequential<span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>downsample<span class="token punctuation">.</span>add<span class="token punctuation">(</span>layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span>filter_num<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>strides<span class="token operator">=</span>stride<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>downsample <span class="token operator">=</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span>x    <span class="token keyword">def</span> <span class="token function">call</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>inputs<span class="token punctuation">,</span>training<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        out <span class="token operator">=</span> self<span class="token punctuation">.</span>conv1<span class="token punctuation">(</span>inputs<span class="token punctuation">)</span>        out <span class="token operator">=</span> self<span class="token punctuation">.</span>bn1<span class="token punctuation">(</span>out<span class="token punctuation">)</span>        out <span class="token operator">=</span> self<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>out<span class="token punctuation">)</span>        out <span class="token operator">=</span> self<span class="token punctuation">.</span>conv2<span class="token punctuation">(</span>out<span class="token punctuation">)</span>        out <span class="token operator">=</span> self<span class="token punctuation">.</span>bn2<span class="token punctuation">(</span>out<span class="token punctuation">)</span>        identity <span class="token operator">=</span> self<span class="token punctuation">.</span>downsample<span class="token punctuation">(</span>inputs<span class="token punctuation">)</span>        output <span class="token operator">=</span> layers<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token punctuation">[</span>out<span class="token punctuation">,</span>identity<span class="token punctuation">]</span><span class="token punctuation">)</span>        output <span class="token operator">=</span> self<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>output<span class="token punctuation">)</span>        <span class="token keyword">return</span> output<span class="token keyword">class</span> <span class="token class-name">Restnet</span><span class="token punctuation">(</span>keras<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>layer_dims<span class="token punctuation">,</span>number_classes <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>Restnet<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>stem <span class="token operator">=</span> Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>strides<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                layers<span class="token punctuation">.</span>BatchNormalization<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>layers<span class="token punctuation">.</span>Activation<span class="token punctuation">(</span><span class="token string">'relu'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                layers<span class="token punctuation">.</span>MaxPool2D<span class="token punctuation">(</span>pool_size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>strides<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">)</span>                                <span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>layer1 <span class="token operator">=</span> self<span class="token punctuation">.</span>build_restblock<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span>layer_dims<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>layer2 <span class="token operator">=</span> self<span class="token punctuation">.</span>build_restblock<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> layer_dims<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stride<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>layer3 <span class="token operator">=</span> self<span class="token punctuation">.</span>build_restblock<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> layer_dims<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>layer4 <span class="token operator">=</span> self<span class="token punctuation">.</span>build_restblock<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span> layer_dims<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>avgpool <span class="token operator">=</span> layers<span class="token punctuation">.</span>GlobalAveragePooling2D<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>fc <span class="token operator">=</span> layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span>number_classes<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">call</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>inputs<span class="token punctuation">,</span>training<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>stem<span class="token punctuation">(</span>inputs<span class="token punctuation">,</span>training<span class="token operator">=</span>training<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>layer1<span class="token punctuation">(</span>x<span class="token punctuation">,</span>training <span class="token operator">=</span> training<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>layer2<span class="token punctuation">(</span>x<span class="token punctuation">,</span>training <span class="token operator">=</span> training<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>layer3<span class="token punctuation">(</span>x<span class="token punctuation">,</span>training <span class="token operator">=</span> training<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>layer4<span class="token punctuation">(</span>x<span class="token punctuation">,</span>training <span class="token operator">=</span> training<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>avgpool<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>fc<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> x    <span class="token keyword">def</span> <span class="token function">build_restblock</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>filter_num<span class="token punctuation">,</span>blocks<span class="token punctuation">,</span>stride <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        res_blocks <span class="token operator">=</span> Sequential<span class="token punctuation">(</span><span class="token punctuation">)</span>        res_blocks<span class="token punctuation">.</span>add<span class="token punctuation">(</span>BasicBlack<span class="token punctuation">(</span>filter_num<span class="token punctuation">,</span>stride<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>blocks<span class="token punctuation">)</span><span class="token punctuation">:</span>            res_blocks<span class="token punctuation">.</span>add<span class="token punctuation">(</span>BasicBlack<span class="token punctuation">(</span>filter_num<span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> res_blocks<span class="token comment">#resnet18网络参数</span><span class="token keyword">def</span> <span class="token function">resnet18</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> Restnet<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">#resnet34参数，其他resnet可以自己构造参数</span><span class="token keyword">def</span> <span class="token function">resnet34</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> Restnet<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>train.py放入</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">'TF_CPP_MIN_LOG_LEVEL'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'2'</span><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">from</span> tensorflow<span class="token punctuation">.</span>keras <span class="token keyword">import</span> layers<span class="token punctuation">,</span>optimizers<span class="token punctuation">,</span>datasets<span class="token punctuation">,</span>Sequential<span class="token keyword">from</span> resnet <span class="token keyword">import</span> resnet18tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>set_seed<span class="token punctuation">(</span><span class="token number">2345</span><span class="token punctuation">)</span><span class="token comment">#数据预处理函数</span><span class="token keyword">def</span> <span class="token function">preprocess</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>    x <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>x<span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255</span>    y <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>y<span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>    <span class="token keyword">return</span> x<span class="token punctuation">,</span>y<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token punctuation">(</span>x_test<span class="token punctuation">,</span>y_test<span class="token punctuation">)</span> <span class="token operator">=</span> datasets<span class="token punctuation">.</span>cifar100<span class="token punctuation">.</span>load_data<span class="token punctuation">(</span><span class="token punctuation">)</span>y <span class="token operator">=</span> tf<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span>y<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>y_test <span class="token operator">=</span> tf<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>shape<span class="token punctuation">,</span>x_test<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>train_db <span class="token operator">=</span> tf<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">.</span>from_tensor_slices<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>train_db <span class="token operator">=</span> train_db<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>preprocess<span class="token punctuation">)</span><span class="token punctuation">.</span>batch<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>test_db <span class="token operator">=</span> tf<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">.</span>from_tensor_slices<span class="token punctuation">(</span><span class="token punctuation">(</span>x_test<span class="token punctuation">,</span>y_test<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>test_db <span class="token operator">=</span> test_db<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>preprocess<span class="token punctuation">)</span><span class="token punctuation">.</span>batch<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>sample <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span><span class="token builtin">iter</span><span class="token punctuation">(</span>train_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'sample:'</span><span class="token punctuation">,</span>sample<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">,</span>sample<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">)</span>sample <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span><span class="token builtin">iter</span><span class="token punctuation">(</span>test_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'test_dbsample:'</span><span class="token punctuation">,</span>sample<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">,</span>sample<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    model <span class="token operator">=</span> resnet18<span class="token punctuation">(</span><span class="token punctuation">)</span>    model<span class="token punctuation">.</span>build<span class="token punctuation">(</span>input_shape <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    optimizer <span class="token operator">=</span> optimizers<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>lr<span class="token operator">=</span><span class="token number">1e-3</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> step<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>train_db<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment">#print(x.shape,y.shape)</span>            <span class="token keyword">with</span> tf<span class="token punctuation">.</span>GradientTape<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tape<span class="token punctuation">:</span>                logits <span class="token operator">=</span> model<span class="token punctuation">(</span>x<span class="token punctuation">)</span>                y_hot <span class="token operator">=</span> tf<span class="token punctuation">.</span>one_hot<span class="token punctuation">(</span>y<span class="token punctuation">,</span>depth<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>                <span class="token comment">#loss</span>                loss <span class="token operator">=</span> tf<span class="token punctuation">.</span>losses<span class="token punctuation">.</span>categorical_crossentropy<span class="token punctuation">(</span>y_hot<span class="token punctuation">,</span>logits<span class="token punctuation">,</span>from_logits<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>                loss <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>loss<span class="token punctuation">)</span>            grads <span class="token operator">=</span> tape<span class="token punctuation">.</span>gradient<span class="token punctuation">(</span>loss<span class="token punctuation">,</span>model<span class="token punctuation">.</span>trainable_variables<span class="token punctuation">)</span>            optimizer<span class="token punctuation">.</span>apply_gradients<span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>grads<span class="token punctuation">,</span>model<span class="token punctuation">.</span>trainable_variables<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>step <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>epoch<span class="token punctuation">,</span>step<span class="token punctuation">,</span><span class="token string">"loss: "</span><span class="token punctuation">,</span><span class="token builtin">float</span><span class="token punctuation">(</span>loss<span class="token punctuation">)</span><span class="token punctuation">)</span>        total_sum <span class="token operator">=</span> <span class="token number">0</span>        total_currect <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> x<span class="token punctuation">,</span>y <span class="token keyword">in</span> test_db<span class="token punctuation">:</span>            logits  <span class="token operator">=</span> model<span class="token punctuation">(</span>x<span class="token punctuation">)</span>            prob <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>logits<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>            pred <span class="token operator">=</span> tf<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>prob<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>            pred <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>pred <span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>            correct <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>equal<span class="token punctuation">(</span>pred<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>            correct <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_sum<span class="token punctuation">(</span>correct<span class="token punctuation">)</span>            total_sum <span class="token operator">+=</span> x<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            total_currect <span class="token operator">+=</span><span class="token builtin">int</span><span class="token punctuation">(</span>correct<span class="token punctuation">)</span>        acc <span class="token operator">=</span> total_currect <span class="token operator">/</span> total_sum        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'acc: '</span><span class="token punctuation">,</span>acc<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完结撒花！！！</p><p><img src="/2021/10/21/resnet-xi-lie-shi-bie-cifar100/1.jpg" alt="tu"></p>]]></content>
      
      
      
        <tags>
            
            <tag> tensorflow2 </tag>
            
            <tag> resnet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vgg13识别cifar100</title>
      <link href="/2021/10/21/vgg13-shi-bie-cifar100/"/>
      <url>/2021/10/21/vgg13-shi-bie-cifar100/</url>
      
        <content type="html"><![CDATA[<h2 id="用vgg13识别cifar100"><a href="#用vgg13识别cifar100" class="headerlink" title="用vgg13识别cifar100"></a>用vgg13识别cifar100</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">'TF_CPP_MIN_LOG_LEVEL'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'2'</span><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">from</span> tensorflow<span class="token punctuation">.</span>keras <span class="token keyword">import</span> layers<span class="token punctuation">,</span>optimizers<span class="token punctuation">,</span>datasets<span class="token punctuation">,</span>Sequentialtf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>set_seed<span class="token punctuation">(</span><span class="token number">2345</span><span class="token punctuation">)</span>conv_layers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token comment">#5 unit of conv + max pooling</span>    <span class="token comment"># unit  1</span>    layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span>kernel_size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span>kernel_size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>MaxPool2D<span class="token punctuation">(</span>pool_size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>strides<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span>kernel_size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span>kernel_size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>MaxPool2D<span class="token punctuation">(</span>pool_size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>strides<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span>kernel_size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span>kernel_size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>MaxPool2D<span class="token punctuation">(</span>pool_size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>strides<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span>kernel_size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span>kernel_size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>MaxPool2D<span class="token punctuation">(</span>pool_size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>strides<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span>kernel_size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>Conv2D<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span>kernel_size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>MaxPool2D<span class="token punctuation">(</span>pool_size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>strides<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>padding<span class="token operator">=</span><span class="token string">'same'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">preprocess</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>    x <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>x<span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255</span>    y <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>y<span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>    <span class="token keyword">return</span> x<span class="token punctuation">,</span>y<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token punctuation">(</span>x_test<span class="token punctuation">,</span>y_test<span class="token punctuation">)</span> <span class="token operator">=</span> datasets<span class="token punctuation">.</span>cifar100<span class="token punctuation">.</span>load_data<span class="token punctuation">(</span><span class="token punctuation">)</span>y <span class="token operator">=</span> tf<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span>y<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>y_test <span class="token operator">=</span> tf<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>shape<span class="token punctuation">,</span>x_test<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>train_db <span class="token operator">=</span> tf<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">.</span>from_tensor_slices<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>train_db <span class="token operator">=</span> train_db<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>preprocess<span class="token punctuation">)</span><span class="token punctuation">.</span>batch<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>test_db <span class="token operator">=</span> tf<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">.</span>from_tensor_slices<span class="token punctuation">(</span><span class="token punctuation">(</span>x_test<span class="token punctuation">,</span>y_test<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>test_db <span class="token operator">=</span> test_db<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>preprocess<span class="token punctuation">)</span><span class="token punctuation">.</span>batch<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>sample <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span><span class="token builtin">iter</span><span class="token punctuation">(</span>train_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'sample:'</span><span class="token punctuation">,</span>sample<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">,</span>sample<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">)</span>sample <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span><span class="token builtin">iter</span><span class="token punctuation">(</span>test_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'test_dbsample:'</span><span class="token punctuation">,</span>sample<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">,</span>sample<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    conv_net <span class="token operator">=</span> Sequential<span class="token punctuation">(</span>conv_layers<span class="token punctuation">)</span>    <span class="token triple-quoted-string string">'''    x = tf.random.normal([4,32,32,3])    out = conv_net(x)    print(out.shape)    '''</span>    fc_net <span class="token operator">=</span> Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>        layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>        layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>        layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">)</span>    conv_net<span class="token punctuation">.</span>build<span class="token punctuation">(</span>input_shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token boolean">None</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    fc_net<span class="token punctuation">.</span>build<span class="token punctuation">(</span>input_shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token boolean">None</span><span class="token punctuation">,</span><span class="token number">512</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    optimizer <span class="token operator">=</span> optimizers<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>lr<span class="token operator">=</span><span class="token number">1e-4</span><span class="token punctuation">)</span>    variables <span class="token operator">=</span> conv_net<span class="token punctuation">.</span>trainable_variables <span class="token operator">+</span> fc_net<span class="token punctuation">.</span>trainable_variables    <span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> step<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>train_db<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment">#print(x.shape,y.shape)</span>            <span class="token keyword">with</span> tf<span class="token punctuation">.</span>GradientTape<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tape<span class="token punctuation">:</span>                out <span class="token operator">=</span> conv_net<span class="token punctuation">(</span>x<span class="token punctuation">)</span>                out <span class="token operator">=</span>tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>out<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">512</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                logits <span class="token operator">=</span> fc_net<span class="token punctuation">(</span>out<span class="token punctuation">)</span>                y_hot <span class="token operator">=</span> tf<span class="token punctuation">.</span>one_hot<span class="token punctuation">(</span>y<span class="token punctuation">,</span>depth<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>                <span class="token comment">#loss</span>                loss <span class="token operator">=</span> tf<span class="token punctuation">.</span>losses<span class="token punctuation">.</span>categorical_crossentropy<span class="token punctuation">(</span>y_hot<span class="token punctuation">,</span>logits<span class="token punctuation">,</span>from_logits<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>                loss <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>loss<span class="token punctuation">)</span>            grads <span class="token operator">=</span> tape<span class="token punctuation">.</span>gradient<span class="token punctuation">(</span>loss<span class="token punctuation">,</span>variables<span class="token punctuation">)</span>            optimizer<span class="token punctuation">.</span>apply_gradients<span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>grads<span class="token punctuation">,</span>variables<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>step <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>epoch<span class="token punctuation">,</span>step<span class="token punctuation">,</span><span class="token string">"loss: "</span><span class="token punctuation">,</span><span class="token builtin">float</span><span class="token punctuation">(</span>loss<span class="token punctuation">)</span><span class="token punctuation">)</span>        total_sum <span class="token operator">=</span> <span class="token number">0</span>        total_currect <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> x<span class="token punctuation">,</span>y <span class="token keyword">in</span> test_db<span class="token punctuation">:</span>            out <span class="token operator">=</span> conv_net<span class="token punctuation">(</span>x<span class="token punctuation">)</span>            out <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>out<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">512</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            logits  <span class="token operator">=</span> fc_net<span class="token punctuation">(</span>out<span class="token punctuation">)</span>            prob <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>logits<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>            pred <span class="token operator">=</span> tf<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>prob<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>            pred <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>pred <span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>            correct <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>equal<span class="token punctuation">(</span>pred<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>            correct <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_sum<span class="token punctuation">(</span>correct<span class="token punctuation">)</span>            total_sum <span class="token operator">+=</span> x<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            total_currect <span class="token operator">+=</span><span class="token builtin">int</span><span class="token punctuation">(</span>correct<span class="token punctuation">)</span>        acc <span class="token operator">=</span> total_currect <span class="token operator">/</span> total_sum        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'acc: '</span><span class="token punctuation">,</span>acc<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完结撒花！！！</p><p><img src="/2021/10/21/vgg13-shi-bie-cifar100/tu.jpg" alt="tu"></p>]]></content>
      
      
      
        <tags>
            
            <tag> tensorflow2 </tag>
            
            <tag> vgg13 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习分类fashion_mnist数据集</title>
      <link href="/2021/10/21/shen-du-xue-xi-fen-lei-fashion-mnist-shu-ju-ji/"/>
      <url>/2021/10/21/shen-du-xue-xi-fen-lei-fashion-mnist-shu-ju-ji/</url>
      
        <content type="html"><![CDATA[<p>随便搭建了一个网络，分类fashion_mnist数据集</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span>  osos<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">'TF_CPP_MIN_LOG_LEVEL'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'2'</span><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">from</span> tensorflow <span class="token keyword">import</span> keras<span class="token keyword">from</span> tensorflow<span class="token punctuation">.</span>keras <span class="token keyword">import</span> datasets<span class="token punctuation">,</span>layers<span class="token punctuation">,</span>optimizers<span class="token punctuation">,</span>Sequential<span class="token punctuation">,</span>metrics<span class="token keyword">def</span> <span class="token function">preprocess</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>    x <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>x<span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255</span>    y <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>y<span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>    <span class="token keyword">return</span> x<span class="token punctuation">,</span>y<span class="token comment">#加载数据集</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>x_test<span class="token punctuation">,</span>y_test<span class="token punctuation">)</span> <span class="token operator">=</span> datasets<span class="token punctuation">.</span>fashion_mnist<span class="token punctuation">.</span>load_data<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>shape<span class="token punctuation">,</span>y<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x_test<span class="token punctuation">.</span>shape<span class="token punctuation">,</span>y_test<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>batchsz <span class="token operator">=</span> <span class="token number">128</span>db <span class="token operator">=</span> tf<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">.</span>from_tensor_slices<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span>db <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>preprocess<span class="token punctuation">)</span><span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">.</span>batch<span class="token punctuation">(</span>batchsz<span class="token punctuation">)</span>db_test <span class="token operator">=</span> tf<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Dataset<span class="token punctuation">.</span>from_tensor_slices<span class="token punctuation">(</span><span class="token punctuation">(</span>x_test<span class="token punctuation">,</span>y_test<span class="token punctuation">)</span><span class="token punctuation">)</span>db_test <span class="token operator">=</span> db_test<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>preprocess<span class="token punctuation">)</span><span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">.</span>batch<span class="token punctuation">(</span>batchsz<span class="token punctuation">)</span>db_iter <span class="token operator">=</span> <span class="token builtin">iter</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span>sample <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span>db_iter<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sample<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">,</span>sample<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token comment">#构建网路</span>model <span class="token operator">=</span> Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>    layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">,</span>    layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>build<span class="token punctuation">(</span>input_shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token boolean">None</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token operator">*</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>summary<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#优化器</span>optimizer <span class="token operator">=</span> optimizers<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>lr<span class="token operator">=</span><span class="token number">1e-3</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> step <span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span><span class="token punctuation">:</span>            x <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token operator">*</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">with</span> tf<span class="token punctuation">.</span>GradientTape<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tape<span class="token punctuation">:</span>                logits <span class="token operator">=</span> model<span class="token punctuation">(</span>x<span class="token punctuation">)</span>                y_onehot <span class="token operator">=</span> tf<span class="token punctuation">.</span>one_hot<span class="token punctuation">(</span>y<span class="token punctuation">,</span>depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>                loss_mse <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>losses<span class="token punctuation">.</span>MSE<span class="token punctuation">(</span>y_onehot<span class="token punctuation">,</span>logits<span class="token punctuation">)</span><span class="token punctuation">)</span>                loss_ce <span class="token operator">=</span> tf<span class="token punctuation">.</span>losses<span class="token punctuation">.</span>categorical_crossentropy<span class="token punctuation">(</span>y_onehot<span class="token punctuation">,</span>logits<span class="token punctuation">,</span>from_logits<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>                loss_ce <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>loss_ce<span class="token punctuation">)</span>            grads <span class="token operator">=</span> tape<span class="token punctuation">.</span>gradient<span class="token punctuation">(</span>loss_ce<span class="token punctuation">,</span>model<span class="token punctuation">.</span>trainable_variables<span class="token punctuation">)</span>            optimizer<span class="token punctuation">.</span>apply_gradients<span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>grads<span class="token punctuation">,</span>model<span class="token punctuation">.</span>trainable_variables<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>step<span class="token operator">%</span><span class="token number">100</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>epoch<span class="token punctuation">,</span>step<span class="token punctuation">,</span><span class="token string">'loss'</span><span class="token punctuation">,</span><span class="token builtin">float</span><span class="token punctuation">(</span>loss_ce<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">float</span><span class="token punctuation">(</span>loss_mse<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># test</span>        total_correct <span class="token operator">=</span> <span class="token number">0</span>        total_num <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> x<span class="token punctuation">,</span>y <span class="token keyword">in</span> db_test<span class="token punctuation">:</span>            x <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">28</span> <span class="token operator">*</span> <span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            logits <span class="token operator">=</span> model<span class="token punctuation">(</span>x<span class="token punctuation">)</span>            prob <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>logits<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>            pred <span class="token operator">=</span> tf<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>prob<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>            pred <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>pred<span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>            correct <span class="token operator">=</span> tf<span class="token punctuation">.</span>equal<span class="token punctuation">(</span>pred<span class="token punctuation">,</span>y<span class="token punctuation">)</span>            correct <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_sum<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>correct<span class="token punctuation">,</span>dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span><span class="token punctuation">)</span>            total_correct <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>correct<span class="token punctuation">)</span>            total_num <span class="token operator">+=</span> x<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        acc <span class="token operator">=</span> total_correct <span class="token operator">/</span> total_num        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'acc: '</span><span class="token punctuation">,</span>acc<span class="token punctuation">)</span>    <span class="token keyword">pass</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完结撒花！！！</p><p><img src="/2021/10/21/shen-du-xue-xi-fen-lei-fashion-mnist-shu-ju-ji/tu.jpg" alt="tu"></p>]]></content>
      
      
      
        <tags>
            
            <tag> tensorflow2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>去水印小程序</title>
      <link href="/2021/10/17/qu-shui-yin-xiao-cheng-xu/"/>
      <url>/2021/10/17/qu-shui-yin-xiao-cheng-xu/</url>
      
        <content type="html"><![CDATA[<h2 id="微信去水印小程序搭建"><a href="#微信去水印小程序搭建" class="headerlink" title="微信去水印小程序搭建"></a>微信去水印小程序搭建</h2><p>发现微信好多去水印小程序要钱，要邀请好友，要分享，不然不让用，作为一个计算机专业的学生，怎么能阻止我拜票呢？自己做一个（趁着我的阿里云服务器还没有到期😁）。</p><p>emmmm配置了一下午果断放弃，安装宝塔(真香)</p><p>安装宝塔mysql8版本的时候提示需要3306M内存，但是我们只有2G怎么办，好办，把限制解除</p><p>宝塔面板最低内存和最低CPU限制</p><p>Mysql 5.6 ：最低内存要求 768MB。</p><p>Mysql 5.7 ：最低内存要求 1560MB。</p><p>Mysql 8.0 ：最低内存要求 3700MB，最少CPU数：2个</p><p>宝塔面板最低内存和最低CPU数限制解决方法</p><p>方法一：修改宝塔面板www/ server/ panel/ class/ panelPlugin.py文件</p><p>A.直接使用宝塔面板的在线文件编辑工具在文件找到www/ server/ panel/ class/ panelPlugin.py文件。找到142行和143行中的这俩代码。<br><img src="/2021/10/17/qu-shui-yin-xiao-cheng-xu/1.png" alt="1"></p><p>第一个是cpu限制，第二个是内存限制</p><p>注意：要重启面板，在选择需要的mysql版本安装</p><p>附录：记录的挣扎</p><p>参考官方文档</p><p><a href="https://www.bt.cn/bbs/thread-19376-1-1.html">https://www.bt.cn/bbs/thread-19376-1-1.html</a></p><p>用finalshell或者xshell链接服务器安装，输入命令（centos系统，其它系统请参考上面链接查找相关命令）</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>首先安装依赖</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装好后进入nginx（自己建立的那个目录）进入sbin目录</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">修改配置完的平滑重启./nginx -s reload启动命令./nginx停止命令./nginx -s stop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>宝塔安装地址：</p><p><a href="https://www.bt.cn/bbs/thread-19376-1-1.html">https://www.bt.cn/bbs/thread-19376-1-1.html</a></p><p>nginx安装</p><p><a href="https://blog.csdn.net/qq_34168515/article/details/106735521">https://blog.csdn.net/qq_34168515/article/details/106735521</a></p><p>nginx1.18作用</p><p><a href="https://blog.csdn.net/java_zyq/article/details/87873792">https://blog.csdn.net/java_zyq/article/details/87873792</a></p><p>待续 。。。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
            <tag> 去水印 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tensorflow安装教程</title>
      <link href="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/"/>
      <url>/2021/10/04/tensorflow-an-zhuang-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="win10安装tensorflow安装教程，CPU版本"><a href="#win10安装tensorflow安装教程，CPU版本" class="headerlink" title="win10安装tensorflow安装教程，CPU版本"></a>win10安装tensorflow安装教程，CPU版本</h2><p>首先安装anconda，去官网下就好了，下载链接</p><p><a href="https://www.anaconda.com/">https://www.anaconda.com/</a></p><p>然后打开anconda prompt，创建python3.7环境</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">conda create -n 虚拟环境名称 python=3.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后查看pip版本，如果pip版本小于19.0，那么更新pip</p><p>查看pip版本，命令：pip -V</p><p>更新pip版本：python -m pip install –upgrade pip</p><p>使用豆瓣源安装tensorflow</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">pip install tensorflow-cpu==2.3.0 -i https://pypi.douban.com/simple/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>等待安装即可。</p><p>然后进行测试，输入python</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">print</span><span class="token punctuation">(</span>tf__version__<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>出现tensorflow版本号，表明安装成功。</p><h2 id="在notebook中切换python虚拟环境"><a href="#在notebook中切换python虚拟环境" class="headerlink" title="在notebook中切换python虚拟环境"></a>在notebook中切换python虚拟环境</h2><p>安装notebook，如果安装的anconda自带notebook那么就不用安装</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">pip install jupyter notebook<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">conda env list  #查看python虚拟环境<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/1.png" alt="1"></p><p>继续执行命令：activate tensorflow2.3 激活虚拟环境，</p><p><img src="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/2.png" alt="2"></p><p>然后执行代码：pip install ipykernel -i <a href="https://pypi.douban.com/simple%E5%AE%89%E8%A3%85ipykernel%EF%BC%8C%E5%90%8E%E9%9D%A2%E6%9C%89%E7%94%A8%E5%88%B0%E8%BF%99%E4%B8%AA">https://pypi.douban.com/simple安装ipykernel，后面有用到这个</a></p><p><img src="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/3.png" alt="3"></p><p>如下图所示：</p><p>继续执行如下命令，将虚拟环境引用到Jupyter Notebook中</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">python -m ipykernel install --user --name tensorflow2.3 --display-name "Python [conda env:tensorflow2.3]"#tensorflow2.3为我的虚拟环境名字，要换成你自己的，两个都要换#Python [conda env:tensorflow2.3]就是notebook中的虚拟环境名字<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>上面步骤完成之后，再打开Jupyter Notebook，直接切换新的虚拟环境即可，如下图所示。</p><p><img src="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/4.png" alt="4"></p><p>然后这个时候启动notebook会发现，切换环境的时候，notebook服务器，也就是那个类似命令行似的黑框框，会报错：Bad file descriptor (C:\projects\libzmq\src\epoll.cpp:100)，如果你没报错，那么你现在就可以用notebook切换新的环境了。</p><h2 id="Bad-file-descriptor-C-projects-libzmq-src-epoll-cpp-100-解决办法"><a href="#Bad-file-descriptor-C-projects-libzmq-src-epoll-cpp-100-解决办法" class="headerlink" title="Bad file descriptor (C:\projects\libzmq\src\epoll.cpp:100)解决办法"></a>Bad file descriptor (C:\projects\libzmq\src\epoll.cpp:100)解决办法</h2><p>当安装jupyterlab 或者jupyter notebook的时候，会自动安装ipykernel, 然后自动安装了高版本的pyzmq。</p><p>此问题是pyzmq版本问题，卸载pyzmq 22.0.2，执行 pip install pyzmq==19.0.2 安装pyzmq 19.0.2即可</p><p><img src="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/5.png" alt="5"></p><p>使用conda list命令查看你安装的包</p><p>看到pyzmq版本为22.3.0</p><p>用命令 pip uninstall pyzmq 卸载pyzmq</p><p>然后用命令 pip install pyzmq==19.0.2 安装19.0.2版本的pyzmq，然后启动notebook切换环境，发现成功。</p><h2 id="win10安装tensorflow安装教程，GPU版本"><a href="#win10安装tensorflow安装教程，GPU版本" class="headerlink" title="win10安装tensorflow安装教程，GPU版本"></a>win10安装tensorflow安装教程，GPU版本</h2><p>首先确定你的电脑上有NVIDIA显卡，如果没有，转入CPU版本tensorflow安装</p><p>点击下面链接下载CUDA</p><p><a href="https://developer.nvidia.com/cuda-10.0-download-archive?target_os=Windows&amp;target_arch=x86_64&amp;target_version=10&amp;target_type=exenetwork">https://developer.nvidia.com/cuda-10.0-download-archive?target_os=Windows&amp;target_arch=x86_64&amp;target_version=10&amp;target_type=exenetwork</a></p><p>然后就可以开始安装了，除了下边的选项其他的一路默认即可，也可以更改一下安装路径</p><p><img src="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/6.png" alt="6"></p><p><img src="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/8.png" alt="7"></p><p><img src="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/7.png" alt="8"></p><p>然后一路下一步，就安装成功啦！</p><p>下载cudnn</p><p>下载链接：<a href="https://developer.nvidia.com/rdp/cudnn-archive#a-collapse742-10">cuDNN Archive | NVIDIA Developer</a></p><p><img src="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/9.png" alt="9"></p><p>然后将cudnn解压放入</p><p><img src="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/10.png" alt="10"></p><p>你要放在你自己的目录中，我这个目录更改了，默认的在C盘program files文件中。</p><p>配置环境变量，也要改成自己的目录，我的环境变量如下：</p><p><img src="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/11.png" alt="11"></p><p>然后打卡conda命令行。创建虚拟环境，启动虚拟环境，然后运行</p><p>pip install tensorflow-gpu==2.3.0 -i <a href="https://pypi.douban.com/simple/">https://pypi.douban.com/simple/</a></p><p>进行安装</p><p>对应版本</p><p><img src="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/12.png" alt="12"></p><p>然后进行测试在conda命令行中，输入python</p><p>输入下面代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tftf<span class="token punctuation">.</span>test<span class="token punctuation">.</span>is_built_with_cuda<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">#返回true证明安装好了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>测试是否安装成功：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">'TF_CPP_MIN_LOG_LEVEL'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'2'</span><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tftf<span class="token punctuation">.</span>compat<span class="token punctuation">.</span>v1<span class="token punctuation">.</span>disable_eager_execution<span class="token punctuation">(</span><span class="token punctuation">)</span>sess <span class="token operator">=</span> tf<span class="token punctuation">.</span>compat<span class="token punctuation">.</span>v1<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>b<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#能够正确输出结果3，表示安装成功</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="运行一下发现报错Could-not-load-dynamic-library-‘cudart64-101-dll’-dlerror-cudart64-101-dll-not-found"><a href="#运行一下发现报错Could-not-load-dynamic-library-‘cudart64-101-dll’-dlerror-cudart64-101-dll-not-found" class="headerlink" title="运行一下发现报错Could not load dynamic library ‘cudart64_101.dll’; dlerror: cudart64_101.dll not found"></a>运行一下发现报错Could not load dynamic library ‘cudart64_101.dll’; dlerror: cudart64_101.dll not found</h2><p>去官网下载CUDART64_101.DLL</p><p>下载链接：<a href="https://www.dll-files.com/cudart64_101.dll.html">https://www.dll-files.com/cudart64_101.dll.html</a></p><p><img src="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/13.png" alt="13"></p><p>按照上面指示将文件解压放入上述问价夹即可。</p><h2 id="Could-not-load-dynamic-library-‘cublas64-10-dll’-dlerror-cublas64-10-dll-not-found"><a href="#Could-not-load-dynamic-library-‘cublas64-10-dll’-dlerror-cublas64-10-dll-not-found" class="headerlink" title="Could not load dynamic library ‘cublas64_10.dll’; dlerror: cublas64_10.dll not found"></a>Could not load dynamic library ‘cublas64_10.dll’; dlerror: cublas64_10.dll not found</h2><h2 id="Could-not-load-dynamic-library-‘cufft64-10-dll’-dlerror-cufft64-10-dll-not-found等报错解决办法"><a href="#Could-not-load-dynamic-library-‘cufft64-10-dll’-dlerror-cufft64-10-dll-not-found等报错解决办法" class="headerlink" title="Could not load dynamic library ‘cufft64_10.dll’; dlerror: cufft64_10.dll not found等报错解决办法"></a>Could not load dynamic library ‘cufft64_10.dll’; dlerror: cufft64_10.dll not found等报错解决办法</h2><p>将相应的dll文件下载下来就好了，复制到然后复制到 C:\Windows\System32中，缺啥复制啥</p><p>链接：<a href="https://pan.baidu.com/s/19z6PfJ79o8DK94hJbJx-nQ">https://pan.baidu.com/s/19z6PfJ79o8DK94hJbJx-nQ</a><br>提取码：137n </p><p>如果上述文件里没有那么就在安装的所有文件夹里的bin文件夹里找找有没有cufft64_100.dll之类的文件,改名字，然后丢到C:\Windows\System32中，或者可以评论告诉我，我来帮你试着解决一下。</p><p>成功截图</p><p><img src="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/14.png" alt="14"></p><p>完结撒花！！！</p><p><img src="/2021/10/04/tensorflow-an-zhuang-jiao-cheng/10-4.jpg" alt="心情愉悦"></p><p>21.10.18错误记录</p><p>今天跑模型的时候遇到了这个</p><h2 id="Loaded-runtime-CuDNN-library-7-5-0-but-source-was-compiled-with-7-6-5-CuDNN-library-major-and-minor-version-needs-to-match-or-have-higher-minor-version-in-case-of-CuDNN-7-0-or-later-version-If-using-a-binary-install-upgrade-your-CuDNN-library-If-building-from-sources-make-sure-the-library-loaded-at-runtime-is-compatible-with-the-version-specified-during-compile-configuration"><a href="#Loaded-runtime-CuDNN-library-7-5-0-but-source-was-compiled-with-7-6-5-CuDNN-library-major-and-minor-version-needs-to-match-or-have-higher-minor-version-in-case-of-CuDNN-7-0-or-later-version-If-using-a-binary-install-upgrade-your-CuDNN-library-If-building-from-sources-make-sure-the-library-loaded-at-runtime-is-compatible-with-the-version-specified-during-compile-configuration" class="headerlink" title="Loaded runtime CuDNN library: 7.5.0 but source was compiled with: 7.6.5.  CuDNN library major and minor version needs to match or have higher minor version in case of CuDNN 7.0 or later version. If using a binary install, upgrade your CuDNN library.  If building from sources, make sure the library loaded at runtime is compatible with the version specified during compile configuration"></a>Loaded runtime CuDNN library: 7.5.0 but source was compiled with: 7.6.5.  CuDNN library major and minor version needs to match or have higher minor version in case of CuDNN 7.0 or later version. If using a binary install, upgrade your CuDNN library.  If building from sources, make sure the library loaded at runtime is compatible with the version specified during compile configuration</h2><p>啊，发现cudnn版本不够，好办，去官网下载指定版本，照着上面重新解压，然后将其丢到（上面截图的目录 注意：目录要是你自己安装的目录），然后别忘记将bin文件下的cudnn64_7.dll 丢到C/windows/system32中。已经完美解决。</p>]]></content>
      
      
      
        <tags>
            
            <tag> notebook </tag>
            
            <tag> tensorflow2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux解压命令详解</title>
      <link href="/2021/10/02/linux-jie-ya-ming-ling-xiang-jie/"/>
      <url>/2021/10/02/linux-jie-ya-ming-ling-xiang-jie/</url>
      
        <content type="html"><![CDATA[<h3 id="Linux解压压缩命令详解"><a href="#Linux解压压缩命令详解" class="headerlink" title="Linux解压压缩命令详解"></a>Linux解压压缩命令详解</h3><h2 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h2><p>-c: 建立压缩档案<br>-x：解压<br>-t：查看内容<br>-r：向压缩归档文件末尾追加文件<br>-u：更新原压缩包中的文件</p><p>这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。</p><p>-z：有gzip属性的<br>-j：有bz2属性的<br>-Z：有compress属性的<br>-v：显示所有过程<br>-O：将文件解开到标准输出</p><p>下面的参数-f是必须的</p><p>-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。</p><p># tar -cf all.tar *.jpg<br>这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。</p><p># tar -rf all.tar *.gif<br>这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。</p><p># tar -uf all.tar logo.gif<br>这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。</p><p># tar -tf all.tar<br>这条命令是列出all.tar包中所有文件，-t是列出文件的意思</p><p># tar -xf all.tar<br>这条命令是解出all.tar包中所有文件，-t是解开的意思</p><h2 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h2><p>tar -cvf jpg.tar *.jpg //将目录里所有jpg文件打包成tar.jpg </p><p>tar -czf jpg.tar.gz *.jpg  //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz</p><p> tar -cjf jpg.tar.bz2 *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2</p><p>tar -cZf jpg.tar.Z *.jpg  //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z</p><p>rar a jpg.rar *.jpg //rar格式的压缩，需要先下载rar for linux</p><p>zip jpg.zip *.jpg //zip格式的压缩，需要先下载zip for linux</p><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p>tar -xvf file.tar //解压 tar包</p><p>tar -xzvf file.tar.gz //解压tar.gz</p><p>tar -xjvf file.tar.bz2  //解压 tar.bz2</p><p>tar -xZvf file.tar.Z  //解压tar.Z</p><p>unrar e file.rar //解压rar</p><p>unzip file.zip //解压zip</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1、*.tar 用 tar -xvf 解压</p><p>2、*.gz 用 gzip -d或者gunzip 解压</p><p>3、*.tar.gz和*.tgz 用 tar -xzf 解压</p><p>4、*.bz2 用 bzip2 -d或者用bunzip2 解压</p><p>5、*.tar.bz2用tar -xjf 解压</p><p>6、*.Z 用 uncompress 解压</p><p>7、*.tar.Z 用tar -xZf 解压</p><p>8、*.rar 用 unrar e解压</p><p>9、*.zip 用 unzip 解压</p><p>解压jdk到指定文件夹：</p><p>tar -xzvf jdk-8u131-linux-x64.tar.gz -C /usr/local/java</p><pre class="line-numbers language-none"><code class="language-none">root@ubuntu:~# tar --help用法: tar [选项...] [FILE]...GNU 'tar' saves many files together into a single tape or disk archive, and canrestore individual files from the archive. Examples:  tar -cf archive.tar foo bar  # Create archive.tar from files foo and bar.  tar -tvf archive.tar         # List all files in archive.tar verbosely.  tar -xf archive.tar          # Extract all files from archive.tar.  主操作模式:   -A, --catenate, --concatenate   追加 tar 文件至归档  -c, --create               创建一个新归档  -d, --diff, --compare      找出归档和文件系统的差异      --delete               从归档(非磁带！)中删除  -r, --append               追加文件至归档结尾  -t, --list                 列出归档内容      --test-label           测试归档卷标并退出  -u, --update               仅追加比归档中副本更新的文件  -x, --extract, --get       从归档中解出文件  操作修饰符:       --check-device         当创建增量归档时检查设备号(默认)  -g, --listed-incremental=FILE   处理新式的 GNU 格式的增量备份  -G, --incremental          处理老式的 GNU 格式的增量备份      --ignore-failed-read                             当遇上不可读文件时不要以非零值退出      --level=NUMBER         所创建的增量列表归档的输出级别  -n, --seek                 归档可检索      --no-check-device      当创建增量归档时不要检查设备号      --no-seek              归档不可检索      --occurrence[=NUMBER]  仅处理归档中每个文件的第 NUMBER                             个事件；仅当与以下子命令 --delete,                             --diff, --extract 或是 --list                             中的一个联合使用时，此选项才有效。而且不管文件列表是以命令行形式给出或是通过                             -T 选项指定的；NUMBER 值默认为 1      --sparse-version=MAJOR[.MINOR]                             设置所用的离散格式版本(隐含                             --sparse)  -S, --sparse               高效处理离散文件  重写控制:   -k, --keep-old-files       don't replace existing files when extracting,                             treat them as errors      --keep-directory-symlink   preserve existing symlinks to directories when                             extracting      --keep-newer-files                             不要替换比归档中副本更新的已存在的文件      --no-overwrite-dir     保留已存在目录的元数据      --one-top-level[=DIR]  create a subdirectory to avoid having loose files                             extracted      --overwrite            解压时重写存在的文件      --overwrite-dir        解压时重写已存在目录的元数据(默认)      --recursive-unlink     解压目录之前先清除目录层次      --remove-files         在添加文件至归档后删除它们      --skip-old-files       don't replace existing files when extracting,                             silently skip over them  -U, --unlink-first         在解压要重写的文件之前先删除它们  -W, --verify               在写入以后尝试校验归档  选择输出流:       --ignore-command-error 忽略子进程的退出代码      --no-ignore-command-error                             将子进程的非零退出代码认为发生错误  -O, --to-stdout            解压文件至标准输出      --to-command=COMMAND                             将解压的文件通过管道传送至另一个程序  操作文件属性:       --atime-preserve[=METHOD]                             在输出的文件上保留访问时间，要么通过在读取(默认                             METHOD=‘replace’)后还原时间，要不就不要在第一次(METHOD=‘system’)设置时间      --clamp-mtime          only set time when the file is more recent than                             what was given with --mtime      --delay-directory-restore                             直到解压结束才设置修改时间和所解目录的权限      --group=名称         强制将 NAME                             作为所添加的文件的组所有者      --mode=CHANGES         强制将所添加的文件(符号)更改为权限                             CHANGES      --mtime=DATE-OR-FILE   从 DATE-OR-FILE 中为添加的文件设置                             mtime  -m, --touch                不要解压文件的修改时间      --no-delay-directory-restore                             取消 --delay-directory-restore 选项的效果      --no-same-owner                             将文件解压为您所有(普通用户默认此项)      --no-same-permissions                             从归档中解压权限时使用用户的掩码位(默认为普通用户服务)      --numeric-owner        总是以数字代表用户/组的名称      --owner=名称         强制将 NAME                             作为所添加的文件的所有者  -p, --preserve-permissions, --same-permissions                             解压文件权限信息(默认只为超级用户服务)      --preserve             与 -p 和 -s 一样      --same-owner                             尝试解压时保持所有者关系一致(超级用户默认此项)  -s, --preserve-order, --same-order                             member arguments are listed in the same order as                             the files in the archive      --sort=ORDER           directory sorting order: none (default), name or                             inode  Handling of extended file attributes:       --acls                 Enable the POSIX ACLs support      --no-acls              Disable the POSIX ACLs support      --no-selinux           Disable the SELinux context support      --no-xattrs            Disable extended attributes support      --selinux              Enable the SELinux context support      --xattrs               Enable extended attributes support      --xattrs-exclude=MASK  specify the exclude pattern for xattr keys      --xattrs-include=MASK  specify the include pattern for xattr keys  设备选择和切换:   -f, --file=ARCHIVE         使用归档文件或 ARCHIVE 设备      --force-local                             即使归档文件存在副本还是把它认为是本地归档  -F, --info-script=名称, --new-volume-script=名称                             在每卷磁带最后运行脚本(隐含 -M)  -L, --tape-length=NUMBER   写入 NUMBER × 1024 字节后更换磁带  -M, --multi-volume         创建/列出/解压多卷归档文件      --rmt-command=COMMAND  使用指定的 rmt COMMAND 代替 rmt      --rsh-command=COMMAND  使用远程 COMMAND 代替 rsh      --volno-file=FILE      使用/更新 FILE 中的卷数  设备分块:   -b, --blocking-factor=BLOCKS   每个记录 BLOCKS x 512 字节  -B, --read-full-records    读取时重新分块(只对 4.2BSD 管道有效)  -i, --ignore-zeros         忽略归档中的零字节块(即文件结尾)      --record-size=NUMBER   每个记录的字节数 NUMBER，乘以 512  选择归档格式:   -H, --format=FORMAT        创建指定格式的归档  FORMAT 是以下格式中的一种:     gnu                      GNU tar 1.13.x 格式    oldgnu                   GNU 格式 as per tar &lt;= 1.12    pax                      POSIX 1003.1-2001 (pax) 格式    posix                    等同于 pax    ustar                    POSIX 1003.1-1988 (ustar) 格式    v7                       old V7 tar 格式       --old-archive, --portability                             等同于 --format=v7      --pax-option=关键字[[:]=值][,关键字[[:]=值]]...                             控制 pax 关键字      --posix                等同于 --format=posix  -V, --label=TEXT           创建带有卷名 TEXT                             的归档；在列出/解压时，使用 TEXT                             作为卷名的模式串  压缩选项:   -a, --auto-compress        使用归档后缀名来决定压缩程序  -I, --use-compress-program=PROG                             通过 PROG 过滤(必须是能接受 -d                             选项的程序)  -j, --bzip2                通过 bzip2 过滤归档  -J, --xz                   通过 xz 过滤归档      --lzip                 通过 lzip 过滤归档      --lzma                 通过 xz 过滤归档      --lzop                 通过 xz 过滤归档      --no-auto-compress     不使用归档后缀名来决定压缩程序  -z, --gzip, --gunzip, --ungzip   通过 gzip 过滤归档  -Z, --compress, --uncompress   通过 compress 过滤归档  本地文件选择:       --add-file=FILE        添加指定的 FILE 至归档(如果名字以 -                             开始会很有用的)      --backup[=CONTROL]     在删除前备份，选择 CONTROL 版本  -C, --directory=DIR        改变至目录 DIR      --exclude=PATTERN      排除以 PATTERN 指定的文件      --exclude-backups      排除备份和锁文件      --exclude-caches       除标识文件本身外，排除包含                             CACHEDIR.TAG 的目录中的内容      --exclude-caches-all   排除包含 CACHEDIR.TAG 的目录      --exclude-caches-under 排除包含 CACHEDIR.TAG                             的目录中所有内容      --exclude-ignore=FILE  read exclude patterns for each directory from                             FILE, if it exists      --exclude-ignore-recursive=FILE                             read exclude patterns for each directory and its                             subdirectories from FILE, if it exists      --exclude-tag=FILE     除 FILE 自身外，排除包含 FILE                             的目录中的内容      --exclude-tag-all=FILE 排除包含 FILE 的目录      --exclude-tag-under=FILE   排除包含 FILE 的目录中的所有内容      --exclude-vcs          排除版本控制系统目录      --exclude-vcs-ignores  read exclude patterns from the VCS ignore files  -h, --dereference                             跟踪符号链接；将它们所指向的文件归档并输出      --hard-dereference                             跟踪硬链接；将它们所指向的文件归档并输出  -K, --starting-file=MEMBER-NAME                             begin at member MEMBER-NAME when reading the                             archive      --newer-mtime=DATE     当只有数据改变时比较数据和时间      --no-null              禁用上一次的效果 --null 选项      --no-recursion         避免目录中的自动降级      --no-unquote           do not unquote input file or member names      --null                 -T 读取以空终止的名字，-C 禁用  -N, --newer=DATE-OR-FILE, --after-date=DATE-OR-FILE                             只保存比 DATE-OR-FILE 更新的文件      --one-file-system      创建归档时保存在本地文件系统中  -P, --absolute-names       don't strip leading '/'s from file names      --recursion            目录递归(默认)      --suffix=STRING        在删除前备份，除非被环境变量                             SIMPLE_BACKUP_SUFFIX                             覆盖，否则覆盖常用后缀(‘’)  -T, --files-from=FILE      从 FILE                             中获取文件名来解压或创建文件      --unquote              unquote input file or member names (default)  -X, --exclude-from=FILE    排除 FILE 中列出的模式串 文件名变换:      --strip-components=NUMBER   解压时从文件名中清除 NUMBER                             个引导部分      --transform=EXPRESSION, --xform=EXPRESSION                             使用 sed 代替 EXPRESSION                             来进行文件名变换 文件名匹配选项(同时影响排除和包括模式串):      --anchored             模式串匹配文件名头部      --ignore-case          忽略大小写      --no-anchored          patterns match after any '/' (default for                             exclusion)      --no-ignore-case       匹配大小写(默认)      --no-wildcards         逐字匹配字符串      --no-wildcards-match-slash   wildcards do not match '/'      --wildcards            使用通配符(默认对 exclusion )      --wildcards-match-slash   wildcards match '/' (default for exclusion) 提示性输出:      --checkpoint[=NUMBER]  每隔 NUMBER                             个记录显示进度信息(默认为 10 个)      --checkpoint-action=ACTION   在每个检查点上执行 ACTION      --full-time            按文件原本时间格式打印      --index-file=FILE      将详细输出发送至 FILE  -l, --check-links                             只要不是所有链接都被输出就打印信息      --no-quote-chars=STRING   禁用来自 STRING 的字符引用      --quote-chars=STRING   来自 STRING 的额外的引用字符      --quoting-style=STYLE  设置名称引用风格；有效的 STYLE                             值请参阅以下说明  -R, --block-number         每个信息都显示归档内的块数      --show-defaults        显示 tar 默认选项      --show-omitted-dirs                             列表或解压时，列出每个不匹配查找标准的目录      --show-snapshot-field-ranges                             show valid ranges for snapshot-file fields      --show-transformed-names, --show-stored-names                             显示变换后的文件名或归档名      --totals[=SIGNAL]      处理归档后打印出总字节数；当此                             SIGNAL 被触发时带参数 -                             打印总字节数；允许的信号为:                             SIGHUP，SIGQUIT，SIGINT，SIGUSR1 和                             SIGUSR2；同时也接受不带 SIG                             前缀的信号名称      --utc                  以 UTC 格式打印文件修改时间  -v, --verbose              详细地列出处理的文件      --warning=KEYWORD      警告控制:  -w, --interactive, --confirmation                             每次操作都要求确认 兼容性选项:  -o                         创建归档时，相当于                             --old-archive；展开归档时，相当于                             --no-same-owner 其它选项:  -?, --help                 显示此帮助列表      --restrict             禁用某些潜在的有危险的选项      --usage                显示简短的用法说明      --version              打印程序版本长选项和相应短选项具有相同的强制参数或可选参数。The backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.The version control may be set with --backup or VERSION_CONTROL, values are:  none, off       never make backups  t, numbered     make numbered backups  nil, existing   numbered if numbered backups exist, simple otherwise  never, simple   always make simple backups--quoting-style 选项的有效参数为:  literal  shell  shell-always  c  c-maybe  escape  locale  clocale此 tar 默认为:--format=gnu -f- -b20 --quoting-style=escape --rmt-command=/usr/lib/tar/rmt--rsh-command=/usr/bin/rsh将错误报告发送到 &lt;bug-tar@gnu.org&gt;。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>原文链接：<a href="https://blog.csdn.net/x_iya/article/details/72889456">https://blog.csdn.net/x_iya/article/details/72889456</a></p><p>记录贴，不撒花了。</p><p><img src="/2021/10/02/linux-jie-ya-ming-ling-xiang-jie/10-2-2.jpg" alt="啦啦啦"></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux解压 </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署网站</title>
      <link href="/2021/09/29/bu-shu-wang-zhan/"/>
      <url>/2021/09/29/bu-shu-wang-zhan/</url>
      
        <content type="html"><![CDATA[<h2 id="vue项目中没有config文件夹，解决办法"><a href="#vue项目中没有config文件夹，解决办法" class="headerlink" title="vue项目中没有config文件夹，解决办法"></a>vue项目中没有config文件夹，解决办法</h2><p>自己写了一个问答社区网站，但是通过 npm run build 打包出来，将打包出来的文件夹扔到tomcat中的worksapp中，启动tomcat发现出现空白页面，找了其他资料，都是修改vue项目config文件夹下的 index.js，</p><p>但是这个方法是针对完整的webpack才有这个目录，我的没有那怎么办，去看了看官方文档结合网上的资料。</p><p>解决方法：没有就创建一个，如下创建vue.config.js</p><p><img src="/2021/09/29/bu-shu-wang-zhan/2.png" alt="2"></p><p>创建vue.config.js文件，Vue 项目中 vue.config.js 文件就等同于 webpack 的 webpack.config.js</p><p>如果没有这个文件夹，系统会加载默认的配置文件，如果你在这个文件里设置了相应的属性，系统会将默认的和你设置的合并在一起产生一个新的配置文件，比如默认：w=1，y=2，但是你在这个文件里设置了w=0，那么就会加载w=0，y=2，这个样子，新建这个文件系统会默认加载不用另外设置。这个文件里的详细字段解释参考下面链接：<a href="https://blog.csdn.net/zz00008888/article/details/109579625">https://blog.csdn.net/zz00008888/article/details/109579625</a></p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">module.exports = {    publicPath: './',//默认的'/'是绝对路径，如果不确定在根路径，改成相对路径'./'，如果你知道项目创建的文件目录也可以写成项目的目录，比如我的时问答社区就可以写成   /wenda    相对路径更加方便，不用在更改打包名字时还要改路径    outputDir: 'wenda',// 输出文件目录}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="对网站进行部署，部署到linux服务器中，linux用的是CentOS"><a href="#对网站进行部署，部署到linux服务器中，linux用的是CentOS" class="headerlink" title="对网站进行部署，部署到linux服务器中，linux用的是CentOS"></a>对网站进行部署，部署到linux服务器中，linux用的是CentOS</h2><p>首先将后端springboot项目打包，先clean然后package打包，打包出来的jar文件在target中</p><p><img src="/2021/09/29/bu-shu-wang-zhan/3.png" alt="3"></p><p>然后进行前端vue项目打包，运行命令npm run build进行打包，打包后的目录在项目目录里，名字叫做下面圈圈里的名字，默认时dist</p><p><img src="/2021/09/29/bu-shu-wang-zhan/4.png" alt="4"></p><h2 id="1-安装jdk运行java项目"><a href="#1-安装jdk运行java项目" class="headerlink" title="1 安装jdk运行java项目"></a>1 安装jdk运行java项目</h2><p>jdk：既可以运行java项目也可以编译java语言</p><p>jre：只能运行java项目</p><p>1 首先查看CentOS是否有原生版本的java，通过命令查看</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rpm -qa | grep jdk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2 如果存在则通过命令删除</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rpm -e --nodeps java-1.8.0-openjdk-1.8.0.65-3.b17.el7.x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>java-1.8.0-openjdk-1.8.0.65-3.b17.el7.x86_64为 1 中命令查出来的名字</p><p>3 查看是否删除成功</p><p>运行 1 中的命令，查询结果为空则删除成功</p><p>4 在 /usr/local 目录下新建 java 文件夹，并进入</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd /usr/localmkdir javacd java<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>5 如果你用的时xshell那就打开 Xftp，然后将 JDK 安装文件拷贝到 java 目录，如果用的时finalshell直接向目录中拉过去就行，或者进入目录点击上传都可</p><p>6 使用命令进行安装，注意下载的jdk钥匙linux版本的rpm压缩包</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rpm -ivh jdk-8u221-linux-x64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>7 配置环境变量</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vim /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>按 i 进行输入，复制如下内容到文件最底部追加</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">JAVA_HOME=/usr/java/jdk1.8.0_221-amd64CLASSPATH=%JAVA_HOME%/lib:%JAVA_HOME%/jre/libPATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/binexport PATH CLASSPATH JAVA_HOME<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后按按 Esc 退出，然后输入 :x 回车即为保存退出。如果输入错了，想要保存源文件那么输入Esc 后输入 :q! 表示不保存强制退出。</p><p>8 让配置生效</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">source /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>9 检查安装是否成功</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">java -version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-安装tomcat"><a href="#2-安装tomcat" class="headerlink" title="2 安装tomcat"></a>2 安装tomcat</h2><p>1 在 /usr/local 目录下新建 tomcat 文件夹，并进入。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd /usr/localmkdir tomcatcd tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>2 xshell打开 Xftp，finalshell直接上传，将 Tomcat 压缩文件拷贝到 tomcat 目录。</p><p>3 解压缩。注意下载linux版本</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">tar -zxvf apache-tomcat-9.0.34.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4 进入 /apache-tomcat-9.0.34/bin 路径启动 Tomcat。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./startup.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>关闭toncat</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./shutdown.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动成功之后，可以在 CentOS 中直接访问。 但是在本地无法访问，这是因为 CentOS 没有开放 8080 端口导致的。</p><p>5 CentOS 开放 8080 端口。</p><p>如果你是组的阿里或者腾讯服务器，那么要在网站的工作台中配置，比如阿里服务器要在这里配置</p><p><img src="/2021/09/29/bu-shu-wang-zhan/5.png" alt="5"></p><p>而如果你要自己配置服务其，就是弄一个linux系统那么就要，开放端口号</p><p>1 查看防火墙状态</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">firewall-cmd --state<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>runing 表示开启，not runing 表示关闭，如果关闭，执行</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">systemctl start firewalld.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2 开启 8080 端口</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">firewall-cmd --zone=public --add-port=8080/tcp --permanent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3 输入命令重启防火墙</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">systemctl restart firewalld.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4 输入命令重新载入配置</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5 打开浏览器，访问成功。</p><p>6 将导出的vue项目拷贝到 Tomcat/webapps 下，启动访问即可。本项目就是将webda目录考入上述文件夹下。</p><h2 id="3-安装-MySQL"><a href="#3-安装-MySQL" class="headerlink" title="3 安装 MySQL"></a>3 安装 MySQL</h2><p>1 新建 /usr/local/mysql，将 MySQL 安装包拷贝过去。</p><p>2 进入 /usr/local/mysql，解压。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">tar -xvf mysql-8.0.20-1.el7.x86_64.rpm-bundle.tar#mysql-8.0.20-1.el7.x86_64.rpm-bundle.tar为下载的数据库名字，要改成你自己的名字<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3 安装 MySQL 之前需要先删除 mariadb，检查是否存在 mariadb</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rpm -qa | grep mariadb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4 卸载 mariadb</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rpm -e mariadb-libs-5.5.44-2.el7.centos.x86_64 --nodeps#mariadb-libs-5.5.44-2.el7.centos.x86_64为上边命令查出来的名字<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>5 安装 MySQL，注意安装顺序不要变，应为他们相互之间有依赖关系顺序为common&gt;libs&gt;client&gt;server</p><p>这几个rpm包都是 2 中的包解压出来的</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rpm -ivh mysql-community-common-8.0.20-1.el7.x86_64.rpm --nodeps--forcerpm -ivh mysql-community-libs-8.0.20-1.el7.x86_64.rpm --nodeps --forcerpm -ivh mysql-community-client-8.0.20-1.el7.x86_64.rpm --nodeps--forcerpm -ivh mysql-community-server-8.0.20-1.el7.x86_64.rpm --nodeps--force<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>6 检查安装结果</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rpm -qa | grep mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>7 初始化 MySQL</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysqld --initialize<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>8 授权防火墙</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">chown mysql:mysql /var/lib/mysql -R;systemctl start mysqld.service;systemctl enable mysqld;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>9 查看数据库默认密码</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cat /var/log/mysqld.log | grep password<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>10 登录数据库</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql -uroot -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>11 复制粘贴密码</p><p>12 登录成功，修改密码</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">ALTER USER 'root'@'localhost' IDENTIFIED WITHmysql_native_password BY '你的密码';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>13 exit 退出，使用新密码重新登陆。</p><p>14 开启远程访问。</p><p>首先登录数据库</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">use mysql        #打开mysql数据库<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#将host设置为%表示任何ip都能连接mysql，当然您也可以将host指定为某个ipupdate user set host='%' where user='root' and host='localhost';flush privileges;    #刷新权限表，使配置生效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后我们就能远程连接我们的mysql了。</p><p>如果您想关闭远程连接，恢复mysql的默认设置（只能本地连接），您可以通过以下步骤操作：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">use mysql        #打开mysql数据库#将host设置为localhost表示只能本地连接mysqlupdate user set host='localhost' where user='root';flush privileges;    #刷新权限表，使配置生效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>备注：您也可以添加一个用户名为yuancheng，密码为123456，权限为%（表示任意ip都能连接）的远程连接用户。命令参考如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">grant all on *.* to 'yuancheng'@'%' identified by '123456';flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>15 CentOS 开放 3306 端口。用于远程链接数据库</p><p>如果时租的阿里云或者腾讯云参考上面如何开放端口，在防火墙里添加就好了。</p><p>自己服务要运行下面的命令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">firewall-cmd --zone=public --add-port=3306/tcp --permanentsystemctl restart firewalld.servicefirewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>到现在位置你的服务其就可以部署上去了，别忘记更改后端项目链接数据库的密码之类的。</p><p>运行jar包</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">nohup java -jar wenda-0.0.1-SNAPSHOT.jar &gt; ./wenda.log 2&gt;&amp;1 &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>日志会输入到wenda.log中，后台无中断运行</p><p>如何杀死进程呢？</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ps -ef | grep wenda#wenda为你包的名字，前几个字符即可，比如我的包的名字wenda-01-03sn。。。。，只用输入wenda就能查到了。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">kill pid#pid为进程号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>就结束运行啦！</p><h2 id="数据库导出数据命令"><a href="#数据库导出数据命令" class="headerlink" title="数据库导出数据命令"></a>数据库导出数据命令</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">mysqldump <span class="token operator">-</span>u root <span class="token operator">-</span>p  wenda <span class="token operator">&gt;</span> <span class="token keyword">dump</span><span class="token punctuation">.</span>txt   其中wenda为数据库，可以在数据库后加入表的名称，导出到<span class="token keyword">dump</span><span class="token punctuation">.</span>txt文件中<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我的项目链接：<a href="http://123.57.15.121:8080/wenda/#/">http://123.57.15.121:8080/wenda/#/</a></p><p>欢迎来我的小论坛来玩，听说ip地址暴漏出去挺严重的会导致别人的攻击，小伙伴们别攻击我啊，学生党不容易啊，防君子不防小人吧，网站也没啥利益。</p><p>本来打算将头像与帖子的显示图片设置成上传的，用户可以更改头像和帖子封面的，不是固定的，但是我看了看我租的服务器的内存，机器硬盘总共才60G，真的好小啊，果然是打折产品。。。，果断设置成固定的，不然服务器存不了多少东西就满了。。。，楼主本人还想干点别的事情，所以就这样吧！</p><p>感言：楼主由于租的服务器，阿里云服务器里边啥都没有特别干净导致安装异常顺利，当然了用  宝塔  来安装更加便捷，一键安装，但是我想作为一个程序员怎么能傻瓜式操作呢，然后就上网查看资料完成了上述的安装步骤，然后还买了个域名，但是域名要备案，备案还要居住证明，楼主本人已经吐血，太麻烦了也，当初卖服务器的时候阿里云新手账号60能够租用一年，但是没有香港的服务器，选择不在大陆的服务器能够免于备案，然后就导致了我想在只能通过ip地址访问，域名被搁置了，好难啊。然后在网上看到各种博主的踩坑记录，看看有没有你的坑。</p><pre class="line-numbers language-none"><code class="language-none">错误 mysqld: error while loading shared libraries: libnuma.so.1: cannot open shared object file: No such file or directory解决方案 这是却少 numactl 这个时候如果是Centos就 yum -y install numactl 就可以 解决这个问题了.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">错误 Job for mysqld.service failed because the control process exited with error code解决方案 是因为 /var/lib/mysql /这个目标路径已经存在/var/lib/mysql /，导致无法初始 化。删除/var/lib/mysql /后重启MySQL服务就可以了！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">错误 You must reset your password using ALTER USER statement before executing this statement解决方案 ALTER USER USER() IDENTIFIED BY '123456';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">错误 Your password does not satisfy the current policy requirements 解决方案1、首先需要设置密码的验证强度等级，设置 validate_password_policy 的全局参 数为 LOW 即可， 输入设值语句 “ set global validate_password_policy=LOW; ” 进行设值， 2、当前密码长度为 8 ，如果不介意的话就不用修改了，按照通用的来讲，设置为 6 位的密码，设置 validate_password_length 的全局参数为 6 即可， 输入设值语句 “ set global validate_password_length=6; ” 进行设值，3、现在可以为 mysql 设置简单密码了，只要满足六位的长度即可， 输入修改语句 “ ALTER USER 'root'@'localhost' IDENTIFIED BY '123456'; ” 可以看 到修改成功，表示密码策略修改成功了当然你也可以设置复杂一点的密码，这样就不会报错了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">1初始化如果有libssl.so.1.1相关的报错，要把默认的openssl升级到1.1以上版本，参考博客https://qq52o.me/2732.html 解决此问题2如果直接到官网下载现版本会是el8，初始化时会有/usr/lib64/libstdc++.so.6相关报错(因为版本低)，提示差了一大堆mysqld运行需要的版本库，建议直接找el7的mysql解决问题，下载地址https://centos.pkgs.org/3 还是初始化，报错libaio.so.1，解决方法 yum install -y libaio4 root操作 ERROR 1396 (HY000) 的报错是因为之前创建过但删除不干净，重新删除drop user root@root;5 按流程操作但MySQL远程连接不成功大概率是因为阿里云服务器没有开放端口(安全组)6 防火墙注意指令顺序，记得云服务器把端口开放就行7 前后端都丢到服务器上以后图片资源读取不了(404)，是因为table.html中img的路径读取问题，/改成./就行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后感谢哔哩哔哩up主提供的学习资料</p><p>视频链接：<a href="https://www.bilibili.com/video/BV1Z5411W7m7">https://www.bilibili.com/video/BV1Z5411W7m7</a></p><p><img src="/2021/09/29/bu-shu-wang-zhan/9.29.jpg" alt="图"></p>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> tomcat </tag>
            
            <tag> 网站部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英文分词</title>
      <link href="/2021/09/22/ying-wen-fen-ci/"/>
      <url>/2021/09/22/ying-wen-fen-ci/</url>
      
        <content type="html"><![CDATA[<p>被导师要求写一篇英文分析方面的文章，选了一个英文分析的工具 nltk ，首先在命令行中运行   pip install nltk  安装，然后  运行nltk.download() 下载语料库，但是发现链接失败报错：由于连接方在一段时间后没有正确答复或连接的主机没有反应,连接尝试失败。</p><h2 id="nltk-download-由于连接方在一段时间后没有正确答复或连接的主机没有反应-连接尝试失败。"><a href="#nltk-download-由于连接方在一段时间后没有正确答复或连接的主机没有反应-连接尝试失败。" class="headerlink" title="nltk.download()由于连接方在一段时间后没有正确答复或连接的主机没有反应,连接尝试失败。"></a>nltk.download()由于连接方在一段时间后没有正确答复或连接的主机没有反应,连接尝试失败。</h2><p>解决办法，从github官网手动下载解压。</p><p>地址：<a href="https://github.com/nltk/nltk_data">nltk/nltk_data: NLTK Data (github.com)</a></p><p>然后将下载的文件解压，解压后会有一个packages文件夹，将packages文件夹里面的东西，全部文件复制下来，然后黏贴在nltk_data文件夹里，nltk_data没有的话创建一个，至于nltk_data文件夹的路径在</p><p>运行程序</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> nltk<span class="token keyword">from</span> nltk<span class="token punctuation">.</span>stem <span class="token keyword">import</span> SnowballStemmerstemmer<span class="token operator">=</span> SnowballStemmer<span class="token punctuation">(</span><span class="token string">"english"</span><span class="token punctuation">)</span> <span class="token comment">#选择语言，如：英语</span>stemmer<span class="token punctuation">.</span>stem<span class="token punctuation">(</span><span class="token string">"countries"</span><span class="token punctuation">)</span> <span class="token comment">#设置一个词汇</span><span class="token keyword">from</span> nltk<span class="token punctuation">.</span>stem <span class="token keyword">import</span> WordNetLemmatizerwnl<span class="token operator">=</span>WordNetLemmatizer<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>wnl<span class="token punctuation">.</span>lemmatize<span class="token punctuation">(</span><span class="token string">'countries'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#输出还原的词汇，会输出country</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>pycharm会输出提示如下：</p><p>Searched in:<br>    - ‘C:\Users\胡余生/nltk_data’<br>        - ‘D:\anaconda\nltk_data’<br>        - ‘D:\anaconda\share\nltk_data’<br>        - ‘D:\anaconda\lib\nltk_data’<br>        - ‘C:\Users\胡余生\AppData\Roaming\nltk_data’<br>        - ‘C:\nltk_data’<br>        - ‘D:\nltk_data’<br>        - ‘E:\nltk_data’</p><p>选一个路径创建文件夹nltk_data，然后将解压后的文件夹里的packages放入nltk_data，然后就成功了。</p><p>分析方法参考如下链接：</p><p><a href="https://blog.csdn.net/weixin_39717825/article/details/110177611">https://blog.csdn.net/weixin_39717825/article/details/110177611</a></p><p>安装Gephi，Gephi运行需要java环境，安装好Gephi后修改安装Gephi目录下的etc文件夹中的gephi.conf，用记事本打开，将javahome前面的#号去掉并且修改javahome路径，javahome路径为所安装的jdk路径</p><p>Gephi：<a href="https://gephi.org/">https://gephi.org/</a><br>JDK：<a href="https://www.oracle.com/java/technologies/javase-downloads.html">https://www.oracle.com/java/technologies/javase-downloads.html</a></p><p>如果要调用nltk里的工具包，别忘记吧packages里的文件加相应的文件里的压缩包解压，比如运用nltk_data\chunkers里的工具要将maxent_ne_chunker.zip压缩包解压。</p><p>Gephi工具里的预览有时候会显示不出来，我的将项目保存，重启软件加载项目刷新就出来了。</p><p>网上还有用这种方法解决的（对我无效）：</p><p>删除user directory <a href="https://github.com/gephi/gephi/wiki/Troubleshooting">https://github.com/gephi/gephi/wiki/Troubleshooting</a></p><p>更新Java的jdk版本</p><h2 id="Gephi使用以及导入数据时边表格选不了的解决方法"><a href="#Gephi使用以及导入数据时边表格选不了的解决方法" class="headerlink" title="Gephi使用以及导入数据时边表格选不了的解决方法"></a>Gephi使用以及导入数据时边表格选不了的解决方法</h2><p>应用gephi进行分析，首先点击导出表格</p><p><img src="/2021/09/22/ying-wen-fen-ci/1.png" alt="1"></p><p>然后向输出表格里写入数据</p><p><img src="/2021/09/22/ying-wen-fen-ci/2.png" alt="2"></p><p>格式为csv格式，然后将写入的数据导入gephi</p><p><img src="/2021/09/22/ying-wen-fen-ci/3.png" alt="3"></p><p>选择输入电子表格</p><p><img src="/2021/09/22/ying-wen-fen-ci/4.png" alt="4"></p><p>选择边表格（注意：如果不用其输出表格的文件写入数据，将会选不了边表格选项）</p><p><img src="/2021/09/22/ying-wen-fen-ci/5.png" alt="5"></p><p>导入的时候选择加入当前项目，无向图</p><p>然后就添加成功了，然后更改点和边的外观，点和边是一样的这里只介绍点的更改</p><p>更改点的度数与大小相关，更改完点击应用！！！</p><p><img src="/2021/09/22/ying-wen-fen-ci/6.png" alt="更改点的大小与度数相关"></p><p>更改字体颜色</p><p><img src="/2021/09/22/ying-wen-fen-ci/7.png" alt="更改点的字体颜色"></p><p>更改点的颜色随度数变化</p><p><img src="/2021/09/22/ying-wen-fen-ci/8.png" alt="点的颜色随度数变化"></p><p>选择布局</p><p><img src="/2021/09/22/ying-wen-fen-ci/9.png" alt="布局"></p><p>点的外观更改的时候别忘记点击应用！！！选完布局点击运行。</p><p>运行后结果</p><p><img src="/2021/09/22/ying-wen-fen-ci/10.png" alt="概览结果"></p><p>然后点击预览，在下面窗口设置。</p><p><img src="/2021/09/22/ying-wen-fen-ci/11.png" alt="预览点设置"></p><p>给label添加数据</p><p><img src="/2021/09/22/ying-wen-fen-ci/13.png" alt="给label添加数据"></p><p>设置边的厚度</p><p><img src="/2021/09/22/ying-wen-fen-ci/12.png" alt="边的厚度"></p><p>最终结果图</p><p><img src="/2021/09/22/ying-wen-fen-ci/re.png" alt="最终结果图"></p><p>共现网络绘制完成，完结撒花！！！</p><p><img src="/2021/09/22/ying-wen-fen-ci/9.27.jpg" alt="图"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 英文分词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring boot+vue社区</title>
      <link href="/2021/09/21/shequ/"/>
      <url>/2021/09/21/shequ/</url>
      
        <content type="html"><![CDATA[<h2 id="sprint-boot-vue-实现简单的社区"><a href="#sprint-boot-vue-实现简单的社区" class="headerlink" title="sprint boot + vue 实现简单的社区"></a>sprint boot + vue 实现简单的社区</h2><p>首先感谢 豆约翰 提供的开源项目，跟着学习收获很大。</p><p>链接地址如下：<a href="https://www.bilibili.com/video/BV1Wz4y1U7vC?spm_id_from=333.999.0.0">https://www.bilibili.com/video/BV1Wz4y1U7vC?spm_id_from=333.999.0.0</a></p><p>学完后的总结</p><p>修改了添加标签的时候书写#导致多出一个#导致根据标签查询数据出错问题</p><p>修改了点击下一页点解热门标签导致查询失败问题</p><p>修改了删除帖子导致评论没有删除问题</p><p>修改了更改已经发出的帖子标签更改不了问题</p><p>添加了人物头像</p><p>添加了帖子图片</p><h2 id="主要应用的技术"><a href="#主要应用的技术" class="headerlink" title="主要应用的技术"></a>主要应用的技术</h2><p>前端：vue ，vuex， vueRouter， Axios， Buefy ，Element ，Vditor， DarkReader</p><p>后端：spring boot ， mysql ， mybatis ，mybatis-plus ，spring security，jwt，lombok</p><h2 id="新建仓库克隆的时候报错fatal-unable-to-access-‘https-github-com-39-OpenSSL-SSL-read-Connection-was-reset-errno-10054"><a href="#新建仓库克隆的时候报错fatal-unable-to-access-‘https-github-com-39-OpenSSL-SSL-read-Connection-was-reset-errno-10054" class="headerlink" title="新建仓库克隆的时候报错fatal: unable to access ‘https://github.com/...........': OpenSSL SSL_read: Connection was reset, errno 10054"></a>新建仓库克隆的时候报错fatal: unable to access ‘<a href="https://github.com/...........'">https://github.com/...........'</a>: OpenSSL SSL_read: Connection was reset, errno 10054</h2><p>产生原因：一般是这是因为服务器的SSL证书没有经过第三方机构的签署，所以才报错</p><p>按照网上解决办法，解除ssl验证后，再次git即可</p><pre class="line-numbers language-none"><code class="language-none">git config --global http.sslVerify "false"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再次克隆成功！</p><h2 id="克隆仓库报错fatal-unable-to-access-‘xxxxxxxxxxxxxxxx’-OpenSSL-SSL-read-Connection-was-reset-errno-10054"><a href="#克隆仓库报错fatal-unable-to-access-‘xxxxxxxxxxxxxxxx’-OpenSSL-SSL-read-Connection-was-reset-errno-10054" class="headerlink" title="克隆仓库报错fatal: unable to access ‘xxxxxxxxxxxxxxxx’: OpenSSL SSL_read: Connection was reset, errno 10054"></a>克隆仓库报错fatal: unable to access ‘xxxxxxxxxxxxxxxx’: OpenSSL SSL_read: Connection was reset, errno 10054</h2><p>git clone https:xxxxxxxxxxxxx</p><p>改为</p><p>git clone git:xxxxxxxxxxxxx</p><p>克隆成功。</p><h2 id="报错’-gt-’-expected-Vetur-1005-，Cannot-find-name-‘div’-Vetur-2304-，Cannot-find-name-‘template’-Vetur-2304-，Declaration-expected-Vetur-1146-。。。。。。。。"><a href="#报错’-gt-’-expected-Vetur-1005-，Cannot-find-name-‘div’-Vetur-2304-，Cannot-find-name-‘template’-Vetur-2304-，Declaration-expected-Vetur-1146-。。。。。。。。" class="headerlink" title="报错’>’ expected.Vetur(1005)，Cannot find name ‘div’.Vetur(2304)，Cannot find name ‘template’.Vetur(2304)，Declaration expected.Vetur(1146)。。。。。。。。"></a>报错’&gt;’ expected.Vetur(1005)，Cannot find name ‘div’.Vetur(2304)，Cannot find name ‘template’.Vetur(2304)，Declaration expected.Vetur(1146)。。。。。。。。</h2><p>昨天vue项目还好好的今天不知道怎么飘了这么多红，点开一看还有上述报错，项目也能运行，迷惑。。。</p><p><img src="/2021/09/21/shequ/3.png" alt="3"></p><p>遗憾的时最后也没找到原因，只好将警告去掉了。</p><p>首先点击设置</p><p><img src="/2021/09/21/shequ/4.png" alt="4"></p><p>然后搜索vetur，拉到最下，去掉三个对勾。</p><p><img src="/2021/09/21/shequ/5.png" alt="5"></p><p>好了飘红成功消失，遗憾的是不清楚原因。</p><p>改完bug代码存放地址</p><p><a href="https://github.com/HuXiaozz/luntan">https://github.com/HuXiaozz/luntan</a></p><p>最后表现结果截图</p><p><img src="/2021/09/21/shequ/1.png" alt="主界面截图"></p><p><img src="/2021/09/21/shequ/2.png" alt="个人中心截图"></p><p>完结撒花！</p><p><img src="/2021/09/21/shequ/10-2.jpg" alt="心情美美哒"></p>]]></content>
      
      
      
        <tags>
            
            <tag> spring boot </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>标注图片环境</title>
      <link href="/2021/09/20/python-huan-jing/"/>
      <url>/2021/09/20/python-huan-jing/</url>
      
        <content type="html"><![CDATA[<h2 id="在Anaconda-prompt中创建，激活，删除python虚拟环境"><a href="#在Anaconda-prompt中创建，激活，删除python虚拟环境" class="headerlink" title="在Anaconda prompt中创建，激活，删除python虚拟环境"></a>在Anaconda prompt中创建，激活，删除python虚拟环境</h2><p>conda create -n 环境名称，直接默认anaconda所用的python版本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#创建虚拟环境，python=3 可以精确到3.x某版本</span>conda create <span class="token operator">-</span>n 虚拟环境名称 python<span class="token operator">=</span><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>切换python虚拟环境，在命令行或者anaconda prompt中输入：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Linux系统:<span class="token builtin class-name">source</span> activate 虚拟环境名称  Windows:activate 虚拟环境名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在anaconda中删除python虚拟环境</p><pre class="line-numbers language-none"><code class="language-none">conda remove -n 虚拟环境名称 --all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装labelme软件"><a href="#安装labelme软件" class="headerlink" title="安装labelme软件"></a>安装labelme软件</h2><p>(1)  打开cmd，anaconda打开anaconda prompt</p><p>(2)  复制粘贴命令：pip install labelme</p><p>打开cmd，anaconda打开anaconda prompt</p><p>复制粘贴命令：labelme，即可打开labelme软件</p><p>cmd窗口与打开的labelme软件窗口如下：</p><p><img src="/2021/09/20/python-huan-jing/1.png" alt="labelme界面"></p><p>使用教程在网上搜一下就好了，如下：</p><p>labelme使用教程：<a href="https://blog.csdn.net/fengyingv/article/details/110649612">https://blog.csdn.net/fengyingv/article/details/110649612</a></p><h2 id="labelImg安装"><a href="#labelImg安装" class="headerlink" title="labelImg安装"></a>labelImg安装</h2><p>(1)  打开cmd，anaconda打开anaconda prompt</p><p>(2)  复制粘贴命令：pip install labelImg</p><p>打开cmd，anaconda打开anaconda prompt</p><p>复制粘贴命令：labelImg，即可打开labelImg软件</p><p>cmd窗口与打开的labelme软件窗口如下：</p><p><img src="/2021/09/20/python-huan-jing/2.png" alt="2"></p><h2 id="conda常用命令"><a href="#conda常用命令" class="headerlink" title="conda常用命令"></a>conda常用命令</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">conda <span class="token builtin">list</span>    <span class="token comment">#查看安装了那些包</span>conda env <span class="token builtin">list</span> <span class="token comment">#查看创建了那些虚拟环境</span>conda updata conda <span class="token comment">#更新conda</span>python <span class="token operator">-</span><span class="token operator">-</span>version <span class="token comment">#查看python版本</span>激活虚拟环境linux：source activate 虚拟环境名称windows： activate 虚拟环境名称conda install <span class="token operator">-</span>n 虚拟环境名称 <span class="token punctuation">[</span>package<span class="token punctuation">]</span> <span class="token comment">#安装package到指定虚拟环境中</span>关闭虚拟环境linux：source deactivatewindows：deactivateconda remove <span class="token operator">-</span>n 虚拟环境名称 <span class="token operator">-</span><span class="token operator">-</span><span class="token builtin">all</span> <span class="token comment">#删除虚拟环境</span>conda remove <span class="token operator">-</span><span class="token operator">-</span>name 虚拟环境名称 包的名称      <span class="token comment">#删除虚拟环境中的某个包</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完结撒花！！！</p><p><img src="/2021/09/20/python-huan-jing/9.2701.jpg" alt="图"></p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> anconda </tag>
            
            <tag> 环境 </tag>
            
            <tag> labelme </tag>
            
            <tag> labelImg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo和matery主题搭建静态博客</title>
      <link href="/2021/09/17/hello-world/"/>
      <url>/2021/09/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>下面是如何搭建hexo和matery主题的静态博客。</p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><table><thead><tr><th><strong>配置选项</strong></th><th><strong>默认值</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code>中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code>中的某个值</td><td>文章特征图</td></tr><tr><td>top</td><td>true</td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td>false</td><td>表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td>表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code>的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td>true</td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td>false</td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr></tbody></table><p>实列</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 基于Hexo的matery主题搭建博客<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-01-09 16:44:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 微笑紫瞳星<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> 工具<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> blog  <span class="token punctuation">-</span> hexo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>hexo n “xxx” 创建md</p><h2 id="关于hexo中主题Matery中网易云歌单不显示问题"><a href="#关于hexo中主题Matery中网易云歌单不显示问题" class="headerlink" title="关于hexo中主题Matery中网易云歌单不显示问题"></a>关于hexo中主题Matery中网易云歌单不显示问题</h2><p>网易云只能使用公共歌单，私人的歌单要登陆才行，我去github提交issue得到的答案，你可以试试这个歌单号 330695641   这是一个公共歌单。<br><a href="https://music.163.com/#/playlist?id=330695641">https://music.163.com/#/playlist?id=330695641</a></p><p>你可以按照上面方法解决一下。成功了评论我一下，谢谢啦！</p><p>emm，反正我还是没成功，我用其他的音乐歌单都可以，现在还是在用qq音乐。</p><h2 id="用hexo和Matery搭建个人静态博客"><a href="#用hexo和Matery搭建个人静态博客" class="headerlink" title="用hexo和Matery搭建个人静态博客"></a>用hexo和Matery搭建个人静态博客</h2><p>我搭建的时候参考了下面的链接，第一个链接去看去和使用git和github，但是第一个链接使用next主题，要想搭建matery主题参考第二个链接。</p><p>参考：<a href="https://zhuanlan.zhihu.com/p/102592286">https://zhuanlan.zhihu.com/p/102592286</a></p><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md</a></p><p>通过上面两个网址就可以完美的搭建出自己的静态博客了</p><p>但是如果你要搭建Matery主题博客时，这个博客里没有集成评论系统</p><p>我使用的是Valine做的评论系统，matery开发者大佬在其config中说到最好不要用gitalk，会导致别人攻击将你github，可能会将你的评论内容删除，</p><p>valine做评论参考下面链接</p><p><a href="https://blog.csdn.net/blue_zy/article/details/79071414">https://blog.csdn.net/blue_zy/article/details/79071414</a></p><p>如果要内嵌图片的话要使用下面样式的链接，同时安装npm install hexo-asset-image –save</p><p>参考链接：<a href="https://blog.csdn.net/u010996565/article/details/89196612">https://blog.csdn.net/u010996565/article/details/89196612</a></p><p>同时会创建一个文件，将图片放入该文件，如下方式引用</p><pre class="line-numbers language-none"><code class="language-none">![2](hello-world/2.png)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/09/17/hello-world/2.jpg" alt="美图镇贴"></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> matery </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
